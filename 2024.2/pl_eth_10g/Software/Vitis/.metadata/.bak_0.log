!SESSION 2025-06-04 14:17:33.377 -----------------------------------------------
eclipse.buildId=2024.2
java.version=11.0.16.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -os linux -ws gtk -arch x86_64

!ENTRY org.eclipse.osgi 4 0 2025-06-04 14:17:33.701
!MESSAGE Bundle reference:file:org.apache.log4j_1.2.15.v201012070815.jar not found.

!ENTRY org.eclipse.osgi 4 0 2025-06-04 14:17:33.718
!MESSAGE Bundle reference:file:org.slf4j.impl.log4j12_1.7.2.v20131105-2200.jar not found.

!ENTRY org.eclipse.ui 4 4 2025-06-04 14:18:54.557
!MESSAGE Plug-in 'org.eclipse.ui.editors' contributed an invalid Menu Extension (Path: 'navigate' is invalid): org.eclipse.ui.edit.text.gotoLastEditPosition

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:19:06.214
!MESSAGE XSCT Command: [::hsi::utils::init_repo], Thread: Worker-0: Initializing s/w repositories

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:19:06.214
!MESSAGE XSCT Command: [set sdk::sdk_chan tcfchan#0], Thread: Thread-20

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:19:06.215
!MESSAGE XSCT Command: [plnx-install-path  ; ::scw::scw_mode gui], Thread: Thread-21

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:19:06.375
!MESSAGE XSCT command with result: [::hsi::utils::init_repo], Result: [null, ]. Thread: Worker-0: Initializing s/w repositories

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:19:06.376
!MESSAGE XSCT command with result: [set sdk::sdk_chan tcfchan#0], Result: [null, tcfchan#0]. Thread: Thread-20

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:19:06.376
!MESSAGE XSCT command with result: [plnx-install-path  ; ::scw::scw_mode gui], Result: [null, ]. Thread: Thread-21

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:19:06.376
!MESSAGE XSCT Command: [set query_var1 $::env(RDI_DATADIR)], Thread: Worker-0: Initializing s/w repositories

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:19:06.377
!MESSAGE XSCT Command: [setws /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis], Thread: Thread-20

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:19:06.378
!MESSAGE XSCT command with result: [set query_var1 $::env(RDI_DATADIR)], Result: [null, /home/elya/Xilinx/SharedData/2024.2/data:/home/elya/Xilinx/Vitis/2024.2/data]. Thread: Worker-0: Initializing s/w repositories

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:19:06.378
!MESSAGE XSCT command with result: [setws /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis], Result: [null, ]. Thread: Thread-20

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:10.281
!MESSAGE XSCT Command: [::hsi::utils::get_all_app_details -json], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:10.289
!MESSAGE XSCT command with result: [::hsi::utils::get_all_app_details -json], Result: [null, {"memory_tests": {"userdefname": "Memory Tests",
"description": "This application tests Memory Regions present in the hardware.",
"supp_proc": "microblaze ps7_cortexa9 psu_cortexa53 psu_cortexr5 psv_cortexa72 psv_cortexr5 psxl_cortexa78 psxl_cortexr52 psx_cortexa78 psx_cortexr52 microblaze_riscv",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/memory_tests",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"zynq_dram_test": {"userdefname": "Zynq DRAM tests",
"description": "This application runs out of OCM and performs memory tests and read/write eye measurements on Zynq DRAM.  For more information about the test, refer to ZYNQ_DRAM_DIAGNOSTICS_TEST.docx, in the src directory of the application",
"supp_proc": "ps7_cortexa9",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/zynq_dram_test",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"lwip_udp_perf_server": {"userdefname": "lwIP UDP Perf Server",
"description": "The LwIP UDP Perf Server application is used for creating UDP server and measure downlink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10, with MAC address 00:0a:35:00:01:02. The application creates UDP server on board and starts listening for UDP client connections. It will display client connection information with interim and average UDP statistics for data transfer.",
"supp_proc": "psx_cortexa78 psx_cortexr52 psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/lwip_udp_perf_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"libmetal_echo_demo": {"userdefname": "Libmetal AMP Demo",
"description": "Libmetal AMP Application",
"supp_proc": "psu_cortexr5 psv_cortexr5 psxl_cortexr52 psx_cortexr52",
"supp_os": "freertos10_xilinx standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/libmetal_echo_demo",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"freertos_hello_world": {"userdefname": "FreeRTOS Hello World",
"description": " FreeRTOS Hello World application",
"supp_proc": "psu_cortexr5 psv_cortexr5 ps7_cortexa9 psu_cortexa53 microblaze psv_cortexa72 psxl_cortexr52 psx_cortexr52 psx_cortexa78 psxl_cortexa78",
"supp_os": "freertos10_xilinx",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/freertos_hello_world",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"zynq_fsbl": {"userdefname": "Zynq FSBL",
"description": "First Stage Bootloader (FSBL) for Zynq. The FSBL configures the FPGA with HW bit stream (if it exists)  and loads the Operating System (OS) Image or Standalone (SA) Image or 2nd Stage Boot Loader image from the  non-volatile memory (NAND/NOR/QSPI) to RAM (DDR) and starts executing it.  It supports multiple partitions,  and each partition can be a code image or a bit stream.",
"supp_proc": "ps7_cortexa9",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/zynq_fsbl",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"ddr_self_refresh": {"userdefname": "DDR self refresh",
"description": "This DDR self refresh application provides a simple demonstration of how to enter to/exit from DDR self refresh mode. This application runs on R5 out of TCM.",
"supp_proc": "psu_cortexr5",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/ddr_self_refresh",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"lwip_udp_perf_client": {"userdefname": "lwIP UDP Perf Client",
"description": "The LwIP UDP Perf Client application is used for creating UDP client and measure UDP uplink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10, with MAC address 00:0a:35:00:01:02. This application creates UDP client on board and make connection with UDP server running on host machine. It will display connection information along with interim and average UDP statistics for data transfer.",
"supp_proc": "psx_cortexa78 psx_cortexr52 psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/lwip_udp_perf_client",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"zynqmp_fsbl": {"userdefname": "Zynq MP FSBL",
"description": "First Stage Bootloader (FSBL) for Zynq Ultrascale+ MPSoC. The FSBL configures the FPGA with HW bit stream (if it exists)  and loads the Operating System (OS) Image or Standalone (SA) Image or 2nd Stage Boot Loader image from the  non-volatile memory (NAND/SD/QSPI) to RAM (DDR) and takes A53/R5 out of reset.  It supports multiple partitions,  and each partition can be a code image or a bit stream.",
"supp_proc": "psu_cortexa53 psu_cortexr5",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/zynqmp_fsbl",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"openamp_echo_test": {"userdefname": "OpenAMP echo-test",
"description": " OpenAMP echo-test application ",
"supp_proc": "psu_cortexr5 psv_cortexr5 psxl_cortexr52 psx_cortexr52",
"supp_os": "freertos10_xilinx standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/openamp_echo_test",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"freertos_lwip_tcp_perf_server": {"userdefname": "FreeRTOS lwIP TCP Perf Server",
"description": "The FreeRTOS LwIP TCP Server application is used for creating TCP server using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10 and IPv6 link local address when ipv6_enable is true, with MAC address 00:0a:35:00:01:02. The application creates TCP server on board and starts listening for TCP client connections. It will display client connection info and also display interim and average TCP statistics for data transfer. This application handles only 1 client connection at a time.",
"supp_proc": "psx_cortexa78 psx_cortexr52 psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "freertos10_xilinx",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/freertos_lwip_tcp_perf_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"zynqmp_pmufw": {"userdefname": "ZynqMP PMU Firmware",
"description": "Platform Management Unit Firmware for ZynqMP.",
"supp_proc": "psu_pmu",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/zynqmp_pmufw",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"srec_spi_bootloader": {"userdefname": "SREC SPI Bootloader",
"description": "Simple bootloader for loading SREC images from non volatile memory (SPI). This program assumes that you have an SREC image programmed into SPI flash already. The program also assumes that the target SREC image is an application for this processor that does not overlap the bootloader and resides in separate physical memory in the hardware. Typically this application is initialized into BRAM so that it bootloads the SREC image when the FPGA is powered up.

Don't forget to modify blconfig.h to reflect the offset where your SREC image resides in non-volatile memory!",
"supp_proc": "microblaze microblaze_riscv",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/srec_spi_bootloader",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"versal_plm": {"userdefname": "versal PLM",
"description": "Platform Loader and Manager for versal and versal net.",
"supp_proc": "psu_pmc psv_pmc psxl_pmc psx_pmc",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/versal_plm",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"freertos_lwip_echo_server": {"userdefname": "FreeRTOS lwIP Echo Server",
"description": "The FreeRTOS lwIP Echo Server application provides a simple demonstration of how to use the light-weight IP stack (lwIP) with FreeRTOS. This application sets up the board to use IP address 192.168.1.10 or IPv6 address FE80:0:0:0:20A:35FF:FE00:102, with MAC address 00:0a:35:00:01:02. The server listens for input at port 7 and simply echoes back whatever data is sent to that port.",
"supp_proc": "psx_cortexa78 psx_cortexr52 psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "freertos10_xilinx",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/freertos_lwip_echo_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"rsa_auth_app": {"userdefname": "RSA Authentication App",
"description": "Used to RSA authenticate a user application",
"supp_proc": "ps7_cortexa9",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/rsa_auth_app",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"freertos_lwip_tcp_perf_client": {"userdefname": "FreeRTOS lwIP TCP Perf Client",
"description": "The FreeRTOS LwIP TCP Perf Client application is used for creating TCP client and measure TCP uplink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10 and IPv6 link local address whenipv6_enable is true, with MAC address 00:0a:35:00:01:02. This application creates TCP client on board and make connection with TCP server running on host machine. It will display connection information along with interim and average TCP statistics for data transfer.",
"supp_proc": "psx_cortexa78 psx_cortexr52 psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "freertos10_xilinx",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/freertos_lwip_tcp_perf_client",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"mba_fs_boot": {"userdefname": "mba_fs_boot",
"description": "fs-boot for microblaze by Xilinx Inc..",
"supp_proc": "microblaze",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/mba_fs_boot",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"freertos_lwip_udp_perf_server": {"userdefname": "FreeRTOS lwIP UDP Perf Server",
"description": "The FreeRTOS LwIP UDP Perf Server application is used for creating UDP server and measure downlink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10, with MAC address 00:0a:35:00:01:02. The application creates UDP server on board and starts listening for UDP client connections. It will display client connection information with interim and average UDP statistics for data transfer.",
"supp_proc": "psx_cortexa78 psx_cortexr52 psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "freertos10_xilinx",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/freertos_lwip_udp_perf_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"srec_bootloader": {"userdefname": "SREC Bootloader",
"description": "Simple bootloader for loading SREC images from non volatile memory. This program assumes that you have an SREC image programmed into BPI flash. The program also assumes that the target SREC image is an application for this processor that does not overlap the bootloader and resides in separate physical memory in the hardware. Typically this application is initialized into BRAM so that it bootloads the SREC image when the FPGA is powered up.

Don't forget to modify blconfig.h to reflect the physical address where your SREC image resides in non-volatile memory!",
"supp_proc": "microblaze microblaze_riscv",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/srec_bootloader",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"openamp_rpc_demo": {"userdefname": "OpenAMP RPC Demo",
"description": " OpenAMP rpc-demo application ",
"supp_proc": "psu_cortexr5 psv_cortexr5 psxl_cortexr52 psx_cortexr52",
"supp_os": "freertos10_xilinx standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/openamp_rpc_demo",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"peripheral_tests": {"userdefname": "Peripheral Tests",
"description": "Simple test routines for all peripherals in the hardware.",
"supp_proc": "ps7_cortexa9 psu_cortexa53 psu_cortexr5 microblaze psv_cortexa72 psv_cortexr5 psxl_cortexa78 psxl_cortexr52 psx_cortexa78 psx_cortexr52 microblaze_riscv",
"supp_os": "standalone xilkernel",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/peripheral_tests",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"freertos_lwip_udp_perf_client": {"userdefname": "FreeRTOS lwIP UDP Perf Client",
"description": "The FreeRTOS LwIP UDP Perf Client application is used for creating UDP client and measure UDP uplink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10, with MAC address 00:0a:35:00:01:02. This application creates UDP client on board and make connection with UDP server running on host machine. It will display connection information along with interim and average UDP statistics for data transfer.",
"supp_proc": "psx_cortexa78 psx_cortexr52 psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "freertos10_xilinx",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/freertos_lwip_udp_perf_client",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"hello_world": {"userdefname": "Hello World",
"description": "Let's say 'Hello World' in C.",
"supp_proc": "microblaze ps7_cortexa9 psu_cortexa53 psu_cortexr5 psu_cortexa72 psv_cortexr5 psv_cortexa72 psxl_cortexa78 psxl_cortexr52 psx_cortexa78 psx_cortexr52 microblaze_riscv",
"supp_os": "standalone xilkernel",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/hello_world",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"zynqmp_dram_test": {"userdefname": "Zynq MP DRAM tests",
"description": "This application runs out of OCM and performs memory tests on Zynq MP DRAM.  For more information about the test, refer to ZYNQMP_DRAM_DIAGNOSTICS_TEST.docx, in the src directory of the application",
"supp_proc": "psu_cortexa53",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/zynqmp_dram_test",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"imgsel": {"userdefname": "Image Selector",
"description": "ImgSel for Zynq Ultrascale+ MPSoC / Versal. The Image Selector  selects the image based on configuration parameters",
"supp_proc": "psu_cortexa53 psu_pmc psv_pmc",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/imgsel",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"img_rcvry": {"userdefname": "Image Recovery",
"description": "Image Recovery tool which writes  user selected images on the board.",
"supp_proc": "psu_cortexa53",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/img_rcvry",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"empty_application": {"userdefname": "Empty Application(C)",
"description": "A blank C project.",
"supp_proc": "microblaze ps7_cortexa9 psu_cortexa53 psu_cortexr5 psu_cortexa72 psv_cortexr5 psv_cortexa72 psxl_cortexa78 psxl_cortexr52 psx_cortexa78 psx_cortexr52 microblaze_riscv",
"supp_os": "standalone xilkernel freertos10_xilinx",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/empty_application",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"lwip_tcp_perf_server": {"userdefname": "lwIP TCP Perf Server",
"description": "The LwIP TCP Perf Server application is used for creating TCP server and measure downlink performance using light-weight IP stack (lwIP). This application sets up the board to use default IPv4 address 192.168.1.10 and IPv6 link local address when ipv6_enable is true, with MAC address 00:0a:35:00:01:02. The application creates TCP server on board and starts listening for TCP client connections. It will display client connection information with interim and average TCP statistics for data transfer.",
"supp_proc": "psx_cortexa78 psx_cortexr52 psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/lwip_tcp_perf_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"dhrystone": {"userdefname": "Dhrystone",
"description": "Dhrystone synthetic benchmark program for baremetal environment.",
"supp_proc": "microblaze psu_cortexa53 ps7_cortexa9 psv_cortexa72 psu_cortexr5 psv_cortexr5 microblaze_riscv",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/dhrystone",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"lwip_echo_server": {"userdefname": "lwIP Echo Server",
"description": "The lwIP Echo Server application provides a simple demonstration of how to use the light-weight IP stack (lwIP). This application sets up the board to use IP address 192.168.1.10 or IPv6 FE80:0:0:0:20A:35FF:FE00:102, with MAC address 00:0a:35:00:01:02. The server listens for input at port 7 and simply echoes back whatever data is sent to that port.",
"supp_proc": "psx_cortexa78 psx_cortexr52 psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/lwip_echo_server",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"openamp_matrix_multiply": {"userdefname": "OpenAMP matrix multiplication Demo",
"description": " OpenAMP matrix multiplication application ",
"supp_proc": "psu_cortexr5 psv_cortexr5 psxl_cortexr52 psx_cortexr52",
"supp_os": "freertos10_xilinx standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/openamp_matrix_multiply",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"lwip_tcp_perf_client": {"userdefname": "lwIP TCP Perf Client",
"description": "The LwIP TCP Perf Client application is used for creating TCP client and measure TCP uplink performance using light-weight IP stack (lwIP). This application sets up the board to use default IP address 192.168.1.10 and IPv6 link local address when ipv6_enable is true, with MAC address 00:0a:35:00:01:02. This application creates TCP client on board and make connection with TCP server running on host machine. It will display connection information along with interim and average TCP statistics for data transfer.",
"supp_proc": "psx_cortexa78 psx_cortexr52 psv_cortexa72 psv_cortexr5 psu_cortexa53 psu_cortexr5 ps7_cortexa9 microblaze",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/lwip_tcp_perf_client",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"versal_psmfw": {"userdefname": "versal PSM Firmware",
"description": "Processing System Management Unit Firmware for versal.",
"supp_proc": "psu_psm psv_psm psxl_psm psx_psm",
"supp_os": "standalone",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps/versal_psmfw",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "true",
},
"linux_hello_world": {"userdefname": "Linux Hello World",
"description": "Let's say 'Hello World' in C.",
"supp_proc": "ps7_cortexa9 psu_cortexa53 microblaze psv_cortexa72",
"supp_os": "linux",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps_linux/linux_hello_world",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
"linux_empty_app": {"userdefname": "Linux Empty Application",
"description": "A blank Linux C project.",
"supp_proc": "ps7_cortexa9 psu_cortexa53 microblaze psv_cortexa72",
"supp_os": "linux",
"path": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/sw_apps_linux/linux_empty_app",
"os": "linux",
"platform_required": NO,
"bsp_constraints": "false",
},
}]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:10.326
!MESSAGE XSCT Command: [::hsi::utils::openhw /tmp/hwspec_hw14143138426335054041/hw.xsa], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:15.533
!MESSAGE XSCT command with result: [::hsi::utils::openhw /tmp/hwspec_hw14143138426335054041/hw.xsa], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:24.593
!MESSAGE XSCT Command: [::hsi::utils::openhw /home/elya/Xilinx/Vitis/2024.2/base_platforms/xilinx_zcu102_base_202420_1/hw/hw.xsa], Thread: ModalContext

!ENTRY org.eclipse.launchbar.core 2 0 2025-06-04 14:20:25.847
!MESSAGE Enablement expression is missing for descriptor type org.eclipse.cdt.debug.core.coreBuildDescriptorType

!ENTRY org.eclipse.launchbar.core 2 0 2025-06-04 14:20:25.848
!MESSAGE Enablement expression is missing for config provider for org.eclipse.cdt.debug.core.coreBuildDescriptorType

!ENTRY org.eclipse.launchbar.core 2 0 2025-06-04 14:20:25.848
!MESSAGE Enablement expression is missing for config provider for org.eclipse.cdt.debug.core.coreBuildDescriptorType

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:29.738
!MESSAGE XSCT command with result: [::hsi::utils::openhw /home/elya/Xilinx/Vitis/2024.2/base_platforms/xilinx_zcu102_base_202420_1/hw/hw.xsa], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:29.739
!MESSAGE XSCT Command: [::hsi::utils::openhw /home/elya/Xilinx/Vitis/2024.2/base_platforms/xilinx_zcu102_base_202420_1/hw/hw.xsa], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:29.740
!MESSAGE XSCT command with result: [::hsi::utils::openhw /home/elya/Xilinx/Vitis/2024.2/base_platforms/xilinx_zcu102_base_202420_1/hw/hw.xsa], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:29.741
!MESSAGE XSCT Command: [::hsi::utils::generate_app_template -hw /home/elya/Xilinx/Vitis/2024.2/base_platforms/xilinx_zcu102_base_202420_1/hw/hw.xsa -app linux_hello_world -processor psu_cortexa53 -os linux -dir /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/initial_zcu102/src], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:29.768
!MESSAGE XSCT command with result: [::hsi::utils::generate_app_template -hw /home/elya/Xilinx/Vitis/2024.2/base_platforms/xilinx_zcu102_base_202420_1/hw/hw.xsa -app linux_hello_world -processor psu_cortexa53 -os linux -dir /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/initial_zcu102/src], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:29.859
!MESSAGE XSCT Command: [hsi::internal::extract_hw_files -quiet bit mmi bmm -dir {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/initial_zcu102/_ide/bitstream}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:29.865
!MESSAGE XSCT command with result: [hsi::internal::extract_hw_files -quiet bit mmi bmm -dir {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/initial_zcu102/_ide/bitstream}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:29.866
!MESSAGE XSCT Command: [::hsi::utils::get_design_properties -json /home/elya/Xilinx/Vitis/2024.2/base_platforms/xilinx_zcu102_base_202420_1/hw/hw.xsa], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:29.868
!MESSAGE XSCT command with result: [::hsi::utils::get_design_properties -json /home/elya/Xilinx/Vitis/2024.2/base_platforms/xilinx_zcu102_base_202420_1/hw/hw.xsa], Result: [null, {"device": "xczu9eg",
"family": "zynquplus",
"timestamp": "Thu Nov  7 12:36:27 2024",
"vivado_version": "2024.2",
"part": "xczu9eg-ffvb1156-2-e",
}]. Thread: ModalContext

!ENTRY org.eclipse.e4.ui.workbench 4 0 2025-06-04 14:20:30.100
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.part.IntroPart.dispose(IntroPart.java:99)
	at org.eclipse.ui.internal.ViewIntroAdapterPart.dispose(ViewIntroAdapterPart.java:153)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.invalidate(CompatibilityPart.java:260)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.destroy(CompatibilityPart.java:417)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:1002)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:967)
	at org.eclipse.e4.core.internal.di.InjectorImpl.uninject(InjectorImpl.java:200)
	at org.eclipse.e4.core.internal.di.Requestor.uninject(Requestor.java:176)
	at org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.update(ContextObjectSupplier.java:89)
	at org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(TrackableComputationExt.java:105)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.removeListenersTo(EclipseContext.java:491)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.uninject(ContextInjectionFactory.java:184)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:954)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$1(PartRenderingEngine.java:873)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:868)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:852)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.disposeWidget(ElementReferenceRenderer.java:115)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:945)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$1(PartRenderingEngine.java:873)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:868)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:852)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.subscribeTopicToBeRendered(PartRenderingEngine.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$DIEventHandler.handleEvent(EventObjectSupplier.java:92)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:132)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setToBeRendered(UIElementImpl.java:314)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.hidePart(PartServiceImpl.java:1406)
	at org.eclipse.ui.internal.WorkbenchPage.hidePart(WorkbenchPage.java:1537)
	at org.eclipse.ui.internal.WorkbenchPage.hidePart(WorkbenchPage.java:1496)
	at org.eclipse.ui.internal.WorkbenchPage.hideView(WorkbenchPage.java:2609)
	at org.eclipse.ui.internal.WorkbenchIntroManager.closeIntro(WorkbenchIntroManager.java:98)
	at com.xilinx.sdx.ui.utils.SWTUtils.closeWelcomeView(SWTUtils.java:529)
	at com.xilinx.sdx.npw.NewProjectCreationHandler$2.run(NewProjectCreationHandler.java:265)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4930)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4451)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:166)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:368)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:1033)
	at com.xilinx.sdx.npw.NewProjectCreationHandler.execute(NewProjectCreationHandler.java:105)
	at com.xilinx.sdx.npw.NewProjectWizard._createApplicationProject(NewProjectWizard.java:214)
	at com.xilinx.sdx.npw.NewProjectWizard.performFinish(NewProjectWizard.java:161)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:832)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:472)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5687)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1423)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4955)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4448)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at com.xilinx.sdx.npw.OpenApplicationProjectWizardAction.run(OpenApplicationProjectWizardAction.java:27)
	at com.xilinx.sdx.npw.OpenApplicationProjectWizardAction.clicked(OpenApplicationProjectWizardAction.java:44)
	at com.xilinx.ide.product.intro.IDEIntroPart.createApplicationProject(IDEIntroPart.java:529)
	at com.xilinx.ide.product.intro.IDEIntroPart$5.run(IDEIntroPart.java:322)
	at com.xilinx.ide.product.intro.IDEIntroPart$14.mouseUp(IDEIntroPart.java:456)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:224)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5687)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1423)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4955)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4448)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1160)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1049)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at com.xilinx.ide.application.ui.Application.start(Application.java:80)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1420)

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:30.117
!MESSAGE XSCT Command: [::hsi::utils::closehw /tmp/hwspec_hw14143138426335054041/hw.xsa], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 14:20:30.159
!MESSAGE XSCT command with result: [::hsi::utils::closehw /tmp/hwspec_hw14143138426335054041/hw.xsa], Result: [null, ]. Thread: main

!ENTRY org.eclipse.cdt.core 1 0 2025-06-04 14:20:30.319
!MESSAGE Indexed 'initial_zcu102_system' (0 sources, 0 headers) in 0.001 sec: 0 declarations; 0 references; 0 unresolved inclusions; 0 syntax errors; 0 unresolved names (0%)

!ENTRY org.eclipse.cdt.core 1 0 2025-06-04 14:20:30.639
!MESSAGE Indexed 'initial_zcu102' (1 sources, 31 headers) in 0.317 sec: 481 declarations; 1,209 references; 0 unresolved inclusions; 0 syntax errors; 0 unresolved names (0%)

!ENTRY com.xilinx.sdk.utils 1 0 2025-06-04 16:49:15.182
!MESSAGE Opening file dialog using preferences. Current path: /home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/fixed_hwplatforms, Local preference: scw_hwspec, Group preference: null

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 16:50:20.188
!MESSAGE XSCT Command: [::hsi::utils::openhw /tmp/hwspec_pl_eth_10g_wrapper10554012303013595011/pl_eth_10g_wrapper.xsa], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 16:50:24.245
!MESSAGE XSCT command with result: [::hsi::utils::openhw /tmp/hwspec_pl_eth_10g_wrapper10554012303013595011/pl_eth_10g_wrapper.xsa], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 16:50:24.251
!MESSAGE XSCT Command: [::hsi::utils::get_all_periphs -json /tmp/hwspec_pl_eth_10g_wrapper10554012303013595011/pl_eth_10g_wrapper.xsa], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 16:50:24.268
!MESSAGE XSCT command with result: [::hsi::utils::get_all_periphs -json /tmp/hwspec_pl_eth_10g_wrapper10554012303013595011/pl_eth_10g_wrapper.xsa], Result: [null, {"axi_dma_0": {"hier_name": "axi_dma_0",
"type": "axi_dma",
"version": "7.1",
"ip_type": "PERIPHERAL",
},
"axi_gpio_0": {"hier_name": "axi_gpio_0",
"type": "axi_gpio",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"dma_rx_rst": {"hier_name": "dma_rx_rst",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"dma_tx_rst": {"hier_name": "dma_tx_rst",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"rx_data_fifo": {"hier_name": "rx_data_fifo",
"type": "axis_data_fifo",
"version": "2.0",
"ip_type": "BUS",
},
"rx_rst_n": {"hier_name": "rx_rst_n",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"sfp_tx_dis": {"hier_name": "sfp_tx_dis",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"tx_data_fifo": {"hier_name": "tx_data_fifo",
"type": "axis_data_fifo",
"version": "2.0",
"ip_type": "BUS",
},
"tx_rst_n": {"hier_name": "tx_rst_n",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"xlconstant_0": {"hier_name": "xlconstant_0",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"xlconstant_1": {"hier_name": "xlconstant_1",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"xlconstant_2": {"hier_name": "xlconstant_2",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"xxv_ethernet_0": {"hier_name": "xxv_ethernet_0",
"type": "xxv_ethernet",
"version": "4.1",
"ip_type": "PERIPHERAL",
},
"zups_axi_pl_ps": {"hier_name": "zups_axi_pl_ps",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"zups_ps_axi_periph": {"hier_name": "zups_ps_axi_periph",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"zups_rst_ps8_0_99M": {"hier_name": "zups_rst_ps8_0_99M",
"type": "proc_sys_reset",
"version": "5.0",
"ip_type": "PERIPHERAL",
},
"zups_util_vector_logic_0": {"hier_name": "zups_util_vector_logic_0",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"zups_xlconcat_0": {"hier_name": "zups_xlconcat_0",
"type": "xlconcat",
"version": "2.1",
"ip_type": "PERIPHERAL",
},
"zups_zynq_ultra_ps_e_0": {"hier_name": "zups_zynq_ultra_ps_e_0",
"type": "zynq_ultra_ps_e",
"version": "3.5",
"ip_type": "",
},
"psu_axi_interconnect_0": {"hier_name": "psu_axi_interconnect_0",
"type": "psu_axi_interconnect",
"version": "1.0",
"ip_type": "BUS",
},
"psu_coresight_0": {"hier_name": "psu_coresight_0",
"type": "psu_coresight_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_acpu_gic": {"hier_name": "psu_acpu_gic",
"type": "psu_acpu_gic",
"version": "1.0",
"ip_type": "INTERRUPT_CNTLR",
},
"psu_rcpu_gic": {"hier_name": "psu_rcpu_gic",
"type": "psu_rcpu_gic",
"version": "1.0",
"ip_type": "INTERRUPT_CNTLR",
},
"psu_r5_tcm_ram_global": {"hier_name": "psu_r5_tcm_ram_global",
"type": "psu_r5_tcm_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_tcm_ram_0": {"hier_name": "psu_r5_tcm_ram_0",
"type": "psu_r5_tcm_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ocm_ram_0": {"hier_name": "psu_ocm_ram_0",
"type": "psu_ocm_ram_0",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ocm": {"hier_name": "psu_ocm",
"type": "psu_ocm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_btcm": {"hier_name": "psu_r5_1_btcm",
"type": "psu_r5_1_btcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_btcm_global": {"hier_name": "psu_r5_1_btcm_global",
"type": "psu_r5_1_btcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_atcm": {"hier_name": "psu_r5_1_atcm",
"type": "psu_r5_1_atcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_atcm_global": {"hier_name": "psu_r5_1_atcm_global",
"type": "psu_r5_1_atcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm_lockstep": {"hier_name": "psu_r5_0_btcm_lockstep",
"type": "psu_r5_0_btcm_lockstep",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm": {"hier_name": "psu_r5_0_btcm",
"type": "psu_r5_0_btcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm_global": {"hier_name": "psu_r5_0_btcm_global",
"type": "psu_r5_0_btcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm_lockstep": {"hier_name": "psu_r5_0_atcm_lockstep",
"type": "psu_r5_0_atcm_lockstep",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm": {"hier_name": "psu_r5_0_atcm",
"type": "psu_r5_0_atcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm_global": {"hier_name": "psu_r5_0_atcm_global",
"type": "psu_r5_0_atcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_bbram_0": {"hier_name": "psu_bbram_0",
"type": "psu_bbram_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_ram": {"hier_name": "psu_pmu_ram",
"type": "psu_pmu_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_iomodule": {"hier_name": "psu_pmu_iomodule",
"type": "psu_pmu_iomodule",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_global_0": {"hier_name": "psu_pmu_global_0",
"type": "psu_pmu_global_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_mbistjtag": {"hier_name": "psu_mbistjtag",
"type": "psu_mbistjtag",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rsa": {"hier_name": "psu_rsa",
"type": "psu_rsa",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_efuse": {"hier_name": "psu_efuse",
"type": "psu_efuse",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_csu_0": {"hier_name": "psu_csu_0",
"type": "psu_csu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_csu_wdt": {"hier_name": "psu_csu_wdt",
"type": "psu_wdt",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_csudma": {"hier_name": "psu_csudma",
"type": "psu_csudma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_smmu_gpv": {"hier_name": "psu_smmu_gpv",
"type": "psu_smmu_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_gpv": {"hier_name": "psu_fpd_gpv",
"type": "psu_fpd_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_cci_gpv": {"hier_name": "psu_cci_gpv",
"type": "psu_cci_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_slcr_secure": {"hier_name": "psu_fpd_slcr_secure",
"type": "psu_fpd_slcr_secure",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_slcr": {"hier_name": "psu_fpd_slcr",
"type": "psu_fpd_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_smmu_reg": {"hier_name": "psu_smmu_reg",
"type": "psu_smmu_reg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_cci_reg": {"hier_name": "psu_cci_reg",
"type": "psu_cci_reg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_xmpu_cfg": {"hier_name": "psu_fpd_xmpu_cfg",
"type": "psu_fpd_xmpu_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apu": {"hier_name": "psu_apu",
"type": "psu_apu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_7": {"hier_name": "psu_gdma_7",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_6": {"hier_name": "psu_gdma_6",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_5": {"hier_name": "psu_gdma_5",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_4": {"hier_name": "psu_gdma_4",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_3": {"hier_name": "psu_gdma_3",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_2": {"hier_name": "psu_gdma_2",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_1": {"hier_name": "psu_gdma_1",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_0": {"hier_name": "psu_gdma_0",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_xmpu_sink": {"hier_name": "psu_fpd_xmpu_sink",
"type": "psu_fpd_xmpu_sink",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_dpdma": {"hier_name": "psu_dpdma",
"type": "psu_dpdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gpu": {"hier_name": "psu_gpu",
"type": "psu_gpu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_dp": {"hier_name": "psu_dp",
"type": "psu_dp",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_5": {"hier_name": "psu_apm_5",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_serdes": {"hier_name": "psu_serdes",
"type": "psu_serdes",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_siou": {"hier_name": "psu_siou",
"type": "psu_siou",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_5": {"hier_name": "psu_afi_5",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_4": {"hier_name": "psu_afi_4",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_3": {"hier_name": "psu_afi_3",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_2": {"hier_name": "psu_afi_2",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_1": {"hier_name": "psu_afi_1",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_0": {"hier_name": "psu_afi_0",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_crf_apb": {"hier_name": "psu_crf_apb",
"type": "psu_crf_apb",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie_dma": {"hier_name": "psu_pcie_dma",
"type": "psu_pcie_dma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie_low": {"hier_name": "psu_pcie_low",
"type": "psu_pcie",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie_high1": {"hier_name": "psu_pcie_high1",
"type": "psu_pcie",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie_high2": {"hier_name": "psu_pcie_high2",
"type": "psu_pcie",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie": {"hier_name": "psu_pcie",
"type": "psu_pcie",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie_attrib_0": {"hier_name": "psu_pcie_attrib_0",
"type": "psu_pcie_attrib_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_sata": {"hier_name": "psu_sata",
"type": "psu_sata",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_0": {"hier_name": "psu_apm_0",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_qos_ctrl": {"hier_name": "psu_ddr_qos_ctrl",
"type": "psu_ddr_qos_ctrl",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_phy": {"hier_name": "psu_ddr_phy",
"type": "psu_ddr_phy",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu5_cfg": {"hier_name": "psu_ddr_xmpu5_cfg",
"type": "psu_ddr_xmpu5_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu4_cfg": {"hier_name": "psu_ddr_xmpu4_cfg",
"type": "psu_ddr_xmpu4_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu3_cfg": {"hier_name": "psu_ddr_xmpu3_cfg",
"type": "psu_ddr_xmpu3_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu2_cfg": {"hier_name": "psu_ddr_xmpu2_cfg",
"type": "psu_ddr_xmpu2_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu1_cfg": {"hier_name": "psu_ddr_xmpu1_cfg",
"type": "psu_ddr_xmpu1_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu0_cfg": {"hier_name": "psu_ddr_xmpu0_cfg",
"type": "psu_ddr_xmpu0_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_7": {"hier_name": "psu_adma_7",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_6": {"hier_name": "psu_adma_6",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_5": {"hier_name": "psu_adma_5",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_4": {"hier_name": "psu_adma_4",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_3": {"hier_name": "psu_adma_3",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_2": {"hier_name": "psu_adma_2",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_1": {"hier_name": "psu_adma_1",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_0": {"hier_name": "psu_adma_0",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ocm_xmpu_cfg": {"hier_name": "psu_ocm_xmpu_cfg",
"type": "psu_ocm_xmpu_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rtc": {"hier_name": "psu_rtc",
"type": "psu_rtc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ams": {"hier_name": "psu_ams",
"type": "psu_ams",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_2": {"hier_name": "psu_apm_2",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_1": {"hier_name": "psu_apm_1",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_usb_0": {"hier_name": "psu_usb_0",
"type": "psu_usb",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_usb_xhci_0": {"hier_name": "psu_usb_xhci_0",
"type": "psu_usb_xhci",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_xppu_sink": {"hier_name": "psu_lpd_xppu_sink",
"type": "psu_lpd_xppu_sink",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_6": {"hier_name": "psu_afi_6",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rpu": {"hier_name": "psu_rpu",
"type": "psu_rpu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_xppu": {"hier_name": "psu_lpd_xppu",
"type": "psu_lpd_xppu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_crl_apb": {"hier_name": "psu_crl_apb",
"type": "psu_crl_apb",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_slcr_secure": {"hier_name": "psu_lpd_slcr_secure",
"type": "psu_lpd_slcr_secure",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_slcr": {"hier_name": "psu_lpd_slcr",
"type": "psu_lpd_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_0": {"hier_name": "psu_ipi_0",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_1": {"hier_name": "psu_ipi_1",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_2": {"hier_name": "psu_ipi_2",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_3": {"hier_name": "psu_ipi_3",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_4": {"hier_name": "psu_ipi_4",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_5": {"hier_name": "psu_ipi_5",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_6": {"hier_name": "psu_ipi_6",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ctrl_ipi": {"hier_name": "psu_ctrl_ipi",
"type": "PERIPHERAL",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_message_buffers": {"hier_name": "psu_message_buffers",
"type": "PERIPHERAL",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_s": {"hier_name": "psu_iou_s",
"type": "psu_iou_s",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_scntrs": {"hier_name": "psu_iou_scntrs",
"type": "psu_iou_scntrs",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_scntr": {"hier_name": "psu_iou_scntr",
"type": "psu_iou_scntr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iousecure_slcr": {"hier_name": "psu_iousecure_slcr",
"type": "psu_iousecure_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iouslcr_0": {"hier_name": "psu_iouslcr_0",
"type": "psu_iouslcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_ddr_0": {"hier_name": "psu_r5_ddr_0",
"type": "psu_ddr",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ddr_0": {"hier_name": "psu_ddr_0",
"type": "psu_ddr",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ddr_1": {"hier_name": "psu_ddr_1",
"type": "psu_ddr",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ddrc_0": {"hier_name": "psu_ddrc_0",
"type": "psu_ddrc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_sd_1": {"hier_name": "psu_sd_1",
"type": "psu_sd",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_wdt_0": {"hier_name": "psu_wdt_0",
"type": "psu_wdt",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_wdt_1": {"hier_name": "psu_wdt_1",
"type": "psu_wdt",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ttc_3": {"hier_name": "psu_ttc_3",
"type": "psu_ttc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ttc_2": {"hier_name": "psu_ttc_2",
"type": "psu_ttc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ttc_1": {"hier_name": "psu_ttc_1",
"type": "psu_ttc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ttc_0": {"hier_name": "psu_ttc_0",
"type": "psu_ttc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_qspi_0": {"hier_name": "psu_qspi_0",
"type": "psu_qspi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ethernet_3": {"hier_name": "psu_ethernet_3",
"type": "psu_ethernet",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gpio_0": {"hier_name": "psu_gpio_0",
"type": "psu_gpio",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_can_1": {"hier_name": "psu_can_1",
"type": "psu_can",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_i2c_1": {"hier_name": "psu_i2c_1",
"type": "psu_i2c",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_i2c_0": {"hier_name": "psu_i2c_0",
"type": "psu_i2c",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_uart_1": {"hier_name": "psu_uart_1",
"type": "psu_uart",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_uart_0": {"hier_name": "psu_uart_0",
"type": "psu_uart",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_qspi_linear_0": {"hier_name": "psu_qspi_linear_0",
"type": "psu_qspi_linear",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_cortexa53_0": {"hier_name": "psu_cortexa53_0",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexa53_1": {"hier_name": "psu_cortexa53_1",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexa53_2": {"hier_name": "psu_cortexa53_2",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexa53_3": {"hier_name": "psu_cortexa53_3",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexr5_0": {"hier_name": "psu_cortexr5_0",
"type": "psu_cortexr5",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexr5_1": {"hier_name": "psu_cortexr5_1",
"type": "psu_cortexr5",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_pmu_0": {"hier_name": "psu_pmu_0",
"type": "psu_pmu",
"version": "9.2",
"ip_type": "PROCESSOR",
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 16:50:24.287
!MESSAGE XSCT Command: [hsi::utils::get_supported_os -json /tmp/hwspec_pl_eth_10g_wrapper10554012303013595011/pl_eth_10g_wrapper.xsa], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 16:50:24.307
!MESSAGE XSCT command with result: [hsi::utils::get_supported_os -json /tmp/hwspec_pl_eth_10g_wrapper10554012303013595011/pl_eth_10g_wrapper.xsa], Result: [null, {"psu_cortexa53_0": {"freertos10_xilinx_v1_16": {"name": "freertos10_xilinx",
"version": "1.16",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.6.1",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_16",
},
"standalone_v9_2": {"name": "standalone",
"version": "9.2",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/bsp/standalone_v9_2",
},
},
"psu_cortexa53_1": {"freertos10_xilinx_v1_16": {"name": "freertos10_xilinx",
"version": "1.16",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.6.1",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_16",
},
"standalone_v9_2": {"name": "standalone",
"version": "9.2",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/bsp/standalone_v9_2",
},
},
"psu_cortexa53_2": {"freertos10_xilinx_v1_16": {"name": "freertos10_xilinx",
"version": "1.16",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.6.1",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_16",
},
"standalone_v9_2": {"name": "standalone",
"version": "9.2",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/bsp/standalone_v9_2",
},
},
"psu_cortexa53_3": {"freertos10_xilinx_v1_16": {"name": "freertos10_xilinx",
"version": "1.16",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.6.1",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_16",
},
"standalone_v9_2": {"name": "standalone",
"version": "9.2",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/bsp/standalone_v9_2",
},
},
"psu_cortexr5_0": {"freertos10_xilinx_v1_16": {"name": "freertos10_xilinx",
"version": "1.16",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.6.1",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_16",
},
"standalone_v9_2": {"name": "standalone",
"version": "9.2",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/bsp/standalone_v9_2",
},
},
"psu_cortexr5_1": {"freertos10_xilinx_v1_16": {"name": "freertos10_xilinx",
"version": "1.16",
"desc": "This Xilinx FreeRTOS port is based on FreeRTOS kernel version 10.6.1",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_16",
},
"standalone_v9_2": {"name": "standalone",
"version": "9.2",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/bsp/standalone_v9_2",
},
},
"psu_pmu_0": {"standalone_v9_2": {"name": "standalone",
"version": "9.2",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "/home/elya/Xilinx/Vitis/2024.2/data/embeddedsw/lib/bsp/standalone_v9_2",
},
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 16:50:24.310
!MESSAGE XSCT Command: [::hsi::utils::get_design_properties -json /tmp/hwspec_pl_eth_10g_wrapper10554012303013595011/pl_eth_10g_wrapper.xsa], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 16:50:24.311
!MESSAGE XSCT command with result: [::hsi::utils::get_design_properties -json /tmp/hwspec_pl_eth_10g_wrapper10554012303013595011/pl_eth_10g_wrapper.xsa], Result: [null, {"device": "xczu9eg",
"family": "zynquplus",
"timestamp": "Fri Feb 14 18:58:29 2025",
"vivado_version": "2024.2",
"part": "xczu9eg-ffvb1156-2-e",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 17:02:32.058
!MESSAGE XSCT Command: [platform create -name {zcu102_platform} -hw {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Hardware/pre-built/pl_eth_10g_wrapper.xsa} -proc {psu_cortexa53} -os {linux} -arch {64-bit} -fsbl-target {psu_cortexa53_0} -out {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis};platform write], Thread: ModalContext

!ENTRY org.eclipse.cdt.core 1 0 2025-06-04 17:02:32.935
!MESSAGE Indexed 'zcu102_platform' (2 sources, 2 headers) in 0.672 sec: 22,374 declarations; 6,518 references; 4 unresolved inclusions; 0 syntax errors; 200 unresolved names (0.69%)

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 17:02:41.659
!MESSAGE XSCT command with result: [platform create -name {zcu102_platform} -hw {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Hardware/pre-built/pl_eth_10g_wrapper.xsa} -proc {psu_cortexa53} -os {linux} -arch {64-bit} -fsbl-target {psu_cortexa53_0} -out {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis};platform write], Result: [null, Successfully saved  the platform at "/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/platform.spr"]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 17:02:41.805
!MESSAGE XSCT Command: [platform read {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/platform.spr}], Thread: Worker-47: Initializing the platform to enable editing

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 17:02:41.815
!MESSAGE XSCT Command: [::hsi::utils::openhw /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa], Thread: Worker-44: Initializing hardware specification UI...

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 17:02:50.213
!MESSAGE XSCT command with result: [platform read {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/platform.spr}], Result: [null, ]. Thread: Worker-47: Initializing the platform to enable editing

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 17:02:50.213
!MESSAGE XSCT command with result: [::hsi::utils::openhw /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa], Result: [null, ]. Thread: Worker-44: Initializing hardware specification UI...

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 17:02:50.214
!MESSAGE XSCT Command: [platform active {zcu102_platform}], Thread: Worker-47: Initializing the platform to enable editing

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 17:02:50.214
!MESSAGE XSCT Command: [::hsi::utils::closehw /tmp/hwspec_pl_eth_10g_wrapper10554012303013595011/pl_eth_10g_wrapper.xsa], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 17:02:50.215
!MESSAGE XSCT command with result: [platform active {zcu102_platform}], Result: [null, ]. Thread: Worker-47: Initializing the platform to enable editing

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-04 17:02:50.275
!MESSAGE XSCT command with result: [::hsi::utils::closehw /tmp/hwspec_pl_eth_10g_wrapper10554012303013595011/pl_eth_10g_wrapper.xsa], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:12:38.988
!MESSAGE XSCT Command: [platform config -remove-boot-bsp], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:12:39.052
!MESSAGE XSCT command with result: [platform config -remove-boot-bsp], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:12:39.060
!MESSAGE XSCT Command: [platform write], Thread: Worker-62: Saving platform

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:12:39.061
!MESSAGE XSCT command with result: [platform write], Result: [null, Successfully saved  the platform at "/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/platform.spr"]. Thread: Worker-62: Saving platform

!ENTRY com.xilinx.sdk.utils 1 0 2025-06-05 10:12:41.540
!MESSAGE Opening file dialog using preferences. Current path: null, Local preference: fsbl, Group preference: platform_editor

!ENTRY com.xilinx.sdk.utils 1 0 2025-06-05 10:12:41.540
!MESSAGE Preference loaded using local preference: null

!ENTRY com.xilinx.sdk.utils 1 0 2025-06-05 10:12:41.540
!MESSAGE Preference loaded using group preference: null

!ENTRY com.xilinx.sdk.utils 1 0 2025-06-05 10:12:41.540
!MESSAGE Workspace path used is: /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:13:33.593
!MESSAGE XSCT Command: [platform config -fsbl-elf {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/PetaLinux/images/linux/zynqmp_fsbl.elf}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:13:33.596
!MESSAGE XSCT command with result: [platform config -fsbl-elf {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/PetaLinux/images/linux/zynqmp_fsbl.elf}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:13:33.602
!MESSAGE XSCT Command: [platform write], Thread: Worker-64: Saving platform

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:13:33.604
!MESSAGE XSCT command with result: [platform write], Result: [null, Successfully saved  the platform at "/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/platform.spr"]. Thread: Worker-64: Saving platform

!ENTRY com.xilinx.sdk.utils 1 0 2025-06-05 10:13:36.704
!MESSAGE Opening file dialog using preferences. Current path: null, Local preference: pmu_firmware, Group preference: platform_editor

!ENTRY com.xilinx.sdk.utils 1 0 2025-06-05 10:13:36.704
!MESSAGE Preference loaded using local preference: null

!ENTRY com.xilinx.sdk.utils 1 0 2025-06-05 10:13:36.705
!MESSAGE Preference loaded using group preference: /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/PetaLinux/images/linux

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:13:42.773
!MESSAGE XSCT Command: [platform config -pmufw-elf {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/PetaLinux/images/linux/pmufw.elf}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:13:42.775
!MESSAGE XSCT command with result: [platform config -pmufw-elf {/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/PetaLinux/images/linux/pmufw.elf}], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:13:42.779
!MESSAGE XSCT Command: [platform write], Thread: Worker-66: Saving platform

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 10:13:42.780
!MESSAGE XSCT command with result: [platform write], Result: [null, Successfully saved  the platform at "/home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/platform.spr"]. Thread: Worker-66: Saving platform

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 11:04:42.864
!MESSAGE XSCT Command: [::hsi::utils::get_all_periphs -json /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 11:04:42.880
!MESSAGE XSCT command with result: [::hsi::utils::get_all_periphs -json /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa], Result: [null, {"axi_dma_0": {"hier_name": "axi_dma_0",
"type": "axi_dma",
"version": "7.1",
"ip_type": "PERIPHERAL",
},
"axi_gpio_0": {"hier_name": "axi_gpio_0",
"type": "axi_gpio",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"dma_rx_rst": {"hier_name": "dma_rx_rst",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"dma_tx_rst": {"hier_name": "dma_tx_rst",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"rx_data_fifo": {"hier_name": "rx_data_fifo",
"type": "axis_data_fifo",
"version": "2.0",
"ip_type": "BUS",
},
"rx_rst_n": {"hier_name": "rx_rst_n",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"sfp_tx_dis": {"hier_name": "sfp_tx_dis",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"tx_data_fifo": {"hier_name": "tx_data_fifo",
"type": "axis_data_fifo",
"version": "2.0",
"ip_type": "BUS",
},
"tx_rst_n": {"hier_name": "tx_rst_n",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"xlconstant_0": {"hier_name": "xlconstant_0",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"xlconstant_1": {"hier_name": "xlconstant_1",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"xlconstant_2": {"hier_name": "xlconstant_2",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"xxv_ethernet_0": {"hier_name": "xxv_ethernet_0",
"type": "xxv_ethernet",
"version": "4.1",
"ip_type": "PERIPHERAL",
},
"zups_axi_pl_ps": {"hier_name": "zups_axi_pl_ps",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"zups_ps_axi_periph": {"hier_name": "zups_ps_axi_periph",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"zups_rst_ps8_0_99M": {"hier_name": "zups_rst_ps8_0_99M",
"type": "proc_sys_reset",
"version": "5.0",
"ip_type": "PERIPHERAL",
},
"zups_util_vector_logic_0": {"hier_name": "zups_util_vector_logic_0",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"zups_xlconcat_0": {"hier_name": "zups_xlconcat_0",
"type": "xlconcat",
"version": "2.1",
"ip_type": "PERIPHERAL",
},
"zups_zynq_ultra_ps_e_0": {"hier_name": "zups_zynq_ultra_ps_e_0",
"type": "zynq_ultra_ps_e",
"version": "3.5",
"ip_type": "",
},
"psu_axi_interconnect_0": {"hier_name": "psu_axi_interconnect_0",
"type": "psu_axi_interconnect",
"version": "1.0",
"ip_type": "BUS",
},
"psu_coresight_0": {"hier_name": "psu_coresight_0",
"type": "psu_coresight_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_acpu_gic": {"hier_name": "psu_acpu_gic",
"type": "psu_acpu_gic",
"version": "1.0",
"ip_type": "INTERRUPT_CNTLR",
},
"psu_rcpu_gic": {"hier_name": "psu_rcpu_gic",
"type": "psu_rcpu_gic",
"version": "1.0",
"ip_type": "INTERRUPT_CNTLR",
},
"psu_r5_tcm_ram_global": {"hier_name": "psu_r5_tcm_ram_global",
"type": "psu_r5_tcm_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_tcm_ram_0": {"hier_name": "psu_r5_tcm_ram_0",
"type": "psu_r5_tcm_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ocm_ram_0": {"hier_name": "psu_ocm_ram_0",
"type": "psu_ocm_ram_0",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ocm": {"hier_name": "psu_ocm",
"type": "psu_ocm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_btcm": {"hier_name": "psu_r5_1_btcm",
"type": "psu_r5_1_btcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_btcm_global": {"hier_name": "psu_r5_1_btcm_global",
"type": "psu_r5_1_btcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_atcm": {"hier_name": "psu_r5_1_atcm",
"type": "psu_r5_1_atcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_1_atcm_global": {"hier_name": "psu_r5_1_atcm_global",
"type": "psu_r5_1_atcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm_lockstep": {"hier_name": "psu_r5_0_btcm_lockstep",
"type": "psu_r5_0_btcm_lockstep",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm": {"hier_name": "psu_r5_0_btcm",
"type": "psu_r5_0_btcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_btcm_global": {"hier_name": "psu_r5_0_btcm_global",
"type": "psu_r5_0_btcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm_lockstep": {"hier_name": "psu_r5_0_atcm_lockstep",
"type": "psu_r5_0_atcm_lockstep",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm": {"hier_name": "psu_r5_0_atcm",
"type": "psu_r5_0_atcm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_0_atcm_global": {"hier_name": "psu_r5_0_atcm_global",
"type": "psu_r5_0_atcm_global",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_bbram_0": {"hier_name": "psu_bbram_0",
"type": "psu_bbram_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_ram": {"hier_name": "psu_pmu_ram",
"type": "psu_pmu_ram",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_iomodule": {"hier_name": "psu_pmu_iomodule",
"type": "psu_pmu_iomodule",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pmu_global_0": {"hier_name": "psu_pmu_global_0",
"type": "psu_pmu_global_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_mbistjtag": {"hier_name": "psu_mbistjtag",
"type": "psu_mbistjtag",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rsa": {"hier_name": "psu_rsa",
"type": "psu_rsa",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_efuse": {"hier_name": "psu_efuse",
"type": "psu_efuse",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_csu_0": {"hier_name": "psu_csu_0",
"type": "psu_csu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_csu_wdt": {"hier_name": "psu_csu_wdt",
"type": "psu_wdt",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_csudma": {"hier_name": "psu_csudma",
"type": "psu_csudma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_smmu_gpv": {"hier_name": "psu_smmu_gpv",
"type": "psu_smmu_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_gpv": {"hier_name": "psu_fpd_gpv",
"type": "psu_fpd_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_cci_gpv": {"hier_name": "psu_cci_gpv",
"type": "psu_cci_gpv",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_slcr_secure": {"hier_name": "psu_fpd_slcr_secure",
"type": "psu_fpd_slcr_secure",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_slcr": {"hier_name": "psu_fpd_slcr",
"type": "psu_fpd_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_smmu_reg": {"hier_name": "psu_smmu_reg",
"type": "psu_smmu_reg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_cci_reg": {"hier_name": "psu_cci_reg",
"type": "psu_cci_reg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_xmpu_cfg": {"hier_name": "psu_fpd_xmpu_cfg",
"type": "psu_fpd_xmpu_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apu": {"hier_name": "psu_apu",
"type": "psu_apu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_7": {"hier_name": "psu_gdma_7",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_6": {"hier_name": "psu_gdma_6",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_5": {"hier_name": "psu_gdma_5",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_4": {"hier_name": "psu_gdma_4",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_3": {"hier_name": "psu_gdma_3",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_2": {"hier_name": "psu_gdma_2",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_1": {"hier_name": "psu_gdma_1",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gdma_0": {"hier_name": "psu_gdma_0",
"type": "psu_gdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_fpd_xmpu_sink": {"hier_name": "psu_fpd_xmpu_sink",
"type": "psu_fpd_xmpu_sink",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_dpdma": {"hier_name": "psu_dpdma",
"type": "psu_dpdma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gpu": {"hier_name": "psu_gpu",
"type": "psu_gpu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_dp": {"hier_name": "psu_dp",
"type": "psu_dp",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_5": {"hier_name": "psu_apm_5",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_serdes": {"hier_name": "psu_serdes",
"type": "psu_serdes",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_siou": {"hier_name": "psu_siou",
"type": "psu_siou",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_5": {"hier_name": "psu_afi_5",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_4": {"hier_name": "psu_afi_4",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_3": {"hier_name": "psu_afi_3",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_2": {"hier_name": "psu_afi_2",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_1": {"hier_name": "psu_afi_1",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_0": {"hier_name": "psu_afi_0",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_crf_apb": {"hier_name": "psu_crf_apb",
"type": "psu_crf_apb",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie_dma": {"hier_name": "psu_pcie_dma",
"type": "psu_pcie_dma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie_low": {"hier_name": "psu_pcie_low",
"type": "psu_pcie",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie_high1": {"hier_name": "psu_pcie_high1",
"type": "psu_pcie",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie_high2": {"hier_name": "psu_pcie_high2",
"type": "psu_pcie",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie": {"hier_name": "psu_pcie",
"type": "psu_pcie",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_pcie_attrib_0": {"hier_name": "psu_pcie_attrib_0",
"type": "psu_pcie_attrib_0",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_sata": {"hier_name": "psu_sata",
"type": "psu_sata",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_0": {"hier_name": "psu_apm_0",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_qos_ctrl": {"hier_name": "psu_ddr_qos_ctrl",
"type": "psu_ddr_qos_ctrl",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_phy": {"hier_name": "psu_ddr_phy",
"type": "psu_ddr_phy",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu5_cfg": {"hier_name": "psu_ddr_xmpu5_cfg",
"type": "psu_ddr_xmpu5_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu4_cfg": {"hier_name": "psu_ddr_xmpu4_cfg",
"type": "psu_ddr_xmpu4_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu3_cfg": {"hier_name": "psu_ddr_xmpu3_cfg",
"type": "psu_ddr_xmpu3_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu2_cfg": {"hier_name": "psu_ddr_xmpu2_cfg",
"type": "psu_ddr_xmpu2_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu1_cfg": {"hier_name": "psu_ddr_xmpu1_cfg",
"type": "psu_ddr_xmpu1_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ddr_xmpu0_cfg": {"hier_name": "psu_ddr_xmpu0_cfg",
"type": "psu_ddr_xmpu0_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_7": {"hier_name": "psu_adma_7",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_6": {"hier_name": "psu_adma_6",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_5": {"hier_name": "psu_adma_5",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_4": {"hier_name": "psu_adma_4",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_3": {"hier_name": "psu_adma_3",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_2": {"hier_name": "psu_adma_2",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_1": {"hier_name": "psu_adma_1",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_adma_0": {"hier_name": "psu_adma_0",
"type": "psu_adma",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ocm_xmpu_cfg": {"hier_name": "psu_ocm_xmpu_cfg",
"type": "psu_ocm_xmpu_cfg",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rtc": {"hier_name": "psu_rtc",
"type": "psu_rtc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ams": {"hier_name": "psu_ams",
"type": "psu_ams",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_2": {"hier_name": "psu_apm_2",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_apm_1": {"hier_name": "psu_apm_1",
"type": "psu_apm",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_usb_0": {"hier_name": "psu_usb_0",
"type": "psu_usb",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_usb_xhci_0": {"hier_name": "psu_usb_xhci_0",
"type": "psu_usb_xhci",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_xppu_sink": {"hier_name": "psu_lpd_xppu_sink",
"type": "psu_lpd_xppu_sink",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_afi_6": {"hier_name": "psu_afi_6",
"type": "psu_afi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_rpu": {"hier_name": "psu_rpu",
"type": "psu_rpu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_xppu": {"hier_name": "psu_lpd_xppu",
"type": "psu_lpd_xppu",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_crl_apb": {"hier_name": "psu_crl_apb",
"type": "psu_crl_apb",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_slcr_secure": {"hier_name": "psu_lpd_slcr_secure",
"type": "psu_lpd_slcr_secure",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_lpd_slcr": {"hier_name": "psu_lpd_slcr",
"type": "psu_lpd_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_0": {"hier_name": "psu_ipi_0",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_1": {"hier_name": "psu_ipi_1",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_2": {"hier_name": "psu_ipi_2",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_3": {"hier_name": "psu_ipi_3",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_4": {"hier_name": "psu_ipi_4",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_5": {"hier_name": "psu_ipi_5",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ipi_6": {"hier_name": "psu_ipi_6",
"type": "psu_ipi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ctrl_ipi": {"hier_name": "psu_ctrl_ipi",
"type": "PERIPHERAL",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_message_buffers": {"hier_name": "psu_message_buffers",
"type": "PERIPHERAL",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_s": {"hier_name": "psu_iou_s",
"type": "psu_iou_s",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_scntrs": {"hier_name": "psu_iou_scntrs",
"type": "psu_iou_scntrs",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iou_scntr": {"hier_name": "psu_iou_scntr",
"type": "psu_iou_scntr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iousecure_slcr": {"hier_name": "psu_iousecure_slcr",
"type": "psu_iousecure_slcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_iouslcr_0": {"hier_name": "psu_iouslcr_0",
"type": "psu_iouslcr",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_r5_ddr_0": {"hier_name": "psu_r5_ddr_0",
"type": "psu_ddr",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ddr_0": {"hier_name": "psu_ddr_0",
"type": "psu_ddr",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ddr_1": {"hier_name": "psu_ddr_1",
"type": "psu_ddr",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_ddrc_0": {"hier_name": "psu_ddrc_0",
"type": "psu_ddrc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_sd_1": {"hier_name": "psu_sd_1",
"type": "psu_sd",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_wdt_0": {"hier_name": "psu_wdt_0",
"type": "psu_wdt",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_wdt_1": {"hier_name": "psu_wdt_1",
"type": "psu_wdt",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ttc_3": {"hier_name": "psu_ttc_3",
"type": "psu_ttc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ttc_2": {"hier_name": "psu_ttc_2",
"type": "psu_ttc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ttc_1": {"hier_name": "psu_ttc_1",
"type": "psu_ttc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ttc_0": {"hier_name": "psu_ttc_0",
"type": "psu_ttc",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_qspi_0": {"hier_name": "psu_qspi_0",
"type": "psu_qspi",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_ethernet_3": {"hier_name": "psu_ethernet_3",
"type": "psu_ethernet",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_gpio_0": {"hier_name": "psu_gpio_0",
"type": "psu_gpio",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_can_1": {"hier_name": "psu_can_1",
"type": "psu_can",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_i2c_1": {"hier_name": "psu_i2c_1",
"type": "psu_i2c",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_i2c_0": {"hier_name": "psu_i2c_0",
"type": "psu_i2c",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_uart_1": {"hier_name": "psu_uart_1",
"type": "psu_uart",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_uart_0": {"hier_name": "psu_uart_0",
"type": "psu_uart",
"version": "1.0",
"ip_type": "PERIPHERAL",
},
"psu_qspi_linear_0": {"hier_name": "psu_qspi_linear_0",
"type": "psu_qspi_linear",
"version": "1.0",
"ip_type": "MEMORY_CNTLR",
},
"psu_cortexa53_0": {"hier_name": "psu_cortexa53_0",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexa53_1": {"hier_name": "psu_cortexa53_1",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexa53_2": {"hier_name": "psu_cortexa53_2",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexa53_3": {"hier_name": "psu_cortexa53_3",
"type": "psu_cortexa53",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexr5_0": {"hier_name": "psu_cortexr5_0",
"type": "psu_cortexr5",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_cortexr5_1": {"hier_name": "psu_cortexr5_1",
"type": "psu_cortexr5",
"version": "1.0",
"ip_type": "PROCESSOR",
},
"psu_pmu_0": {"hier_name": "psu_pmu_0",
"type": "psu_pmu",
"version": "9.2",
"ip_type": "PROCESSOR",
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 11:04:42.881
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa psu_cortexa53_0], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 11:04:43.004
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa psu_cortexa53_0], Result: [null, {"axi_dma_0": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354560,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354564,
},
"MM2S_CURDESC": {"description": "MM2S DMA Current Descriptor Pointer Register",
"address_offset": "0x08",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354568,
},
"MM2S_CURDESC_MSB": {"description": "MM2S DMA Current Descriptor Pointer Register",
"address_offset": "0x0C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354572,
},
"MM2S_TAILDESC": {"description": "MM2S DMA Tail Descriptor Pointer Register",
"address_offset": "0x10",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354576,
},
"MM2S_TAILDESC_MSB": {"description": "MM2S DMA Tail Descriptor Pointer Register",
"address_offset": "0x14",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354580,
},
"SG_CTL": {"description": "Scatter/Gather User and Cache Control Register",
"address_offset": "0x2C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SG_CACHE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Scatter/Gather Cache Control. Values written in this register reflect on the m_axi_sg_arcache and m_axi_sg_awcache signals of the M_AXI_SG interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SG_USER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Scatter/Gather User Control. Values written in this register reflect on the m_axi_sg_aruser and m_axi_sg_awuser signals of the M_AXI_SG interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354604,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354608,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354612,
},
"S2MM_CURDESC": {"description": "S2MM DMA Current Descriptor Pointer Register",
"address_offset": "0x38",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). 
Buffer Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and so forth. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354616,
},
"S2MM_CURDESC_MSB": {"description": "S2MM DMA Current Descriptor Pointer Register",
"address_offset": "0x3C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354620,
},
"S2MM_TAILDESC": {"description": "S2MM DMA Tail Descriptor Pointer Register",
"address_offset": "0x40",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel DMACR.RS bit is set to 0 (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. 
Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354624,
},
"S2MM_TAILDESC_MSB": {"description": "S2MM DMA Tail Descriptor Pointer Register",
"address_offset": "0x44",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354628,
},
},
"axi_gpio_0": {"GPIO_DATA": {"description": "Channel-1 AXI GPIO Data register",
"address_offset": "0x0",
"access": "read-write",
"size": "1",
"interface": "S_AXI",
"fields": {"CH1_DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420096,
},
"GPIO_TRI": {"description": "Channel-1 AXI GPIO 3-State Control register",
"address_offset": "0x4",
"access": "read-write",
"size": "1",
"interface": "S_AXI",
"fields": {"CH1_TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420100,
},
"GPIO2_DATA": {"description": "Channel-2 AXI GPIO Data register",
"address_offset": "0x8",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH2_DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420104,
},
"GPIO2_TRI": {"description": "Channel-2 AXI GPIO 3-State Control register",
"address_offset": "0xC",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH2_TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420108,
},
"GIER": {"description": "Global_Interrupt_Enable register",
"address_offset": "0x11C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"INT_EN": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output
  0 - Disabled
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420380,
},
"IP_IER": {"description": "IP Interrupt Enable register",
"address_offset": "0x128",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH1_INT_EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CH2_INT_EN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 2 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420392,
},
"IP_ISR": {"description": "IP Interrupt Status register",
"address_offset": "0x120",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH1_INT_S": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 Interrupt Status
  0 - No Channel 1 input interrupt
  1 - Channel 1 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CH2_INT_S": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 2 Interrupt Status
  0 - No Channel 2 input interrupt
  1 - Channel 2 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420384,
},
},
"psu_acpu_gic": {},
"psu_adma_0": {},
"psu_adma_1": {},
"psu_adma_2": {},
"psu_adma_3": {},
"psu_adma_4": {},
"psu_adma_5": {},
"psu_adma_6": {},
"psu_adma_7": {},
"psu_afi_0": {},
"psu_afi_1": {},
"psu_afi_2": {},
"psu_afi_3": {},
"psu_afi_4": {},
"psu_afi_5": {},
"psu_afi_6": {},
"psu_ams": {},
"psu_apm_0": {},
"psu_apm_1": {},
"psu_apm_2": {},
"psu_apm_5": {},
"psu_apu": {},
"psu_can_1": {},
"psu_cci_gpv": {},
"psu_cci_reg": {},
"psu_coresight_0": {},
"psu_crf_apb": {},
"psu_crl_apb": {},
"psu_csu_0": {},
"psu_csudma": {},
"psu_ctrl_ipi": {},
"psu_ddr_0": {},
"psu_ddr_1": {},
"psu_ddr_phy": {},
"psu_ddr_qos_ctrl": {},
"psu_ddr_xmpu0_cfg": {},
"psu_ddr_xmpu1_cfg": {},
"psu_ddr_xmpu2_cfg": {},
"psu_ddr_xmpu3_cfg": {},
"psu_ddr_xmpu4_cfg": {},
"psu_ddr_xmpu5_cfg": {},
"psu_ddrc_0": {},
"psu_dp": {},
"psu_dpdma": {},
"psu_efuse": {},
"psu_ethernet_3": {},
"psu_fpd_gpv": {},
"psu_fpd_slcr": {},
"psu_fpd_slcr_secure": {},
"psu_fpd_xmpu_cfg": {},
"psu_fpd_xmpu_sink": {},
"psu_gdma_0": {},
"psu_gdma_1": {},
"psu_gdma_2": {},
"psu_gdma_3": {},
"psu_gdma_4": {},
"psu_gdma_5": {},
"psu_gdma_6": {},
"psu_gdma_7": {},
"psu_gpio_0": {},
"psu_gpu": {},
"psu_i2c_0": {},
"psu_i2c_1": {},
"psu_iou_scntr": {},
"psu_iou_scntrs": {},
"psu_iousecure_slcr": {},
"psu_iouslcr_0": {},
"psu_ipi_0": {},
"psu_lpd_slcr": {},
"psu_lpd_slcr_secure": {},
"psu_lpd_xppu": {},
"psu_lpd_xppu_sink": {},
"psu_mbistjtag": {},
"psu_message_buffers": {},
"psu_ocm": {},
"psu_ocm_ram_0": {},
"psu_ocm_xmpu_cfg": {},
"psu_pcie": {},
"psu_pcie_attrib_0": {},
"psu_pcie_dma": {},
"psu_pcie_high1": {},
"psu_pcie_high2": {},
"psu_pcie_low": {},
"psu_pmu_global_0": {},
"psu_qspi_0": {},
"psu_qspi_linear_0": {},
"psu_r5_0_atcm_global": {},
"psu_r5_0_btcm_global": {},
"psu_r5_1_atcm_global": {},
"psu_r5_1_btcm_global": {},
"psu_r5_tcm_ram_global": {},
"psu_rcpu_gic": {},
"psu_rpu": {},
"psu_rsa": {},
"psu_rtc": {},
"psu_sata": {},
"psu_sd_1": {},
"psu_serdes": {},
"psu_siou": {},
"psu_smmu_gpv": {},
"psu_smmu_reg": {},
"psu_ttc_0": {},
"psu_ttc_1": {},
"psu_ttc_2": {},
"psu_ttc_3": {},
"psu_uart_0": {},
"psu_uart_1": {},
"psu_usb_0": {},
"psu_usb_xhci_0": {},
"psu_wdt_0": {},
"psu_wdt_1": {},
"xxv_ethernet_0": {"GT_RESET_REG": {"description": "GT_RESET_REG",
"address_offset": "0x0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_GT_RESET_ALL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt reset all.
  0 - Normal operation
  1 - Reset the GT
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_GT_RX_RESET": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt rx reset.
  0 - Normal operation
  1 - Reset the GT receiver
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_GT_TX_RESET": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt tx reset.
  0 - Normal operation
  1 - Reset the GT transmitter
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616704,
},
"RESET_REG": {"description": "RESET_REG",
"address_offset": "0x0004",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"RX_SERDES_RESET": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "rx serdes reset.
  0 - Normal operation
  1 - Reset the Receiver serdes
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_SERDES_RESET": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "tx serdes reset.
  0 - Normal operation
  1 - Reset the transmitter serdes
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_RESET": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "rx reset.
  0 - Normal operation
  1 - Reset the receiver 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_RESET": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "tx_reset.
  0 - Normal operation
  1 - Reset the transmitter
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616708,
},
"MODE_REG": {"description": "MODE_REG",
"address_offset": "0x0008",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"TICK_REG_MODE_SEL": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "tick reg mode sel.
  1 - tick_reg is used to read the statistics counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LOCAL_LOOPBACK": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "ctl local loopback.
  0 - Normal operation
  1 - places the transceiver into the PMA loopback state. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616712,
},
"CONFIGURATION_TX_REG1": {"description": "CONFIGURATION_TX_REG1",
"address_offset": "0x000C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx enable.
  0 - only IDLEs are transmitted by the core.
  1 - Enables the transmission of data. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_FCS_INS_ENABLE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx fcs ins enable.
  0 - the core does not add FCS to packet.
  1 - the core calculates and adds the FCS to the packet. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_IGNORE_FCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx ignore fcs.
  0 - A packet with bad FCS is being transmitted, it is not binned as good.
  1 - A packet with bad FCS is binned as good.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_LFI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send lfi.
  0 - Normal operation
  1 - Transmit Local Fault Indication (LFI) code word. Takes precedence over Remote Fault Indication (RFI).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_RFI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send rfi.
  0 - Normal operation
  1 - the TX path transmits only RFI code words.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_IDLE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send idle.
  0 - Normal operation
  1 - The TX path only transmits Idle code words.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_IPG_VALUE": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "4",
"desc": "ctl tx ipg value.
  This signal can be optionally present.
  The ctl_tx_ipg_value defines the target average minimum Inter Packet Gap (IPG, in bytes) inserted between AXI4-Stream packets.
  Valid values are 8 to 12.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern.
  0 - Normal operation
  1 - Test pattern generation enable for the TX core. A value of 1 enables test mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern enable.
  0 - Normal operation
  1 - Test pattern generation enable for the TX core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern select.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_DATA_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx data pattern select.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_CUSTOM_PREAMBLE_ENABLE": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_tx_custom_preamble_enable.
  0 - Normal operation
  1 - When it is set, the use of tx_preamblein as a custom preamble instead of inserting a standard preamble. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PRBS31_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "23",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx prbs31 test pattern enable.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616716,
},
"CONFIGURATION_RX_REG1": {"description": "CONFIGURATION_RX_REG1",
"address_offset": "0x0014",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable.
  0 - The RX completes the reception of the current packet (if any), it stops receiving packets by keeping the PCS from decoding incoming data.
  1 - Normal operation 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_DELETE_FCS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx delete fcs.
  0 - the core does not remove the FCS of the incoming packet.
  1 - the core deletes the FCS to the received packet. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_IGNORE_FCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx ignore fcs.
  0 - A packet received with an FCS error is sent with the rx_axis_tuser pin asserted during the last transfer (rx_axis_tlast sampled 1).
  1 - The core does not flag an FCS error at the AXI4-Stream interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_PROCESS_LFI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx process lfi.
  0 - the RX core ignores LF control codes coming in from the transceiver. 
  1 - the RX core expects and processes LF control codes coming in from the transceiver.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SFD": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sfd.
  0 - Normal operation
  1 - this input causes the MAC to check the Start of Frame Delimiter of the received frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_PREAMBLE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check preamble.
  0 - Normal operation
  1 - this input causes the MAC to check the preamble of the received frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_FORCE_RESYNC": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx force resync.
  0 - Normal operation
  1 - forces the reset operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TEST_PATTERN": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Test pattern checking enable for the RX core.
  0 - Normal operation
  1 - Enables test mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Test pattern enable for the RX core.
  0 - Normal operation
  1 - Enables test mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_DATA_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Data pattern select for RX core.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CUSTOM_PREAMBLE_ENABLE": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_rx_custom_preamble_enable.
  0 - Normal operation
  1 - This signal causes the side band of a packet presented on the AXI4-Stream to be the preamble as it appears on the line. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_PRBS31_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx prbs31 test pattern enable.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616724,
},
"CONFIGURATION_RX_MTU": {"description": "CONFIGURATION_RX_MTU",
"address_offset": "0x0018",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_MIN_PACKET_LEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "ctl rx min packet len.
  Any packet shorter than this value is considered to be undersized.
  If a packet has a size less than this value, the rx_axis_tuser signal is asserted during the rx_axis_tlast asserted cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_MAX_PACKET_LEN": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "15",
"desc": "ctl rx max packet len.
  Any packet longer than this value is considered to be oversized.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616728,
},
"CONFIGURATION_VL_LENGTH_REG": {"description": "CONFIGURATION_VL_LENGTH_REG",
"address_offset": "0x001C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_VL_LENGTH_MINUS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx vl length minus1.
  Normally set to 20479 (decimal). The normal value is equivalent to (16,383 x 5 -4) = 81,916.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_VL_LENGTH_MINUS1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx vl length minus1.
  Normally set to 20,479 (4FFF hex). The normal value is equivalent to (16,383 x 5 -4) = 81,916.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616732,
},
"CONFIGURATION_TSN_REG": {"description": "CONFIGURATION_TSN_REG",
"address_offset": "0x019C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_EN_PREEMPT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl en preempt.
  1 - It allows preemption.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_HOLD_REQUEST": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl hold request.
  1 - preempt traffic is withheld.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_DISABLE_VERIFY": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl disable verify.
  1 - It inhibits the verification process.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RESTART_VERIFY": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl restart verify.
  A 0-to-1 transition will trigger Verification if ctl_disable_verify = 1’b0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_ADDFRAG_SIZE": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "ctl addfrag size.
  Fragment size remaining to enable pre-emption.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_VERIFY_TIME": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "ctl verify time.
  Verification time-out value in milliseconds.
  Integer range 1-128.
  Default is 1 ms.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_VERIFY_LIMIT": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "ctl verify limit.
  Number of times core attempts Verification.
  Integer range 1-15.
  Default is 3.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617116,
},
"TICK_REG": {"description": "TICK_REG",
"address_offset": "0x0020",
"access": "write-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"TICK_REG": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "tick reg.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616736,
},
"CONFIGURATION_REVISION_REG": {"description": "CONFIGURATION_REVISION_REG",
"address_offset": "0x0024",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"MAJOR_REV": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "major revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MINOR_REV": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "minor revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PATCH_REV": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "patch revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616740,
},
"CONFIGURATION_TX_TEST_PAT_SEED_A_LSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_A_LSB",
"address_offset": "0x0028",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_A_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx test pattern seed a.
  Corresponds to MDIO registers 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616744,
},
"CONFIGURATION_TX_TEST_PAT_SEED_A_MSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_A_MSB",
"address_offset": "0x002C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_A_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "ctl tx test pattern seed a.
  Corresponds to MDIO registers 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616748,
},
"CONFIGURATION_TX_TEST_PAT_SEED_B_LSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_B_LSB",
"address_offset": "0x0030",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_B_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx test pattern seed b.
  Corresponds to MDIO registers 3.38 through to 3.41 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616752,
},
"CONFIGURATION_TX_TEST_PAT_SEED_B_MSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_B_MSB",
"address_offset": "0x0034",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_B_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "ctl tx test pattern seed b.
  Corresponds to MDIO registers 3.38 through to 3.41 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616756,
},
"CONFIGURATION_1588_REG": {"description": "CONFIGURATION_1588_REG",
"address_offset": "0x0038",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PTP_1STEP_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx ptp 1step enable.
  1 - this bit enables 1-step operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_PTP_TRANSPCLK_MODE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl ptp transpclk mode.
  1 - This input places the timestamping  logic into transparent clock mode. In this mode, the system timer input is interpreted as a correction value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PTP_LATENCY_ADJUST": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "11",
"desc": "ctl tx ptp latency adjust.
  This bus can be used to adjust the 1-step TX timestamp with respect to the 2-step timestamp.
  The units of bits [10:3] are nanoseconds and bits [2:0] are fractional nanoseconds.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616760,
},
"CONFIGURATION_TX_FLOW_CONTROL_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REG1",
"address_offset": "0x0040",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "TX pause enable signal.
  This input is used to enable the processing of the pause quanta for the corresponding priority.
  This signal gates transmission of pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616768,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG1",
"address_offset": "0x0044",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer0.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer1.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616772,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG2": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG2",
"address_offset": "0x0048",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER2": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer2.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER3": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer3.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616776,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG3": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG3",
"address_offset": "0x004C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER4": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer4.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER5": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer5.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616780,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG4": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG4",
"address_offset": "0x0050",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER6": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer6.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER7": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer7.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616784,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG5": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG5",
"address_offset": "0x0054",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER8": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer8.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616788,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG1",
"address_offset": "0x0058",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta0.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta1.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616792,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG2": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG2",
"address_offset": "0x005C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA2": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta2.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA3": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta3.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616796,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG3": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG3",
"address_offset": "0x0060",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA4": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta4.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA5": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta5.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616800,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG4": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG4",
"address_offset": "0x0064",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA6": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta6.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA7": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta7.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616804,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG5": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG5",
"address_offset": "0x0068",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA8": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta8.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616808,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_ETYPE_OP_REG": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_ETYPE_OP_REG",
"address_offset": "0x006C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ETHERTYPE_PPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx ethertype ppp.
  Ethertype for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_OPCODE_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx opcode ppp.
  Opcode for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616812,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_ETYPE_OP_REG": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_ETYPE_OP_REG",
"address_offset": "0x0070",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ETHERTYPE_GPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx ethertype gpp.
  Ethertype for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_OPCODE_GPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx opcode gpp.
  Opcode for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616816,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_LSB",
"address_offset": "0x0074",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_GPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx da gpp.
  Destination address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616820,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_MSB",
"address_offset": "0x0078",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_GPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx da gpp.
  Destination address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616824,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_LSB",
"address_offset": "0x007C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_GPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx sa gpp.
  Source address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616828,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_MSB",
"address_offset": "0x0080",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_GPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx sa gpp.
  Source address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616832,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_LSB",
"address_offset": "0x0084",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_PPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx da ppp.
  Destination address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616836,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_MSB",
"address_offset": "0x0088",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_PPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx da ppp.
  Destination address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616840,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_LSB",
"address_offset": "0x008C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_PPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx sa ppp.
  Source address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616844,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_MSB",
"address_offset": "0x0090",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_PPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx sa ppp.
  Source address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616848,
},
"CONFIGURATION_RX_FLOW_CONTROL_REG1": {"description": "CONFIGURATION_RX_FLOW_CONTROL_REG1",
"address_offset": "0x0094",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "Rx pause enable.
  This input is used to enable the processing of the pause quanta for the corresponding priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_FORWARD_CONTROL": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx forward control.
  0 - causes core to drop control packets.
  1 - Indicates that the core forwards control packets. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_GCP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable gcp.
  1 - Enables global control packet processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_PCP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable pcp.
  1 - Enables priority control packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_GPP": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable gpp.
  1 - Enables global pause packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_PPP": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable ppp.
  1 - Enables priority pause packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ACK": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ack.
  0 - ctl_rx_pause_ack[8:0] is not used.
  1 - the core uses the ctl_rx_pause_ack[8:0] bus for pause processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616852,
},
"CONFIGURATION_RX_FLOW_CONTROL_REG2": {"description": "CONFIGURATION_RX_FLOW_CONTROL_REG2",
"address_offset": "0x0098",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_CHECK_MCAST_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast gcp.
  0 - Normal operation
  1 - Enables global control multicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_GCP": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast gcp.
  0 - Normal operation
  1 - Enables global control unicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_GCP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa gcp.
  0 - Normal operation
  1 - Enables global control source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_GCP": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype gcp.
  0 - Normal operation
  1 - Enables global control ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_GCP": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode gcp.
  0 - Normal operation
  1 - Enables global control opcodeprocessing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_PCP": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast pcp.
  0 - Normal operation
  1 - Enables priority control multicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_PCP": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast pcp.
  0 - Normal operation
  1 - Enables priority control unicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_PCP": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa pcp.
  0 - Normal operation
  1 - Enables priority control source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_PCP": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype pcp.
  0 - Normal operation
  1 - Enables priority control ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_PCP": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode pcp.
  0 - Normal operation
  1 - Enables priority control opcode processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_GPP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast gpp.
  0 - Normal operation
  1 - Enables global pause multicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_GPP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast gpp.
  0 - Normal operation
  1 - Enables global pause unicast destination address processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_GPP": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa gpp.
  0 - Normal operation
  1 - Enables global pause source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_GPP": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype gpp.
  0 - Normal operation
  1 - Enables global pause ethertype processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_GPP": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode gpp.
  0 - Normal operation
  1 - Enables global pause opcode processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_PPP": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast ppp.
  0 - Normal operation
  1 - Enables priority pause multicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast ppp.
  0 - Normal operation
  1 - Enables priority pause unicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_PPP": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa ppp.
  0 - Normal operation
  1 - Enables priority pause source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_PPP": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype ppp.
  0 - Normal operation
  1 - Enables priority pause ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_PPP": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode ppp.
  0 - Normal operation
  1 - Enables priority pause opcode processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616856,
},
"CONFIGURATION_RX_FLOW_CONTROL_PPP_ETYPE_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_PPP_ETYPE_OP_REG",
"address_offset": "0x009C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_PPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype ppp.
  Ethertype field for priority pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode ppp.
  Priority pause opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616860,
},
"CONFIGURATION_RX_FLOW_CONTROL_GPP_ETYPE_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GPP_ETYPE_OP_REG",
"address_offset": "0x00A0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_GPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype gpp.
  Ethertype field for global pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_GPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode gpp.
  Global pause opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616864,
},
"CONFIGURATION_RX_FLOW_CONTROL_GCP_PCP_TYPE_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GCP_PCP_TYPE_REG",
"address_offset": "0x00A4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype gcp.
  Ethertype field for global control processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ETYPE_PCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype pcp.
  Ethertype field for priority control processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616868,
},
"CONFIGURATION_RX_FLOW_CONTROL_PCP_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_PCP_OP_REG",
"address_offset": "0x00A8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_OPCODE_MIN_PCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode min pcp.
  Minimum priority control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_MAX_PCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode max pcp.
  Maximum priority control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616872,
},
"CONFIGURATION_RX_FLOW_CONTROL_GCP_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GCP_OP_REG",
"address_offset": "0x00AC",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_OPCODE_MIN_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode min gcp.
  Minimum global control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_MAX_GCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode max gcp.
  Maximum global control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616876,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_LSB",
"address_offset": "0x00B0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_UCAST_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause da ucast.
  Unicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616880,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_MSB",
"address_offset": "0x00B4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_UCAST_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause da ucast.
  Unicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616884,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_LSB",
"address_offset": "0x00B8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_MCAST_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause da mcast.
  Multicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616888,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_MSB",
"address_offset": "0x00BC",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_MCAST_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause da mcast.
  Multicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616892,
},
"CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_LSB",
"address_offset": "0x00C0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_SA_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause sa.
  Source address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616896,
},
"CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_MSB",
"address_offset": "0x00C4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_SA_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause sa.
  Source address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616900,
},
"CONFIGURATION_RSFEC_REG": {"description": "CONFIGURATION_RSFEC_REG",
"address_offset": "0x00D0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RSFEC_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec enable.
  0 - Normal operation
  1 - Enable RS-FEC function.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RSFEC_CONSORTIUM_25G": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec consortium 25g.
  This signal switches between IEEE Clause 108 and 25G Ethernet Consortium modes.
  0 - IEEE 802.3by mode.
  1 - 25G Consortium specification mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_RSFEC_ENABLE_INDICATION": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx rsfec enable indication.
  0 - Bypass the error indication function (see IEEE Std 802.3by section 91.5.3.3).
  1 - Decoder indicates errors to the PCS sublayer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_RSFEC_ENABLE_CORRECTION": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx rsfec enable correction.
  0 - Decoder performs error detection without error correction (see IEEE 802.3by Clause 91.5.3.3).
  1 - Decoder also performs error correction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RSFEC_IEEE_ERROR_INDICATION_MODE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec ieee error indication mode.
  0 - If ctl_rx_rsfec_enable_correction and ctl_rx_rsfec_enable_indication are set to zero, the RS decoder is bypassed.
  1 - Core conforms to the IEEE RS-FEC specification.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616912,
},
"CONFIGURATION_FEC_REG": {"description": "CONFIGURATION_FEC_REG",
"address_offset": "0x00D4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_FEC_RX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec rx enable.
  0 - Normal operation
  1 - Enable the clause 74 FEC decoding of the received data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_FEC_TX_ENABLE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec tx enable.
  0 - Normal operation
  1 - Enable the clause 74 FEC encoding on the transmitted data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_FEC_ENABLE_ERROR_TO_PCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec enable error to pcs.
  0 - Normal operation
  1 - Clause 74 FEC enable error to PCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616916,
},
"CONFIGURATION_AN_CONTROL_REG1": {"description": "CONFIGURATION_AN_CONTROL_REG1",
"address_offset": "0x00E0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AUTONEG_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl autoneg enable.
  0 - Normal operation
  1 - Enable signal for auto-negotiation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AUTONEG_BYPASS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl autoneg bypass.
  0 - Normal operation
  1 - Auto-negotiation is turned off, but the PCS is connected to the output to allow operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"_CTL_AN_NONCE_SEED": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "8",
"desc": "ctl an nonce seed.
  8-bit seed to initialize the nonce field Polynomial generator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_PSEUDO_SEL": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an pseudo sel.
  Selects the polynomial generator  for the bit 49 random bit generator.
  0 - The polynomial is x7+x3+1.
  1 - The polynomial is x7+x6+1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RESTART_NEGOTIATION": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl restart negotiation.
  This input is used to trigger a restart of the auto-negotiation, regardless of what state the circuit is currently in.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_LOCAL_FAULT": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an local fault.
  This input signal is used to set the local_fault bit of the transmit link codeword.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616928,
},
"CONFIGURATION_AN_CONTROL_REG2": {"description": "CONFIGURATION_AN_CONTROL_REG2",
"address_offset": "0x00E4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AN_PAUSE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an pause.
  This is used to set the PAUSE bit, (C0), of the transmit link codeword.
  This signal might not be present if the core does not support pause.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ASMDIR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an asmdir.
  This is used to set the ASMDIR bit, (C1), of the transmit link codeword.
  This signal might not be present if the core does not support pause.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_10G_REQUEST": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 10g request.
  This signal is used to signal the link partner that the local station is requesting clause 74 FEC on the 10Gb/s lane protocols.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_ABILITY_OVERRIDE": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec ability override.
  1 - Then the FEC ability bit in the transmit link codeword is cleared.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_CL91_FEC_REQUEST": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an cl91 fec request.
  This bit is used to request clause 91 FEC.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_CL91_FEC_ABILITY": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an cl91 fec ability.
  This bit is used to indicate clause 91 FEC ability.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_25G_RS_REQUEST": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 25g rs request.
  This signal is used to signal the link partner that the local station is requesting rs FEC (clause 91 or 108) on the 25Gb/s lane protocols.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_25G_BASER_REQUEST": {"access": "read-write",
"bit_offset": "21",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 25g baser request.
  Indicates the baser FEC request.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616932,
},
"CONFIGURATION_AN_ABILITY": {"description": "CONFIGURATION_AN_ABILITY",
"address_offset": "0x00F8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AN_ABILITY_1000BASE_KX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 1000base kx.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_10GBASE_KX4": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 10gbase kx4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_10GBASE_KR": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 10gbase kr.  
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_40GBASE_KR4": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 40gbase kr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_40GBASE_CR4": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 40gbase cr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_CR10": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_an_ability_100gbase_cr10. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_KP4": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase kp4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_KR4": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase kr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_CR4": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase cr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KRCR_S": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase krcr s.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KRCR": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase krcr.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KR1": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase kr1.
   0 - Indicates that the interface advertises that it doesn't supports the protocol.
   1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_CR1": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase cr1.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_50GBASE_KR2": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 50gbase kr2.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_50GBASE_CR2": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 50gbase cr2.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616952,
},
"CONFIGURATION_LT_CONTROL_REG1": {"description": "CONFIGURATION_LT_CONTROL_REG1",
"address_offset": "0x0100",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_TRAINING_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt training enable.
  0 - When link training is disabled, all PCS lanes function in mission mode.
  1 - Enabled link training 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_RESTART_TRAINING": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt restart training.
  0 - Normal operation
  1 - This signal triggers a restart of link training regardless of the current state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616960,
},
"CONFIGURATION_LT_TRAINED_REG": {"description": "CONFIGURATION_LT_TRAINED_REG",
"address_offset": "0x0104",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_RX_TRAINED": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt rx trained.
  1 - Indicates that the receiver finite impulse response (FIR) filter coefficients have all been set, and that the receiver portion of training is complete. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616964,
},
"CONFIGURATION_LT_PRESET_REG": {"description": "CONFIGURATION_LT_PRESET_REG",
"address_offset": "0x0108",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_PRESET_TO_TX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt preset to tx.
  0 - Normal operation. Doesn't set any value the preset bit.
  1 - set the value of the preset bit that is transmitted to the link partner in the control block of the training frame. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616968,
},
"CONFIGURATION_LT_INIT_REG": {"description": "CONFIGURATION_LT_INIT_REG",
"address_offset": "0x010C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_INITIALIZE_TO_TX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt initialize to tx.
  To set the value of the initialize bit that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616972,
},
"CONFIGURATION_LT_SEED_REG0": {"description": "CONFIGURATION_LT_SEED_REG0",
"address_offset": "0x0110",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_PSEUDO_SEED0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "11",
"desc": "ctl lt pseudo seed0.
  This 11-bit signal seeds the training pattern generator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616976,
},
"CONFIGURATION_LT_COEFFICIENT_REG0": {"description": "CONFIGURATION_LT_COEFFICIENT_REG0",
"address_offset": "0x0130",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_K_P1_TO_TX0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt k p1 to tx0.
  This 2-bit field is used to set the value of the k+1 coefficient update field that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_K0_TO_TX0": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "ctl ltk0 to tx0.
  This 2-bit field is used to set the value of the k0 coefficient update field that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_K_M1_TO_TX0": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt k m1 to tx0.
  This 2-bit field is used to set the value of the k-1 coefficient update field that  is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT_P1_TO_TX0": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt stat p1 to tx0.
  This 2-bit field is used to set the value of the k+1 coefficient update status that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT0_TO_TX0": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt stat0 to tx0.
  This 2-bit field is used to set the value of the k0 coefficient update status that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT_M1_TO_TX0": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "ctl_lt_stat_m1_to_tx0.
  This 2-bit field is used to set the value of the k-1 coefficient update status  that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617008,
},
"USER_REG_0": {"description": "USER_REG_0",
"address_offset": "0x0134",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"USER_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "user register0.
  User-defined signal from the AXI4-Reg map user_reg0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617012,
},
"SWITCH_CORE_SPEED_REG": {"description": "SWITCH_CORE_SPEED_REG",
"address_offset": "0x0138",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"AXI_CTL_CORE_MODE_SWITCH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "axi ctl core mode switch.
  0 - Normal operation
  1 - Enables the mode switch line rate from 10G and 25G and vice versa.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617016,
},
"CONFIGURATION_1588_32BIT_REG": {"description": "CONFIGURATION_1588_32BIT_REG",
"address_offset": "0x013C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_LAT_ADJ_ENB": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx lat adj enb.
  1 - The delay computation on the TX path takes into account the value provided by the ctl_tx_latency_0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_LAT_ADJ_ENB": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx lat adj enb
  1 - The delay computation on the RX path takes into account the value provided by the ctl_rx_latency_0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TIMSTAMP_ADJ_ENB": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx timstamp adj enb.
  1 - The delay computation on the TX path takes into account the value obtained from GT DRP read for latency of the TX gearbox FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TIMSTAMP_ADJ_ENB": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx timstamp adj enb.
  1 - The delay computation on the RX path takes into account the value obtained from the GT DRP read for latency of the RX gearbox FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_CORE_SPEED": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl core speed.
  This signal indicates the speed with which the core is working.
  0 - 25G
  1 - 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617020,
},
"TX_CONFIGURATION_1588_REG": {"description": "TX_CONFIGURATION_1588_REG",
"address_offset": "0x0140",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_LATENCY": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx latency
  This is the static latency of the TX path of the core including the GT.
  The MSB 16 bits indicate the delay in ns and the LSB 16 bits indicate sub ns values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617024,
},
"RX_CONFIGURATION_1588_REG": {"description": "RX_CONFIGURATION_1588_REG",
"address_offset": "0x0144",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_LATENCY": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx latency
  This is the static latency of the RX path of the core including the GT.
  The MSB 16 bits indicate the delay in ns and the LSB 16 bits indicate sub ns values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617028,
},
"STAT_TX_STATUS_REG1": {"description": "STAT_TX_STATUS_REG1",
"address_offset": "0x0400",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx local fault.
  0 - Normal operation
  1 - Indicates the receive decoder state machine is in the TX_INIT state. This output is level sensitive. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_GMII_FIFO_OVF_1H_R_OUT": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx gmii fifo ovf 1h r out.
  TX FIFO overflow.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_GMII_FIFO_UNF_1H_R_OUT": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx gmii fifo unf 1h r out.
  TX FIFO underflow.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_BAD_PARITY": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx bad parity.
  Increment on any clock cycle where the  user-generated parity is calculated as  incorrect by the Tx parity checking logic.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617728,
},
"STAT_RX_STATUS_REG1": {"description": "STAT_RX_STATUS_REG1",
"address_offset": "0x0404",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_HI_BER": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx hi ber.
  High Bit Error Rate Indicator.
  1 - the BER is too high as defined by IEEE Std. 802.3. Corresponds to MDIO register bit 3.32.1 as defined in Clause 49.2.14.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_REMOTE_FAULT": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx remote fault.
   0 - Remote fault condition does not exist.
   1 - It indicates a remote fault condition was detected. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx local fault.
  1 - indicates the receive decoder state machine is in the RX_INIT state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_INTERNAL_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx internal local fault.
  1 - when an internal local fault is generated due to test pattern generation or high bit error rate. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_RECEIVED_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx received local fault.
  0 - Normal operation
  1 - when enough local fault words are received from the link partner to trigger a fault condition as specified by the IEEE fault state machine.
      Remains High as long as the fault condition persists.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_BAD_PREAMBLE": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx bad preamble.
  0 - Indicates that an invalid preamble was not received.
  1 - Indicates that an invalid preamble was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_BAD_SFD": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx bad sfd.
  Increment bad SFD.
  0 - Indicates that an invalid SFD was not received.
  1 - Indicates that an invalid SFD was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_GOT_SIGNAL_OS": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx got signal os.
  Signal OS indication.
  1 - It indicates that a signal OS word was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617732,
},
"STAT_STATUS_REG1": {"description": "STAT_STATUS_REG1",
"address_offset": "0x0408",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FIFO_ERROR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx fifo error.
  Transmit clock compensation FIFO error indicator.
  0 - Normal operation
  1 - Indicates the clock compensation FIFO under or overflowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_PTP_FIFO_READ_ERROR": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx ptp fifo read error.
  Transmit PTP FIFO read error.
  0 - Normal operation
  1 - Indicates that an error occurred during the PTP Tag read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_PTP_FIFO_WRITE_ERROR": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx ptp fifo write error.
  Transmit PTP FIFO write error.
  0 - Normal operation
  1 - Indicates that an error occurred during the PTP Tag write. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_FIFO_ERROR": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx fifo error.
  Receive clock compensation FIFO error indicator.
  0 - Normal operation
  1 - Indicates the clock compensation FIFO under or overflowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617736,
},
"STAT_RX_BLOCK_LOCK_REG": {"description": "STAT_RX_BLOCK_LOCK_REG",
"address_offset": "0x040C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BLOCK_LOCK": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx block lock
  Block lock status.
  1 - Indicates that block lock is achieved as defined in Clause 49.2.14 and MDIO register 3.32.0
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617740,
},
"STAT_RX_RSFEC_STATUS_REG": {"description": "STAT_RX_RSFEC_STATUS_REG",
"address_offset": "0x043C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_LANE_ALIGNMENT_STATUS": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx rsfec lane alignment status.
  1 - Indicates that the RX RS-FEC block has achieved alignment on the data from the transceiver. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_RSFEC_HI_SER": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx rsfec hi ser.
  Indicates high symbol error.
  1 - If the number of RS-FEC symbol errors in a window of 8192 codewords exceeds the threshold of 417.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617788,
},
"STAT_RX_FEC_STATUS_REG": {"description": "STAT_RX_FEC_STATUS_REG",
"address_offset": "0x0448",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_RX_LOCK": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat fec rx lock.
  1 - while the ctl_fec_rx_enable is asserted when the FEC decoder detects the frame boundary.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_FEC_LOCK_ERROR": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat fec lock error.
  1 - If the FEC decoder has been unable to detect the frame boundary after about 5 ms. It is cleared when the frame boundary is detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617800,
},
"STAT_TX_RSFEC_STATUS_REG": {"description": "STAT_TX_RSFEC_STATUS_REG",
"address_offset": "0x044C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_RSFEC_LANE_ALIGNMENT_STATUS": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx rsfec lane alignment status.
  1 - Indicates that the TX RS-FEC block has achieved alignment on the incoming PCS data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617804,
},
"STAT_TSN_REG": {"description": "STAT_TSN_REG",
"address_offset": "0x049C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_VERIFY": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat tx mm verify.
  Indicates verification status.
  0 - Indicates that verification is complete.
  1 - Indicates that verification is successful.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617884,
},
"STAT_TX_FLOW_CONTROL_REG1": {"description": "STAT_TX_FLOW_CONTROL_REG1",
"address_offset": "0x0450",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_VALID": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "stat tx pause valid.
  If a bit of this bus is set to 1, the core has transmitted a pause packet. If bit[8] is set to 1, a global pause packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617808,
},
"STAT_RX_FLOW_CONTROL_REG1": {"description": "STAT_RX_FLOW_CONTROL_REG1",
"address_offset": "0x0454",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REQ": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "stat rx pause req.
  Pause request signal.
  When the RX receives a valid pause frame, it sets the corresponding bit of this bus to a 1 and keep it at 1 until the pause packet has been processed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_PAUSE_VALID": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "9",
"desc": "stat rx pause valid.
  This bus indicates that a pause packet was received and the associated quanta on the stat_rx_pause_quanta[8:0][15:0] bus is valid and must be used for pause processing. If an 802.3x Ethernet MAC Pause packet is received, bit[8] is set to 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617812,
},
"STAT_AN_STATUS": {"description": "STAT_AN_STATUS",
"address_offset": "0x0458",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_FEC_ENABLE": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat an fec enable.
  Used to enable the use of clause 74 FEC on the link.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_RS_FEC_ENABLE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat an rs fec enable.
  Used to enable the use of clause 91 FEC on the link.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_AUTONEG_COMPLETE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat an autoneg complete.
  1 - Indicates the auto-negotiation is complete and rx link status from the PCS has been received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_PARALLEL_DETECTION_FAULT": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "stat an parallel detection fault.
  1 - Indicated a parallel detection fault during auto-negotiation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_TX_PAUSE_ENABLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat an tx pause enable.
  1 - Enable station-to-station (global) pause packet generation in the transmit path to control data flow in the receive path.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_RX_PAUSE_ENABLE": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat an rx pause enable.
  1 - Enable station-to-station (global) pause packet interpretation in the receive path, in order to control data flow from the transmitter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_VALID": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability valid.
  1 - Indicates when all of the link partner advertisements become valid.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_AUTONEG_ABLE": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp autoneg able.
  1 - Indicates that the link partner is able to perform auto-negotiation.
      It becomes valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_PAUSE": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp pause.
  1 - Indicates the advertised value of the PAUSE bit, (C0), in the receive link codeword from the link partner.
      It becomes valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ASM_DIR": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp asm dir.
  1 - Indicates the advertised value of the ASMDIR bit, (C1), in the receive link codeword from the link partner.
      It becomes valid when the output signal  stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_RF": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp rf.
  1 - Indicates link partner remote fault.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_10G_ABILITY": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 10g ability.
  1 - Indicates the clause 74 FEC ability associated with 10Gb/s lane protocols that is being advertised by the link partner.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_10G_REQUEST": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 10g request.
  1 - Indicates that the link partner is requesting that the clause 74 FEC be used on the 10Gb/s lane protocols.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_EXTENDED_ABILITY_VALID": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp extended ability valid.
  1 - It indicates that the detected extended abilities are valid.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_EXTENDED_FEC": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "4",
"desc": "stat an lp ability extended fec.
  Indicates the extended FEC abilities as defined in Schedule 3.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_25G_RS_REQUEST": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 25g rs request.
  1 - Indicates that the link partner is requesting the clause 91 (or 108) rs FEC be used for the 25gb/s lane protocols. 
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_25G_BASER_REQUEST": {"access": "read-only",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 25g baser request.
  1 - Indicates that the link partner is requesting the clause 74 FEC be used for the 25Gb/s lane base-r protocols.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617816,
},
"STAT_AN_ABILITY": {"description": "STAT_AN_ABILITY",
"address_offset": "0x045C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_LP_ABILITY_1000BASE_KX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 1000base kx.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_10GBASE_KX4": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 10gbase kx4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_10GBASE_KR": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 10gbase kr.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_40GBASE_KR4": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 40gbase kr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_40GBASE_CR4": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 40gbase cr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_CR10": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase cr10.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_KP4": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase kp4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_KR4": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase kr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_CR4": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase cr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KRCR_S": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase krcr_s.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KRCR": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase krcr.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KR1": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase kr1.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_CR1": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase cr1.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_50GBASE_KR2": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 50gbase kr2.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_50GBASE_CR2": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 50gbase cr2.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617820,
},
"STAT_AN_LINK_CTL": {"description": "STAT_AN_LINK_CTL",
"address_offset": "0x0460",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_LINK_CNTL_1000BASE_KX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 1000base kx.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_10GBASE_KX4": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 10gbase kx4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_10GBASE_KR": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 10gbase kr.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_40GBASE_KR4": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 40gbase kr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_40GBASE_CR4": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 40gbase cr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_CR10": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase cr10.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_KP4": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase kp4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_KR4": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase kr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_CR4": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase cr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KRCR_S": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase krcr_s.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KRCR": {"access": "read-only",
"bit_offset": "20",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase krcr.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KR1": {"access": "read-only",
"bit_offset": "22",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase kr1.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_CR1": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase cr1.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_50GBASE_KR2": {"access": "read-only",
"bit_offset": "26",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 50gbase kr2.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_50GBASE_CR2": {"access": "read-only",
"bit_offset": "28",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 50gbase cr2.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617824,
},
"STAT_LT_STATUS_REG1": {"description": "STAT_LT_STATUS_REG1",
"address_offset": "0x0464",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_INITIALIZE_FROM_RX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt initialize from rx.
  This signal reflects the value of the initialize control bit received in the control block from the link partner.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_PRESET_FROM_RX": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt preset from rx.
  This signal reflects the value of the preset control bit received in the control block from the link partner.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617828,
},
"STAT_LT_STATUS_REG2": {"description": "STAT_LT_STATUS_REG2",
"address_offset": "0x0468",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_TRAINING": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt training.
  1 - Indicates when the respective link training state machine is performing link training.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_FRAME_LOCK": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt frame lock.
  1 - Asserted when link training has begun.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617832,
},
"STAT_LT_STATUS_REG3": {"description": "STAT_LT_STATUS_REG3",
"address_offset": "0x046C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_SIGNAL_DETECT": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt signal detect.
  1 - Indicates when the respective link training state machine has entered the SEND_DATA state, in which normal PCS operation can resume.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_TRAINING_FAIL": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt training fail.
  1 - Asserted during link training if the corresponding link training state machine detects a time-out during the training period.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617836,
},
"STAT_LT_STATUS_REG4": {"description": "STAT_LT_STATUS_REG4",
"address_offset": "0x0470",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_RX_SOF": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt rx sof.
  1 - For 1 RX SerDes clock cycle to indicate the start of the link training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617840,
},
"STAT_LT_COEFFICIENT0_REG": {"description": "STAT_LT_COEFFICIENT0_REG",
"address_offset": "0x0474",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_K_P1_FROM_RX0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k p1 from rx0.
  This 2-bit field indicates the update control bits for the k+1 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_K0_FROM_RX0": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k0 from rx0.
  This 2-bit field indicates the update control bits for the k0 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_K_M1_FROM_RX0": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k m1 from rx0.
  This 2-bit field indicates the update control bits for the k-1 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT_P1_FROM_RX0": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat p1 from rx0.
  This 2-bit field indicates the update status bits for the k+1 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT0_FROM_RX0": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat0 from rx0.
  This 2-bit field indicates the update status bits for the k0 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT_M1_FROM_RX0": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat m1 from rx0.
  This 2-bit field indicates the update status bits for the k-1 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617844,
},
"STAT_RX_VALID_CTRL_CODE": {"description": "STAT_RX_VALID_CTRL_CODE",
"address_offset": "0x0494",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VALID_CTRL_CODE": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx valid ctrl code.
  1 - Indicates that a PCS block with a valid control code was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617876,
},
"STAT_CORE_SPEED_REG": {"description": "STAT_CORE_SPEED_REG",
"address_offset": "0x0498",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CORE_SPEED": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat core speed.
  0 - Standalone 25G
  1 - Standalone 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUNTIME_SWITCHABLE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "runtime switchable.
  0 - Runtime Switchable 25G
  1 - Runtime Switchable 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617880,
},
"STATUS_CYCLE_COUNT_LSB": {"description": "STATUS_CYCLE_COUNT_LSB",
"address_offset": "0x0500",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CYCLE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat cycle reg0.
  Contains a count of the number of RX core clock cycles between TICK_REG writes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617984,
},
"STATUS_CYCLE_COUNT_MSB": {"description": "STATUS_CYCLE_COUNT_MSB",
"address_offset": "0x0504",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CYCLE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat cycle reg1.
  Contains a count of the number of RX core clock cycles between TICK_REG writes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617988,
},
"STAT_RX_FRAMING_ERR_LSB": {"description": "STAT_RX_FRAMING_ERR_LSB",
"address_offset": "0x0648",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAMING_ERR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx framing err reg0.
  RX sync header bits framing error.
  Each PCS Lane has a four-bit bus that indicates how many sync header errors were received for that PCS Lane.
  The value of the bus is only valid when the corresponding stat_rx_framing_err_valid is a 1.
  The values on these buses can be updated at any time and are intended to be used as increment values for sync header error counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618312,
},
"STAT_RX_FRAMING_ERR_MSB": {"description": "STAT_RX_FRAMING_ERR_MSB",
"address_offset": "0x064C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAMING_ERR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx framing err reg1.
  RX sync header bits framing error.
  Each PCS Lane has a four-bit bus that indicates how many sync header errors were received for that PCS Lane.
  The value of the bus is only valid when the corresponding stat_rx_framing_err_valid is a 1.
  The values on these buses can be updated at any time and are intended to be used as increment values for sync header error counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618316,
},
"STAT_RX_BAD_CODE_LSB": {"description": "STAT_RX_BAD_CODE_LSB",
"address_offset": "0x0660",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_CODE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx bad code reg0.
  Increment for 64B/66B code violations.
  This signal indicates that the RX PCS receive state machine is in the RX_E state as specified by the IEEE Std 802.3-2015. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618336,
},
"STAT_RX_BAD_CODE_MSB": {"description": "STAT_RX_BAD_CODE_MSB",
"address_offset": "0x0664",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_CODE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx bad code reg1.
  Increment for 64B/66B code violations.
  This signal indicates that the RX PCS receive state machine is in the RX_E state as specified by the IEEE Std 802.3-2015.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618340,
},
"STAT_RX_ERROR_LSB": {"description": "STAT_RX_ERROR_LSB",
"address_offset": "0x0668",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx error reg0.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates a mismatch occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618344,
},
"STAT_RX_ERROR_MSB": {"description": "STAT_RX_ERROR_MSB",
"address_offset": "0x066C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx error reg1.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates a mismatch occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618348,
},
"STAT_RX_RSFEC_CORRECTED_CW_INC_LSB": {"description": "STAT_RX_RSFEC_CORRECTED_CW_INC_LSB",
"address_offset": "0x0670",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_CORRECTED_CW_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec corrected cw inc reg0.
  Increment for corrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618352,
},
"STAT_RX_RSFEC_CORRECTED_CW_INC_MSB": {"description": "STAT_RX_RSFEC_CORRECTED_CW_INC_MSB",
"address_offset": "0x0674",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_CORRECTED_CW_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec corrected cw inc reg1.
  Increment for corrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618356,
},
"STAT_RX_RSFEC_UNCORRECTED_CW_INC_LSB": {"description": "STAT_RX_RSFEC_UNCORRECTED_CW_INC_LSB",
"address_offset": "0x0678",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_UNCORRECTED_CW_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec uncorrected cw inc reg0.
  Increment for uncorrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618360,
},
"STAT_RX_RSFEC_UNCORRECTED_CW_INC_MSB": {"description": "STAT_RX_RSFEC_UNCORRECTED_CW_INC_MSB",
"address_offset": "0x067C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_UNCORRECTED_CW_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec uncorrected cw inc reg1.
  Increment for uncorrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618364,
},
"STAT_RX_RSFEC_ERR_COUNT0_INC_LSB": {"description": "STAT_RX_RSFEC_ERR_COUNT0_INC_LSB",
"address_offset": "0x0680",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_ERR_COUNT0_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec err count inc reg0.
  Increment for detected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618368,
},
"STAT_RX_RSFEC_ERR_COUNT0_INC_MSB": {"description": "STAT_RX_RSFEC_ERR_COUNT0_INC_MSB",
"address_offset": "0x0684",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_ERR_COUNT0_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec err count inc reg1.
  Increment for detected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618372,
},
"STAT_TX_FRAME_ERROR_LSB": {"description": "STAT_TX_FRAME_ERROR_LSB",
"address_offset": "0x06A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FRAME_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx frame error reg0.
  Increment for packets with tx_axis_tuser set to indicate an End of Packet(EOP) abort.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618400,
},
"STAT_TX_FRAME_ERROR_MSB": {"description": "STAT_TX_FRAME_ERROR_MSB",
"address_offset": "0x06A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FRAME_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx frame error reg1.
  Increment for packets with tx_axis_tuser set to indicate an End of Packet(EOP) abort.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618404,
},
"STAT_TX_TOTAL_PACKETS_LSB": {"description": "STAT_TX_TOTAL_PACKETS_LSB",
"address_offset": "0x0700",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total packets reg0.
  Increment for the total number of packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618496,
},
"STAT_TX_TOTAL_PACKETS_MSB": {"description": "STAT_TX_TOTAL_PACKETS_MSB",
"address_offset": "0x0704",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total packets reg1.
  Increment for the total number of packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618500,
},
"STAT_TX_TOTAL_GOOD_PACKETS_LSB": {"description": "STAT_TX_TOTAL_GOOD_PACKETS_LSB",
"address_offset": "0x0708",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total good packets reg0.
  Increment for the total number of good packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618504,
},
"STAT_TX_TOTAL_GOOD_PACKETS_MSB": {"description": "STAT_TX_TOTAL_GOOD_PACKETS_MSB",
"address_offset": "0x070C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total good packets reg1.
  Increment for the total number of good packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618508,
},
"STAT_TX_TOTAL_BYTES_LSB": {"description": "STAT_TX_TOTAL_BYTES_LSB",
"address_offset": "0x0710",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total bytes reg0.
  Increment for the total number of bytes transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618512,
},
"STAT_TX_TOTAL_BYTES_MSB": {"description": "STAT_TX_TOTAL_BYTES_MSB",
"address_offset": "0x0714",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total bytes reg1.
  Increment for the total number of bytes transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618516,
},
"STAT_TX_TOTAL_GOOD_BYTES_LSB": {"description": "STAT_TX_TOTAL_GOOD_BYTES_LSB",
"address_offset": "0x0718",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total good bytes reg0.
  Increment for the total number of good bytes transmitted.
  This value is only non-zero when a packet is transmitted completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618520,
},
"STAT_TX_TOTAL_GOOD_BYTES_MSB": {"description": "STAT_TX_TOTAL_GOOD_BYTES_MSB",
"address_offset": "0x071C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total good bytes reg1.
  Increment for the total number of good bytes transmitted.
  This value is only non-zero when a packet is transmitted completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618524,
},
"STAT_TX_PACKET_64_BYTES_LSB": {"description": "STAT_TX_PACKET_64_BYTES_LSB",
"address_offset": "0x0720",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_64_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 64 bytes reg0.
  Increment for good and bad packets transmitted that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618528,
},
"STAT_TX_PACKET_64_BYTES_MSB": {"description": "STAT_TX_PACKET_64_BYTES_MSB",
"address_offset": "0x0724",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_64_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 64 bytes reg1.
  Increment for good and bad packets transmitted that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618532,
},
"STAT_TX_PACKET_65_127_BYTES_LSB": {"description": "STAT_TX_PACKET_65_127_BYTES_LSB",
"address_offset": "0x0728",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_65_127_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 65 - 127 bytes reg0.
  Increment for good and bad packets transmitted that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618536,
},
"STAT_TX_PACKET_65_127_BYTES_MSB": {"description": "STAT_TX_PACKET_65_127_BYTES_MSB",
"address_offset": "0x072C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_65_127_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 65-127 bytes reg1.
  Increment for good and bad packets transmitted that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618540,
},
"STAT_TX_PACKET_128_255_BYTES_LSB": {"description": "STAT_TX_PACKET_128_255_BYTES_LSB",
"address_offset": "0x0730",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_128_255_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 128-255 bytes reg0.
  Increment for good and bad packets transmitted that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618544,
},
"STAT_TX_PACKET_128_255_BYTES_MSB": {"description": "STAT_TX_PACKET_128_255_BYTES_MSB",
"address_offset": "0x0734",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_128_255_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 128-255 bytes reg1.
  Increment for good and bad packets transmitted that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618548,
},
"STAT_TX_PACKET_256_511_BYTES_LSB": {"description": "STAT_TX_PACKET_256_511_BYTES_LSB",
"address_offset": "0x0738",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_256_511_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 256-511 bytes reg0.
  Increment for good and bad packets transmitted that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618552,
},
"STAT_TX_PACKET_256_511_BYTES_MSB": {"description": "STAT_TX_PACKET_256_511_BYTES_MSB",
"address_offset": "0x073C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_256_511_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 256-511 bytes reg1.
  Increment for good and bad packets transmitted that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618556,
},
"STAT_TX_PACKET_512_1023_BYTES_LSB": {"description": "STAT_TX_PACKET_512_1023_BYTES_LSB",
"address_offset": "0x0740",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_512_1023_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 512-1023 bytes reg0.
  Increment for good and bad packets transmitted that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618560,
},
"STAT_TX_PACKET_512_1023_BYTES_MSB": {"description": "STAT_TX_PACKET_512_1023_BYTES_MSB",
"address_offset": "0x0744",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_512_1023_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 512-1023 bytes reg1.
  Increment for good and bad packets transmitted that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618564,
},
"STAT_TX_PACKET_1024_1518_BYTES_LSB": {"description": "STAT_TX_PACKET_1024_1518_BYTES_LSB",
"address_offset": "0x0748",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1024_1518_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1024-1518 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618568,
},
"STAT_TX_PACKET_1024_1518_BYTES_MSB": {"description": "STAT_TX_PACKET_1024_1518_BYTES_MSB",
"address_offset": "0x074C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1024_1518_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1024-1518 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618572,
},
"STAT_TX_PACKET_1519_1522_BYTES_LSB": {"description": "STAT_TX_PACKET_1519_1522_BYTES_LSB",
"address_offset": "0x0750",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1519_1522_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1519-1522 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,519 to 1,522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618576,
},
"STAT_TX_PACKET_1519_1522_BYTES_MSB": {"description": "STAT_TX_PACKET_1519_1522_BYTES_MSB",
"address_offset": "0x0754",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1519_1522_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1519-1522 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,519 to 1,522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618580,
},
"STAT_TX_PACKET_1523_1548_BYTES_LSB": {"description": "STAT_TX_PACKET_1523_1548_BYTES_LSB",
"address_offset": "0x0758",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1523_1548_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1523-1548 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618584,
},
"STAT_TX_PACKET_1523_1548_BYTES_MSB": {"description": "STAT_TX_PACKET_1523_1548_BYTES_MSB",
"address_offset": "0x075C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1523_1548_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1523-1548 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618588,
},
"STAT_TX_PACKET_1549_2047_BYTES_LSB": {"description": "STAT_TX_PACKET_1549_2047_BYTES_LSB",
"address_offset": "0x0760",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1549_2047_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1549-2047 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618592,
},
"STAT_TX_PACKET_1549_2047_BYTES_MSB": {"description": "STAT_TX_PACKET_1549_2047_BYTES_MSB",
"address_offset": "0x0764",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1549_2047_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1549-2047 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618596,
},
"STAT_TX_PACKET_2048_4095_BYTES_LSB": {"description": "STAT_TX_PACKET_2048_4095_BYTES_LSB",
"address_offset": "0x0768",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_2048_4095_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 2048-4095 bytes reg0.
  Increment for good and bad packets transmitted that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618600,
},
"STAT_TX_PACKET_2048_4095_BYTES_MSB": {"description": "STAT_TX_PACKET_2048_4095_BYTES_MSB",
"address_offset": "0x076C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_2048_4095_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 2048-4095 bytes reg1.
  Increment for good and bad packets transmitted that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618604,
},
"STAT_TX_PACKET_4096_8191_BYTES_LSB": {"description": "STAT_TX_PACKET_4096_8191_BYTES_LSB",
"address_offset": "0x0770",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_4096_8191_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 4096-8191 bytes reg0.
  Increment for good and bad packets transmitted that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618608,
},
"STAT_TX_PACKET_4096_8191_BYTES_MSB": {"description": "STAT_TX_PACKET_4096_8191_BYTES_MSB",
"address_offset": "0x0774",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_4096_8191_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 4096-8191 bytes reg1.
  Increment for good and bad packets transmitted that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618612,
},
"STAT_TX_PACKET_8192_9215_BYTES_LSB": {"description": "STAT_TX_PACKET_8192_9215_BYTES_LSB",
"address_offset": "0x0778",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_8192_9215_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 8192-9215 bytes reg0.
  Increment for good and bad packets transmitted that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618616,
},
"STAT_TX_PACKET_8192_9215_BYTES_MSB": {"description": "STAT_TX_PACKET_8192_9215_BYTES_MSB",
"address_offset": "0x077C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_8192_9215_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 8192-9215 bytes reg1.
  Increment for good and bad packets transmitted that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618620,
},
"STAT_TX_PACKET_LARGE_LSB": {"description": "STAT_TX_PACKET_LARGE_LSB",
"address_offset": "0x0780",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_LARGE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet large reg0.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618624,
},
"STAT_TX_PACKET_LARGE_MSB": {"description": "STAT_TX_PACKET_LARGE_MSB",
"address_offset": "0x0784",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_LARGE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet large reg1.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618628,
},
"STAT_TX_PACKET_SMALL_LSB": {"description": "STAT_TX_PACKET_SMALL_LSB",
"address_offset": "0x0788",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_SMALL_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet small reg0.
  Increment for all packets that are less than 64 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618632,
},
"STAT_TX_PACKET_SMALL_MSB": {"description": "STAT_TX_PACKET_SMALL_MSB",
"address_offset": "0x078C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_SMALL_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet small reg1.
  Increment for all packets that are less than 64 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618636,
},
"STAT_TX_BAD_FCS_LSB": {"description": "STAT_TX_BAD_FCS_LSB",
"address_offset": "0x07B8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx bad fcs reg0.
  Increment for packets greater than 64 bytes that have FCS errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618680,
},
"STAT_TX_BAD_FCS_MSB": {"description": "STAT_TX_BAD_FCS_MSB",
"address_offset": "0x07BC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx bad fcs reg1.
  Increment for packets greater than 64 bytes that have FCS errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618684,
},
"STAT_TX_UNICAST_LSB": {"description": "STAT_TX_UNICAST_LSB",
"address_offset": "0x07D0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_UNICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx unicast reg0.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618704,
},
"STAT_TX_UNICAST_MSB": {"description": "STAT_TX_UNICAST_MSB",
"address_offset": "0x07D4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_UNICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx unicast reg1.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618708,
},
"STAT_TX_MULTICAST_LSB": {"description": "STAT_TX_MULTICAST_LSB",
"address_offset": "0x07D8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MULTICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx multicast reg0.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618712,
},
"STAT_TX_MULTICAST_MSB": {"description": "STAT_TX_MULTICAST_MSB",
"address_offset": "0x07DC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MULTICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx multicast reg1.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618716,
},
"STAT_TX_BROADCAST_LSB": {"description": "STAT_TX_BROADCAST_LSB",
"address_offset": "0x07E0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BROADCAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx broadcast reg0.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618720,
},
"STAT_TX_BROADCAST_MSB": {"description": "STAT_TX_BROADCAST_MSB",
"address_offset": "0x07E4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BROADCAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx broadcast reg1.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618724,
},
"STAT_TX_VLAN_LSB": {"description": "STAT_TX_VLAN_LSB",
"address_offset": "0x07E8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_VLAN_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx vlan reg0.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618728,
},
"STAT_TX_VLAN_MSB": {"description": "STAT_TX_VLAN_MSB",
"address_offset": "0x07EC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_VLAN_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx vlan reg1.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618732,
},
"STAT_TX_PAUSE_LSB": {"description": "STAT_TX_PAUSE_LSB",
"address_offset": "0x07F0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx pause reg0.
  Increment for 802.3x MAC Pause Packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618736,
},
"STAT_TX_PAUSE_MSB": {"description": "STAT_TX_PAUSE_MSB",
"address_offset": "0x07F4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx pause reg1.
  Increment for 802.3x MAC Pause Packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618740,
},
"STAT_TX_USER_PAUSE_LSB": {"description": "STAT_TX_USER_PAUSE_LSB",
"address_offset": "0x07F8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_USER_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx user pause reg0.
  Increment for Priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618744,
},
"STAT_TX_USER_PAUSE_MSB": {"description": "STAT_TX_USER_PAUSE_MSB",
"address_offset": "0x07FC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_USER_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx user pause reg1.
  Increment for Priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618748,
},
"STAT_RX_TOTAL_PACKETS_LSB": {"description": "STAT_RX_TOTAL_PACKETS_LSB",
"address_offset": "0x0808",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total packets reg0.
  Increment for the total number of packets received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618760,
},
"STAT_RX_TOTAL_PACKETS_MSB": {"description": "STAT_RX_TOTAL_PACKETS_MSB",
"address_offset": "0x080C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total packets reg1.
  Increment for the total number of packets received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618764,
},
"STAT_RX_TOTAL_GOOD_PACKETS_LSB": {"description": "STAT_RX_TOTAL_GOOD_PACKETS_LSB",
"address_offset": "0x0810",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total good packets reg0.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618768,
},
"STAT_RX_TOTAL_GOOD_PACKETS_MSB": {"description": "STAT_RX_TOTAL_GOOD_PACKETS_MSB",
"address_offset": "0x0814",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total good packets reg1.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618772,
},
"STAT_RX_TOTAL_BYTES_LSB": {"description": "STAT_RX_TOTAL_BYTES_LSB",
"address_offset": "0x0818",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total bytes reg0.
  Increment for the total number of bytes received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618776,
},
"STAT_RX_TOTAL_BYTES_MSB": {"description": "STAT_RX_TOTAL_BYTES_MSB",
"address_offset": "0x081C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total bytes reg1.
  Increment for the total number of bytes received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618780,
},
"STAT_RX_TOTAL_GOOD_BYTES_LSB": {"description": "STAT_RX_TOTAL_GOOD_BYTES_LSB",
"address_offset": "0x0820",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total good bytes reg0.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618784,
},
"STAT_RX_TOTAL_GOOD_BYTES_MSB": {"description": "STAT_RX_TOTAL_GOOD_BYTES_MSB",
"address_offset": "0x0824",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total good bytes reg1.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618788,
},
"STAT_RX_PACKET_64_BYTES_LSB": {"description": "STAT_RX_PACKET_64_BYTES_LSB",
"address_offset": "0x0828",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_64_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 64 bytes reg0.
  Increment for good and bad packets received that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618792,
},
"STAT_RX_PACKET_64_BYTES_MSB": {"description": "STAT_RX_PACKET_64_BYTES_MSB",
"address_offset": "0x082C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_64_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 64 bytes reg1.
  Increment for good and bad packets received that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618796,
},
"STAT_RX_PACKET_65_127_BYTES_LSB": {"description": "STAT_RX_PACKET_65_127_BYTES_LSB",
"address_offset": "0x0830",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_65_127_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 65-127 bytes reg0.
  Increment for good and bad packets received that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618800,
},
"STAT_RX_PACKET_65_127_BYTES_MSB": {"description": "STAT_RX_PACKET_65_127_BYTES_MSB",
"address_offset": "0x0834",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_65_127_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 65-127 bytes reg1.
  Increment for good and bad packets received that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618804,
},
"STAT_RX_PACKET_128_255_BYTES_LSB": {"description": "STAT_RX_PACKET_128_255_BYTES_LSB",
"address_offset": "0x0838",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_128_255_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 128-255 bytes reg0.
  Increment for good and bad packets received that contain 128 to 255 bytes. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618808,
},
"STAT_RX_PACKET_128_255_BYTES_MSB": {"description": "STAT_RX_PACKET_128_255_BYTES_MSB",
"address_offset": "0x083C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_128_255_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 128-255 bytes reg1.
  Increment for good and bad packets received that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618812,
},
"STAT_RX_PACKET_256_511_BYTES_LSB": {"description": "STAT_RX_PACKET_256_511_BYTES_LSB",
"address_offset": "0x0840",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_256_511_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 256-511 bytes reg0.
  Increment for good and bad packets received that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618816,
},
"STAT_RX_PACKET_256_511_BYTES_MSB": {"description": "STAT_RX_PACKET_256_511_BYTES_MSB",
"address_offset": "0x0844",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_256_511_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 256-511 bytes reg1.
  Increment for good and bad packets received that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618820,
},
"STAT_RX_PACKET_512_1023_BYTES_LSB": {"description": "STAT_RX_PACKET_512_1023_BYTES_LSB",
"address_offset": "0x0848",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_512_1023_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 512-1023 bytes reg0.
  Increment for good and bad packets received that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618824,
},
"STAT_RX_PACKET_512_1023_BYTES_MSB": {"description": "STAT_RX_PACKET_512_1023_BYTES_MSB",
"address_offset": "0x084C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_512_1023_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 512-1023 bytes reg1.
  Increment for good and bad packets received that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618828,
},
"STAT_RX_PACKET_1024_1518_BYTES_LSB": {"description": "STAT_RX_PACKET_1024_1518_BYTES_LSB",
"address_offset": "0x0850",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1024_1518_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1024-1518 bytes reg0.
  Increment for good and bad packets received that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618832,
},
"STAT_RX_PACKET_1024_1518_BYTES_MSB": {"description": "STAT_RX_PACKET_1024_1518_BYTES_MSB",
"address_offset": "0x0854",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1024_1518_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1024-1518 bytes reg1.
  Increment for good and bad packets received that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618836,
},
"STAT_RX_PACKET_1519_1522_BYTES_LSB": {"description": "STAT_RX_PACKET_1519_1522_BYTES_LSB",
"address_offset": "0x0858",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1519_1522_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1519-1522 bytes reg0.
  Increment for good and bad packets received that contain 1519 to 1522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618840,
},
"STAT_RX_PACKET_1519_1522_BYTES_MSB": {"description": "STAT_RX_PACKET_1519_1522_BYTES_MSB",
"address_offset": "0x085C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1519_1522_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1519-1522 bytes reg1.
  Increment for good and bad packets received that contain 1519 to 1522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618844,
},
"STAT_RX_PACKET_1523_1548_BYTES_LSB": {"description": "STAT_RX_PACKET_1523_1548_BYTES_LSB",
"address_offset": "0x0860",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1523_1548_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1523-1548 bytes reg0.
  Increment for good and bad packets received that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618848,
},
"STAT_RX_PACKET_1523_1548_BYTES_MSB": {"description": "STAT_RX_PACKET_1523_1548_BYTES_MSB",
"address_offset": "0x0864",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1523_1548_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1523-1548 bytes reg1.
  Increment for good and bad packets received that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618852,
},
"STAT_RX_PACKET_1549_2047_BYTES_LSB": {"description": "STAT_RX_PACKET_1549_2047_BYTES_LSB",
"address_offset": "0x0868",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1549_2047_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1549-2047 bytes reg0.
  Increment for good and bad packets received that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618856,
},
"STAT_RX_PACKET_1549_2047_BYTES_MSB": {"description": "STAT_RX_PACKET_1549_2047_BYTES_MSB",
"address_offset": "0x086C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1549_2047_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1549-2047 bytes reg1.
  Increment for good and bad packets received that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618860,
},
"STAT_RX_PACKET_2048_4095_BYTES_LSB": {"description": "STAT_RX_PACKET_2048_4095_BYTES_LSB",
"address_offset": "0x0870",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_2048_4095_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 2048-4095 bytes reg0.
  Increment for good and bad packets received that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618864,
},
"STAT_RX_PACKET_2048_4095_BYTES_MSB": {"description": "STAT_RX_PACKET_2048_4095_BYTES_MSB",
"address_offset": "0x0874",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_2048_4095_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 2048-4095 bytes reg1.
  Increment for good and bad packets received that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618868,
},
"STAT_RX_PACKET_4096_8191_BYTES_LSB": {"description": "STAT_RX_PACKET_4096_8191_BYTES_LSB",
"address_offset": "0x0878",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_4096_8191_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 4096-8191 bytes reg0.
  Increment for good and bad packets received that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618872,
},
"STAT_RX_PACKET_4096_8191_BYTES_MSB": {"description": "STAT_RX_PACKET_4096_8191_BYTES_MSB",
"address_offset": "0x087C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_4096_8191_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 4096-8191 bytes reg1.
  Increment for good and bad packets received that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618876,
},
"STAT_RX_PACKET_8192_9215_BYTES_LSB": {"description": "STAT_RX_PACKET_8192_9215_BYTES_LSB",
"address_offset": "0x0880",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_8192_9215_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 8192-9215 bytes reg0.
  Increment for good and bad packets received that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618880,
},
"STAT_RX_PACKET_8192_9215_BYTES_MSB": {"description": "STAT_RX_PACKET_8192_9215_BYTES_MSB",
"address_offset": "0x0884",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_8192_9215_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 8192-9215 bytes reg1.
  Increment for good and bad packets received that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618884,
},
"STAT_RX_PACKET_LARGE_LSB": {"description": "STAT_RX_PACKET_LARGE_LSB",
"address_offset": "0x0888",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_LARGE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet large reg0.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618888,
},
"STAT_RX_PACKET_LARGE_MSB": {"description": "STAT_RX_PACKET_LARGE_MSB",
"address_offset": "0x088C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_LARGE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet large reg1.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618892,
},
"STAT_RX_PACKET_SMALL_LSB": {"description": "STAT_RX_PACKET_SMALL_LSB",
"address_offset": "0x0890",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_SMALL_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet small reg0.
  Increment for all packets that are less than 64 bytes long.
  Packets that are less than four bytes are dropped.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618896,
},
"STAT_RX_PACKET_SMALL_MSB": {"description": "STAT_RX_PACKET_SMALL_MSB",
"address_offset": "0x0894",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_SMALL_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet small reg1.
  Increment for all packets that are less than 64 bytes long.
  Packets that are less than four bytes are dropped.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618900,
},
"STAT_RX_UNDERSIZE_LSB": {"description": "STAT_RX_UNDERSIZE_LSB",
"address_offset": "0x0898",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNDERSIZE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx undersize reg0.
  Increment for packets shorter than ctl_rx_min_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618904,
},
"STAT_RX_UNDERSIZE_MSB": {"description": "STAT_RX_UNDERSIZE_MSB",
"address_offset": "0x089C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNDERSIZE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx undersize reg1.
  Increment for packets shorter than ctl_rx_min_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618908,
},
"STAT_RX_FRAGMENT_LSB": {"description": "STAT_RX_FRAGMENT_LSB",
"address_offset": "0x8A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx fragment reg0.
  Increment for packets shorter than ctl_rx_min_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618912,
},
"STAT_RX_FRAGMENT_MSB": {"description": "STAT_RX_FRAGMENT_MSB",
"address_offset": "0x8A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx fragment reg1.
  Increment for packets shorter than ctl_rx_min_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618916,
},
"STAT_RX_OVERSIZE_LSB": {"description": "STAT_RX_OVERSIZE_LSB",
"address_offset": "0x08A8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_OVERSIZE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx oversize reg0.
  Increment for packets longer than ctl_rx_max_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618920,
},
"STAT_RX_OVERSIZE_MSB": {"description": "STAT_RX_OVERSIZE_MSB",
"address_offset": "0x08AC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_OVERSIZE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx oversize reg1.
  Increment for packets longer than ctl_rx_max_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618924,
},
"STAT_RX_TOOLONG_LSB": {"description": "STAT_RX_TOOLONG_LSB",
"address_offset": "0x08B0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOOLONG_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx toolong reg0.
  Increment for packets longer than ctl_rx_max_packet_len with good and bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618928,
},
"STAT_RX_TOOLONG_MSB": {"description": "STAT_RX_TOOLONG_MSB",
"address_offset": "0x08B4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOOLONG_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx toolong reg1.
  Increment for packets longer than ctl_rx_max_packet_len with good and bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618932,
},
"STAT_RX_JABBER_LSB": {"description": "STAT_RX_JABBER_LSB",
"address_offset": "0x08B8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_JABBER_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx jabber reg0.
  Increment for packets longer than ctl_rx_max_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618936,
},
"STAT_RX_JABBER_MSB": {"description": "STAT_RX_JABBER_MSB",
"address_offset": "0x08BC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_JABBER_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx jabber reg1.
  Increment for packets longer than ctl_rx_max_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618940,
},
"STAT_RX_BAD_FCS_LSB": {"description": "STAT_RX_BAD_FCS_LSB",
"address_offset": "0x08C0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx bad fcs reg0.
  Bad FCS indicator.
  The value on this bus indicates packets received with a bad FCS, but not a stomped FCS during a cycle.
  This output is pulsed for one clock cycle to indicate an error condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618944,
},
"STAT_RX_BAD_FCS_MSB": {"description": "STAT_RX_BAD_FCS_MSB",
"address_offset": "0x08C4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx bad fcs reg1.
  Bad FCS indicator.
  The value on this bus indicates packets received with a bad FCS, but not a stomped FCS during a cycle.
  This output is pulsed for one clock cycle to indicate an error condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618948,
},
"STAT_RX_PACKET_BAD_FCS_LSB": {"description": "STAT_RX_PACKET_BAD_FCS_LSB",
"address_offset": "0x08C8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet bad fcs reg0.
  Increment for packets between 64 and ctl_rx_max_packet_len bytes that have Frame Check Sequence (FCS) errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618952,
},
"STAT_RX_PACKET_BAD_FCS_MSB": {"description": "STAT_RX_PACKET_BAD_FCS_MSB",
"address_offset": "0x08CC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet bad fcs reg1.
  Increment for packets between 64 and ctl_rx_max_packet_len bytes that have Frame Check Sequence (FCS) errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618956,
},
"STAT_RX_STOMPED_FCS_LSB": {"description": "STAT_RX_STOMPED_FCS_LSB",
"address_offset": "0x08D0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_STOMPED_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx stomped fcs reg0.
  Stomped FCS indicator.
  The value on this bus indicates the packets were received with a stomped FCS.
  A stomped FCS is defined as the bitwise inverse of the expected good FCS.
  This output is pulsed for one clock cycle to indicate the stomped condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618960,
},
"STAT_RX_STOMPED_FCS_MSB": {"description": "STAT_RX_STOMPED_FCS_MSB",
"address_offset": "0x08D4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_STOMPED_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx stomped fcs reg1.
  Stomped FCS indicator.
  The value on this bus indicates the packets were received with a stomped FCS.
  A stomped FCS is defined as the bitwise inverse of the expected good FCS.
  This output is pulsed for one clock cycle to indicate the stomped condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618964,
},
"STAT_RX_UNICAST_LSB": {"description": "STAT_RX_UNICAST_LSB",
"address_offset": "0x08D8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx unicast reg0.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618968,
},
"STAT_RX_UNICAST_MSB": {"description": "STAT_RX_UNICAST_MSB",
"address_offset": "0x08DC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx unicast reg1.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618972,
},
"STAT_RX_MULTICAST_LSB": {"description": "STAT_RX_MULTICAST_LSB",
"address_offset": "0x08E0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MULTICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx multicast reg0.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618976,
},
"STAT_RX_MULTICAST_MSB": {"description": "STAT_RX_MULTICAST_MSB",
"address_offset": "0x08E4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MULTICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx multicast reg1.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618980,
},
"STAT_RX_BROADCAST_LSB": {"description": "STAT_RX_BROADCAST_LSB",
"address_offset": "0x08E8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BROADCAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx broadcast reg0.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618984,
},
"STAT_RX_BROADCAST_MSB": {"description": "STAT_RX_BROADCAST_MSB",
"address_offset": "0x08EC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BROADCAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx broadcast reg1.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618988,
},
"STAT_RX_VLAN_LSB": {"description": "STAT_RX_VLAN_LSB",
"address_offset": "0x08F0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VLAN_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx vlan reg0.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618992,
},
"STAT_RX_VLAN_MSB": {"description": "STAT_RX_VLAN_MSB",
"address_offset": "0x08F4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VLAN_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx vlan reg1.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618996,
},
"STAT_RX_PAUSE_LSB": {"description": "STAT_RX_PAUSE_LSB",
"address_offset": "0x08F8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx pause reg0.
  Increment for 802.3x MAC Pause packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619000,
},
"STAT_RX_PAUSE_MSB": {"description": "STAT_RX_PAUSE_MSB",
"address_offset": "0x08FC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx pause reg1.
  Increment for 802.3x MAC Pause packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619004,
},
"STAT_RX_USER_PAUSE_LSB": {"description": "STAT_RX_USER_PAUSE_LSB",
"address_offset": "0x0900",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_USER_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx user pause reg0.
  Increment for priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619008,
},
"STAT_RX_USER_PAUSE_MSB": {"description": "STAT_RX_USER_PAUSE_MSB",
"address_offset": "0x0904",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_USER_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx user pause reg1.
  Increment for priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619012,
},
"STAT_RX_INRANGEERR_LSB": {"description": "STAT_RX_INRANGEERR_LSB",
"address_offset": "0x0908",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_INRANGEERR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx inrangeerr reg0.
  Increment for packets with Length field error but with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619016,
},
"STAT_RX_INRANGEERR_MSB": {"description": "STAT_RX_INRANGEERR_MSB",
"address_offset": "0x090C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_INRANGEERR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx inrangeerr reg1.
  Increment for packets with Length field error but with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619020,
},
"STAT_RX_TRUNCATED_LSB": {"description": "STAT_RX_TRUNCATED_LSB",
"address_offset": "0x0910",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TRUNCATED_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx truncated reg0.
  Packet truncation indicator.
  1 - Indicates that the current packet in flight is truncated due to its length exceeding ctl_rx_max_packet_len[14:0].
      This output is pulsed for one clock cycle to indicate the truncated condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619024,
},
"STAT_RX_TRUNCATED_MSB": {"description": "STAT_RX_TRUNCATED_MSB",
"address_offset": "0x0914",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TRUNCATED_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx truncated reg1.
  Packet truncation indicator.
  1 - Indicates that the current packet in flight is truncated due to its length exceeding ctl_rx_max_packet_len[14:0].
      This output is pulsed for one clock cycle to indicate the truncated condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619028,
},
"STAT_RX_TEST_PATTERN_MISMATCH_LSB": {"description": "STAT_RX_TEST_PATTERN_MISMATCH_LSB",
"address_offset": "0x0918",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TEST_PATTERN_MISMATCH_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx test pattern mismatch reg0.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates how many mismatches occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set to a 1.
  This output can be used to generate MDIO register as defined in Clause 45.
  This output is pulsed for one clock cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619032,
},
"STAT_RX_TEST_PATTERN_MISMATCH_MSB": {"description": "STAT_RX_TEST_PATTERN_MISMATCH_MSB",
"address_offset": "0x091C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TEST_PATTERN_MISMATCH_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx test pattern mismatch reg1.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates how many mismatches occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set to a 1.
  This output can be used to generate MDIO register as defined in Clause 45.
  This output is pulsed for one clock cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619036,
},
"STAT_FEC_INC_CORRECT_COUNT_LSB": {"description": "STAT_FEC_INC_CORRECT_COUNT_LSB",
"address_offset": "0x0920",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CORRECT_COUNT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat fec inc correct count reg0.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected and corrected a bit errors in the corresponding frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619040,
},
"STAT_FEC_INC_CORRECT_COUNT_MSB": {"description": "STAT_FEC_INC_CORRECT_COUNT_MSB",
"address_offset": "0x0924",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CORRECT_COUNT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat fec inc correct count reg1.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected and corrected a bit errors in the corresponding frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619044,
},
"STAT_FEC_INC_CANT_CORRECT_COUNT_LSB": {"description": "STAT_FEC_INC_CANT_CORRECT_COUNT_LSB",
"address_offset": "0x0928",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CANT_CORRECT_COUNT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat fec inc cant correct count reg0.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619048,
},
"STAT_FEC_INC_CANT_CORRECT_COUNT_MSB": {"description": "STAT_FEC_INC_CANT_CORRECT_COUNT_MSB",
"address_offset": "0x092C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CANT_CORRECT_COUNT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat fec inc cant correct count reg1.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619052,
},
"STAT_TX_MM_STATUS_LSB": {"description": "STAT_TX_MM_STATUS_LSB",
"address_offset": "0x0980",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_STATUS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm status.
  1 - when a preemptable packet (initial fragment or complete packet) is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619136,
},
"STAT_TX_MM_STATUS_MSB": {"description": "STAT_TX_MM_STATUS_MSB",
"address_offset": "0x0984",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_STATUS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm status.
  1 - when a preemptable packet (initial fragment or complete packet) is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619140,
},
"STAT_TX_MM_FRAGMENT_LSB": {"description": "STAT_TX_MM_FRAGMENT_LSB",
"address_offset": "0x0988",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm fragment.
  1 - when a continuation fragment of an preemptable packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619144,
},
"STAT_TX_MM_FRAGMENT_MSB": {"description": "STAT_TX_MM_FRAGMENT_MSB",
"address_offset": "0x098C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm fragment.
  1 - when a continuation fragment of an preemptable packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619148,
},
"STAT_TX_MM_HOLD_LSB": {"description": "STAT_TX_MM_HOLD_LSB",
"address_offset": "0x0990",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_HOLD_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm hold.
  Asserted when ctl_hold_request transitions from 1’b0 to 1’b1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619152,
},
"STAT_TX_MM_HOLD_MSB": {"description": "STAT_TX_MM_HOLD_MSB",
"address_offset": "0x0994",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_HOLD_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm hold.
  Asserted when ctl_hold_request transitions from 1’b0 to 1’b1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619156,
},
"STAT_RX_MM_ASSEMBLY_ERROR_LSB": {"description": "STAT_RX_MM_ASSEMBLY_ERROR_LSB",
"address_offset": "0x0998",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_ASSEMBLY_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm assembly error.
  Asserted when errors are detected during fragment assembly.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619160,
},
"STAT_RX_MM_ASSEMBLY_ERROR_MSB": {"description": "STAT_RX_MM_ASSEMBLY_ERROR_MSB",
"address_offset": "0x099C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_ASSEMBLY_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm assembly error.
  Asserted when errors are detected during fragment assembly.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619164,
},
"STAT_RX_MM_FRAME_SMD_ERROR_LSB": {"description": "STAT_RX_MM_FRAME_SMD_ERROR_LSB",
"address_offset": "0x09A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_SMD_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm frame smd error.
  Asserted when the frame fragment is rejected due to an incorrect SMD value or arriving with SMD-C when no frame is in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619168,
},
"STAT_RX_MM_FRAME_SMD_ERROR_MSB": {"description": "STAT_RX_MM_FRAME_SMD_ERROR_MSB",
"address_offset": "0x09A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_SMD_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm frame smd error.
  Asserted when the frame fragment is rejected due to an incorrect SMD value or arriving with SMD-C when no frame is in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619172,
},
"STAT_RX_MM_FRAME_ASSEMBLY_OK_LSB": {"description": "STAT_RX_MM_FRAME_ASSEMBLY_OK_LSB",
"address_offset": "0x09A8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_ASSEMBLY_OK_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm frame assembly ok.
  Asserted when all the preemptable frame fragments have been assembled and presented.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619176,
},
"STAT_RX_MM_FRAME_ASSEMBLY_OK_MSB": {"description": "STAT_RX_MM_FRAME_ASSEMBLY_OK_MSB",
"address_offset": "0x09AC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_ASSEMBLY_OK_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm frame assembly ok.
  Asserted when all the preemptable frame fragments have been assembled and presented.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619180,
},
"STAT_RX_MM_FRAGMENT_LSB": {"description": "STAT_RX_MM_FRAGMENT_LSB",
"address_offset": "0x09B0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm fragment.
  Asserted when a fragment frame is received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619184,
},
"STAT_RX_MM_FRAGMENT_MSB": {"description": "STAT_RX_MM_FRAGMENT_MSB",
"address_offset": "0x09B4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm fragment.
  Asserted when a fragment frame is received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619188,
},
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 11:04:43.041
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa psu_cortexa53_1], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 11:04:43.179
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa psu_cortexa53_1], Result: [null, {"axi_dma_0": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354560,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354564,
},
"MM2S_CURDESC": {"description": "MM2S DMA Current Descriptor Pointer Register",
"address_offset": "0x08",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354568,
},
"MM2S_CURDESC_MSB": {"description": "MM2S DMA Current Descriptor Pointer Register",
"address_offset": "0x0C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354572,
},
"MM2S_TAILDESC": {"description": "MM2S DMA Tail Descriptor Pointer Register",
"address_offset": "0x10",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354576,
},
"MM2S_TAILDESC_MSB": {"description": "MM2S DMA Tail Descriptor Pointer Register",
"address_offset": "0x14",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354580,
},
"SG_CTL": {"description": "Scatter/Gather User and Cache Control Register",
"address_offset": "0x2C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SG_CACHE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Scatter/Gather Cache Control. Values written in this register reflect on the m_axi_sg_arcache and m_axi_sg_awcache signals of the M_AXI_SG interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SG_USER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Scatter/Gather User Control. Values written in this register reflect on the m_axi_sg_aruser and m_axi_sg_awuser signals of the M_AXI_SG interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354604,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354608,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354612,
},
"S2MM_CURDESC": {"description": "S2MM DMA Current Descriptor Pointer Register",
"address_offset": "0x38",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). 
Buffer Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and so forth. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354616,
},
"S2MM_CURDESC_MSB": {"description": "S2MM DMA Current Descriptor Pointer Register",
"address_offset": "0x3C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354620,
},
"S2MM_TAILDESC": {"description": "S2MM DMA Tail Descriptor Pointer Register",
"address_offset": "0x40",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel DMACR.RS bit is set to 0 (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. 
Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354624,
},
"S2MM_TAILDESC_MSB": {"description": "S2MM DMA Tail Descriptor Pointer Register",
"address_offset": "0x44",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354628,
},
},
"axi_gpio_0": {"GPIO_DATA": {"description": "Channel-1 AXI GPIO Data register",
"address_offset": "0x0",
"access": "read-write",
"size": "1",
"interface": "S_AXI",
"fields": {"CH1_DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420096,
},
"GPIO_TRI": {"description": "Channel-1 AXI GPIO 3-State Control register",
"address_offset": "0x4",
"access": "read-write",
"size": "1",
"interface": "S_AXI",
"fields": {"CH1_TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420100,
},
"GPIO2_DATA": {"description": "Channel-2 AXI GPIO Data register",
"address_offset": "0x8",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH2_DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420104,
},
"GPIO2_TRI": {"description": "Channel-2 AXI GPIO 3-State Control register",
"address_offset": "0xC",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH2_TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420108,
},
"GIER": {"description": "Global_Interrupt_Enable register",
"address_offset": "0x11C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"INT_EN": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output
  0 - Disabled
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420380,
},
"IP_IER": {"description": "IP Interrupt Enable register",
"address_offset": "0x128",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH1_INT_EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CH2_INT_EN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 2 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420392,
},
"IP_ISR": {"description": "IP Interrupt Status register",
"address_offset": "0x120",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH1_INT_S": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 Interrupt Status
  0 - No Channel 1 input interrupt
  1 - Channel 1 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CH2_INT_S": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 2 Interrupt Status
  0 - No Channel 2 input interrupt
  1 - Channel 2 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420384,
},
},
"psu_acpu_gic": {},
"psu_adma_0": {},
"psu_adma_1": {},
"psu_adma_2": {},
"psu_adma_3": {},
"psu_adma_4": {},
"psu_adma_5": {},
"psu_adma_6": {},
"psu_adma_7": {},
"psu_afi_0": {},
"psu_afi_1": {},
"psu_afi_2": {},
"psu_afi_3": {},
"psu_afi_4": {},
"psu_afi_5": {},
"psu_afi_6": {},
"psu_ams": {},
"psu_apm_0": {},
"psu_apm_1": {},
"psu_apm_2": {},
"psu_apm_5": {},
"psu_apu": {},
"psu_can_1": {},
"psu_cci_gpv": {},
"psu_cci_reg": {},
"psu_coresight_0": {},
"psu_crf_apb": {},
"psu_crl_apb": {},
"psu_csu_0": {},
"psu_csudma": {},
"psu_ctrl_ipi": {},
"psu_ddr_0": {},
"psu_ddr_1": {},
"psu_ddr_phy": {},
"psu_ddr_qos_ctrl": {},
"psu_ddr_xmpu0_cfg": {},
"psu_ddr_xmpu1_cfg": {},
"psu_ddr_xmpu2_cfg": {},
"psu_ddr_xmpu3_cfg": {},
"psu_ddr_xmpu4_cfg": {},
"psu_ddr_xmpu5_cfg": {},
"psu_ddrc_0": {},
"psu_dp": {},
"psu_dpdma": {},
"psu_efuse": {},
"psu_ethernet_3": {},
"psu_fpd_gpv": {},
"psu_fpd_slcr": {},
"psu_fpd_slcr_secure": {},
"psu_fpd_xmpu_cfg": {},
"psu_fpd_xmpu_sink": {},
"psu_gdma_0": {},
"psu_gdma_1": {},
"psu_gdma_2": {},
"psu_gdma_3": {},
"psu_gdma_4": {},
"psu_gdma_5": {},
"psu_gdma_6": {},
"psu_gdma_7": {},
"psu_gpio_0": {},
"psu_gpu": {},
"psu_i2c_0": {},
"psu_i2c_1": {},
"psu_iou_scntr": {},
"psu_iou_scntrs": {},
"psu_iousecure_slcr": {},
"psu_iouslcr_0": {},
"psu_ipi_0": {},
"psu_lpd_slcr": {},
"psu_lpd_slcr_secure": {},
"psu_lpd_xppu": {},
"psu_lpd_xppu_sink": {},
"psu_mbistjtag": {},
"psu_message_buffers": {},
"psu_ocm": {},
"psu_ocm_ram_0": {},
"psu_ocm_xmpu_cfg": {},
"psu_pcie": {},
"psu_pcie_attrib_0": {},
"psu_pcie_dma": {},
"psu_pcie_high1": {},
"psu_pcie_high2": {},
"psu_pcie_low": {},
"psu_pmu_global_0": {},
"psu_qspi_0": {},
"psu_qspi_linear_0": {},
"psu_r5_0_atcm_global": {},
"psu_r5_0_btcm_global": {},
"psu_r5_1_atcm_global": {},
"psu_r5_1_btcm_global": {},
"psu_r5_tcm_ram_global": {},
"psu_rcpu_gic": {},
"psu_rpu": {},
"psu_rsa": {},
"psu_rtc": {},
"psu_sata": {},
"psu_sd_1": {},
"psu_serdes": {},
"psu_siou": {},
"psu_smmu_gpv": {},
"psu_smmu_reg": {},
"psu_ttc_0": {},
"psu_ttc_1": {},
"psu_ttc_2": {},
"psu_ttc_3": {},
"psu_uart_0": {},
"psu_uart_1": {},
"psu_usb_0": {},
"psu_usb_xhci_0": {},
"psu_wdt_0": {},
"psu_wdt_1": {},
"xxv_ethernet_0": {"GT_RESET_REG": {"description": "GT_RESET_REG",
"address_offset": "0x0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_GT_RESET_ALL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt reset all.
  0 - Normal operation
  1 - Reset the GT
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_GT_RX_RESET": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt rx reset.
  0 - Normal operation
  1 - Reset the GT receiver
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_GT_TX_RESET": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt tx reset.
  0 - Normal operation
  1 - Reset the GT transmitter
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616704,
},
"RESET_REG": {"description": "RESET_REG",
"address_offset": "0x0004",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"RX_SERDES_RESET": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "rx serdes reset.
  0 - Normal operation
  1 - Reset the Receiver serdes
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_SERDES_RESET": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "tx serdes reset.
  0 - Normal operation
  1 - Reset the transmitter serdes
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_RESET": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "rx reset.
  0 - Normal operation
  1 - Reset the receiver 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_RESET": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "tx_reset.
  0 - Normal operation
  1 - Reset the transmitter
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616708,
},
"MODE_REG": {"description": "MODE_REG",
"address_offset": "0x0008",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"TICK_REG_MODE_SEL": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "tick reg mode sel.
  1 - tick_reg is used to read the statistics counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LOCAL_LOOPBACK": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "ctl local loopback.
  0 - Normal operation
  1 - places the transceiver into the PMA loopback state. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616712,
},
"CONFIGURATION_TX_REG1": {"description": "CONFIGURATION_TX_REG1",
"address_offset": "0x000C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx enable.
  0 - only IDLEs are transmitted by the core.
  1 - Enables the transmission of data. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_FCS_INS_ENABLE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx fcs ins enable.
  0 - the core does not add FCS to packet.
  1 - the core calculates and adds the FCS to the packet. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_IGNORE_FCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx ignore fcs.
  0 - A packet with bad FCS is being transmitted, it is not binned as good.
  1 - A packet with bad FCS is binned as good.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_LFI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send lfi.
  0 - Normal operation
  1 - Transmit Local Fault Indication (LFI) code word. Takes precedence over Remote Fault Indication (RFI).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_RFI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send rfi.
  0 - Normal operation
  1 - the TX path transmits only RFI code words.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_IDLE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send idle.
  0 - Normal operation
  1 - The TX path only transmits Idle code words.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_IPG_VALUE": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "4",
"desc": "ctl tx ipg value.
  This signal can be optionally present.
  The ctl_tx_ipg_value defines the target average minimum Inter Packet Gap (IPG, in bytes) inserted between AXI4-Stream packets.
  Valid values are 8 to 12.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern.
  0 - Normal operation
  1 - Test pattern generation enable for the TX core. A value of 1 enables test mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern enable.
  0 - Normal operation
  1 - Test pattern generation enable for the TX core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern select.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_DATA_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx data pattern select.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_CUSTOM_PREAMBLE_ENABLE": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_tx_custom_preamble_enable.
  0 - Normal operation
  1 - When it is set, the use of tx_preamblein as a custom preamble instead of inserting a standard preamble. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PRBS31_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "23",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx prbs31 test pattern enable.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616716,
},
"CONFIGURATION_RX_REG1": {"description": "CONFIGURATION_RX_REG1",
"address_offset": "0x0014",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable.
  0 - The RX completes the reception of the current packet (if any), it stops receiving packets by keeping the PCS from decoding incoming data.
  1 - Normal operation 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_DELETE_FCS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx delete fcs.
  0 - the core does not remove the FCS of the incoming packet.
  1 - the core deletes the FCS to the received packet. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_IGNORE_FCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx ignore fcs.
  0 - A packet received with an FCS error is sent with the rx_axis_tuser pin asserted during the last transfer (rx_axis_tlast sampled 1).
  1 - The core does not flag an FCS error at the AXI4-Stream interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_PROCESS_LFI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx process lfi.
  0 - the RX core ignores LF control codes coming in from the transceiver. 
  1 - the RX core expects and processes LF control codes coming in from the transceiver.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SFD": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sfd.
  0 - Normal operation
  1 - this input causes the MAC to check the Start of Frame Delimiter of the received frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_PREAMBLE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check preamble.
  0 - Normal operation
  1 - this input causes the MAC to check the preamble of the received frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_FORCE_RESYNC": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx force resync.
  0 - Normal operation
  1 - forces the reset operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TEST_PATTERN": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Test pattern checking enable for the RX core.
  0 - Normal operation
  1 - Enables test mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Test pattern enable for the RX core.
  0 - Normal operation
  1 - Enables test mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_DATA_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Data pattern select for RX core.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CUSTOM_PREAMBLE_ENABLE": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_rx_custom_preamble_enable.
  0 - Normal operation
  1 - This signal causes the side band of a packet presented on the AXI4-Stream to be the preamble as it appears on the line. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_PRBS31_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx prbs31 test pattern enable.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616724,
},
"CONFIGURATION_RX_MTU": {"description": "CONFIGURATION_RX_MTU",
"address_offset": "0x0018",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_MIN_PACKET_LEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "ctl rx min packet len.
  Any packet shorter than this value is considered to be undersized.
  If a packet has a size less than this value, the rx_axis_tuser signal is asserted during the rx_axis_tlast asserted cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_MAX_PACKET_LEN": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "15",
"desc": "ctl rx max packet len.
  Any packet longer than this value is considered to be oversized.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616728,
},
"CONFIGURATION_VL_LENGTH_REG": {"description": "CONFIGURATION_VL_LENGTH_REG",
"address_offset": "0x001C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_VL_LENGTH_MINUS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx vl length minus1.
  Normally set to 20479 (decimal). The normal value is equivalent to (16,383 x 5 -4) = 81,916.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_VL_LENGTH_MINUS1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx vl length minus1.
  Normally set to 20,479 (4FFF hex). The normal value is equivalent to (16,383 x 5 -4) = 81,916.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616732,
},
"CONFIGURATION_TSN_REG": {"description": "CONFIGURATION_TSN_REG",
"address_offset": "0x019C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_EN_PREEMPT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl en preempt.
  1 - It allows preemption.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_HOLD_REQUEST": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl hold request.
  1 - preempt traffic is withheld.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_DISABLE_VERIFY": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl disable verify.
  1 - It inhibits the verification process.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RESTART_VERIFY": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl restart verify.
  A 0-to-1 transition will trigger Verification if ctl_disable_verify = 1’b0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_ADDFRAG_SIZE": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "ctl addfrag size.
  Fragment size remaining to enable pre-emption.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_VERIFY_TIME": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "ctl verify time.
  Verification time-out value in milliseconds.
  Integer range 1-128.
  Default is 1 ms.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_VERIFY_LIMIT": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "ctl verify limit.
  Number of times core attempts Verification.
  Integer range 1-15.
  Default is 3.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617116,
},
"TICK_REG": {"description": "TICK_REG",
"address_offset": "0x0020",
"access": "write-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"TICK_REG": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "tick reg.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616736,
},
"CONFIGURATION_REVISION_REG": {"description": "CONFIGURATION_REVISION_REG",
"address_offset": "0x0024",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"MAJOR_REV": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "major revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MINOR_REV": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "minor revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PATCH_REV": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "patch revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616740,
},
"CONFIGURATION_TX_TEST_PAT_SEED_A_LSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_A_LSB",
"address_offset": "0x0028",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_A_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx test pattern seed a.
  Corresponds to MDIO registers 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616744,
},
"CONFIGURATION_TX_TEST_PAT_SEED_A_MSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_A_MSB",
"address_offset": "0x002C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_A_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "ctl tx test pattern seed a.
  Corresponds to MDIO registers 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616748,
},
"CONFIGURATION_TX_TEST_PAT_SEED_B_LSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_B_LSB",
"address_offset": "0x0030",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_B_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx test pattern seed b.
  Corresponds to MDIO registers 3.38 through to 3.41 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616752,
},
"CONFIGURATION_TX_TEST_PAT_SEED_B_MSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_B_MSB",
"address_offset": "0x0034",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_B_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "ctl tx test pattern seed b.
  Corresponds to MDIO registers 3.38 through to 3.41 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616756,
},
"CONFIGURATION_1588_REG": {"description": "CONFIGURATION_1588_REG",
"address_offset": "0x0038",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PTP_1STEP_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx ptp 1step enable.
  1 - this bit enables 1-step operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_PTP_TRANSPCLK_MODE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl ptp transpclk mode.
  1 - This input places the timestamping  logic into transparent clock mode. In this mode, the system timer input is interpreted as a correction value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PTP_LATENCY_ADJUST": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "11",
"desc": "ctl tx ptp latency adjust.
  This bus can be used to adjust the 1-step TX timestamp with respect to the 2-step timestamp.
  The units of bits [10:3] are nanoseconds and bits [2:0] are fractional nanoseconds.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616760,
},
"CONFIGURATION_TX_FLOW_CONTROL_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REG1",
"address_offset": "0x0040",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "TX pause enable signal.
  This input is used to enable the processing of the pause quanta for the corresponding priority.
  This signal gates transmission of pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616768,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG1",
"address_offset": "0x0044",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer0.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer1.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616772,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG2": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG2",
"address_offset": "0x0048",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER2": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer2.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER3": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer3.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616776,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG3": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG3",
"address_offset": "0x004C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER4": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer4.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER5": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer5.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616780,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG4": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG4",
"address_offset": "0x0050",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER6": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer6.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER7": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer7.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616784,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG5": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG5",
"address_offset": "0x0054",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER8": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer8.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616788,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG1",
"address_offset": "0x0058",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta0.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta1.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616792,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG2": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG2",
"address_offset": "0x005C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA2": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta2.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA3": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta3.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616796,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG3": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG3",
"address_offset": "0x0060",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA4": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta4.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA5": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta5.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616800,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG4": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG4",
"address_offset": "0x0064",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA6": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta6.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA7": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta7.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616804,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG5": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG5",
"address_offset": "0x0068",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA8": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta8.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616808,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_ETYPE_OP_REG": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_ETYPE_OP_REG",
"address_offset": "0x006C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ETHERTYPE_PPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx ethertype ppp.
  Ethertype for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_OPCODE_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx opcode ppp.
  Opcode for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616812,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_ETYPE_OP_REG": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_ETYPE_OP_REG",
"address_offset": "0x0070",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ETHERTYPE_GPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx ethertype gpp.
  Ethertype for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_OPCODE_GPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx opcode gpp.
  Opcode for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616816,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_LSB",
"address_offset": "0x0074",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_GPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx da gpp.
  Destination address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616820,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_MSB",
"address_offset": "0x0078",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_GPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx da gpp.
  Destination address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616824,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_LSB",
"address_offset": "0x007C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_GPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx sa gpp.
  Source address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616828,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_MSB",
"address_offset": "0x0080",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_GPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx sa gpp.
  Source address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616832,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_LSB",
"address_offset": "0x0084",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_PPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx da ppp.
  Destination address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616836,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_MSB",
"address_offset": "0x0088",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_PPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx da ppp.
  Destination address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616840,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_LSB",
"address_offset": "0x008C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_PPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx sa ppp.
  Source address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616844,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_MSB",
"address_offset": "0x0090",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_PPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx sa ppp.
  Source address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616848,
},
"CONFIGURATION_RX_FLOW_CONTROL_REG1": {"description": "CONFIGURATION_RX_FLOW_CONTROL_REG1",
"address_offset": "0x0094",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "Rx pause enable.
  This input is used to enable the processing of the pause quanta for the corresponding priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_FORWARD_CONTROL": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx forward control.
  0 - causes core to drop control packets.
  1 - Indicates that the core forwards control packets. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_GCP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable gcp.
  1 - Enables global control packet processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_PCP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable pcp.
  1 - Enables priority control packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_GPP": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable gpp.
  1 - Enables global pause packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_PPP": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable ppp.
  1 - Enables priority pause packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ACK": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ack.
  0 - ctl_rx_pause_ack[8:0] is not used.
  1 - the core uses the ctl_rx_pause_ack[8:0] bus for pause processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616852,
},
"CONFIGURATION_RX_FLOW_CONTROL_REG2": {"description": "CONFIGURATION_RX_FLOW_CONTROL_REG2",
"address_offset": "0x0098",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_CHECK_MCAST_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast gcp.
  0 - Normal operation
  1 - Enables global control multicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_GCP": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast gcp.
  0 - Normal operation
  1 - Enables global control unicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_GCP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa gcp.
  0 - Normal operation
  1 - Enables global control source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_GCP": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype gcp.
  0 - Normal operation
  1 - Enables global control ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_GCP": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode gcp.
  0 - Normal operation
  1 - Enables global control opcodeprocessing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_PCP": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast pcp.
  0 - Normal operation
  1 - Enables priority control multicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_PCP": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast pcp.
  0 - Normal operation
  1 - Enables priority control unicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_PCP": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa pcp.
  0 - Normal operation
  1 - Enables priority control source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_PCP": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype pcp.
  0 - Normal operation
  1 - Enables priority control ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_PCP": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode pcp.
  0 - Normal operation
  1 - Enables priority control opcode processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_GPP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast gpp.
  0 - Normal operation
  1 - Enables global pause multicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_GPP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast gpp.
  0 - Normal operation
  1 - Enables global pause unicast destination address processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_GPP": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa gpp.
  0 - Normal operation
  1 - Enables global pause source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_GPP": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype gpp.
  0 - Normal operation
  1 - Enables global pause ethertype processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_GPP": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode gpp.
  0 - Normal operation
  1 - Enables global pause opcode processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_PPP": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast ppp.
  0 - Normal operation
  1 - Enables priority pause multicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast ppp.
  0 - Normal operation
  1 - Enables priority pause unicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_PPP": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa ppp.
  0 - Normal operation
  1 - Enables priority pause source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_PPP": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype ppp.
  0 - Normal operation
  1 - Enables priority pause ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_PPP": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode ppp.
  0 - Normal operation
  1 - Enables priority pause opcode processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616856,
},
"CONFIGURATION_RX_FLOW_CONTROL_PPP_ETYPE_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_PPP_ETYPE_OP_REG",
"address_offset": "0x009C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_PPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype ppp.
  Ethertype field for priority pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode ppp.
  Priority pause opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616860,
},
"CONFIGURATION_RX_FLOW_CONTROL_GPP_ETYPE_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GPP_ETYPE_OP_REG",
"address_offset": "0x00A0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_GPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype gpp.
  Ethertype field for global pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_GPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode gpp.
  Global pause opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616864,
},
"CONFIGURATION_RX_FLOW_CONTROL_GCP_PCP_TYPE_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GCP_PCP_TYPE_REG",
"address_offset": "0x00A4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype gcp.
  Ethertype field for global control processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ETYPE_PCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype pcp.
  Ethertype field for priority control processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616868,
},
"CONFIGURATION_RX_FLOW_CONTROL_PCP_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_PCP_OP_REG",
"address_offset": "0x00A8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_OPCODE_MIN_PCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode min pcp.
  Minimum priority control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_MAX_PCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode max pcp.
  Maximum priority control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616872,
},
"CONFIGURATION_RX_FLOW_CONTROL_GCP_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GCP_OP_REG",
"address_offset": "0x00AC",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_OPCODE_MIN_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode min gcp.
  Minimum global control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_MAX_GCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode max gcp.
  Maximum global control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616876,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_LSB",
"address_offset": "0x00B0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_UCAST_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause da ucast.
  Unicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616880,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_MSB",
"address_offset": "0x00B4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_UCAST_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause da ucast.
  Unicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616884,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_LSB",
"address_offset": "0x00B8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_MCAST_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause da mcast.
  Multicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616888,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_MSB",
"address_offset": "0x00BC",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_MCAST_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause da mcast.
  Multicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616892,
},
"CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_LSB",
"address_offset": "0x00C0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_SA_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause sa.
  Source address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616896,
},
"CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_MSB",
"address_offset": "0x00C4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_SA_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause sa.
  Source address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616900,
},
"CONFIGURATION_RSFEC_REG": {"description": "CONFIGURATION_RSFEC_REG",
"address_offset": "0x00D0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RSFEC_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec enable.
  0 - Normal operation
  1 - Enable RS-FEC function.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RSFEC_CONSORTIUM_25G": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec consortium 25g.
  This signal switches between IEEE Clause 108 and 25G Ethernet Consortium modes.
  0 - IEEE 802.3by mode.
  1 - 25G Consortium specification mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_RSFEC_ENABLE_INDICATION": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx rsfec enable indication.
  0 - Bypass the error indication function (see IEEE Std 802.3by section 91.5.3.3).
  1 - Decoder indicates errors to the PCS sublayer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_RSFEC_ENABLE_CORRECTION": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx rsfec enable correction.
  0 - Decoder performs error detection without error correction (see IEEE 802.3by Clause 91.5.3.3).
  1 - Decoder also performs error correction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RSFEC_IEEE_ERROR_INDICATION_MODE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec ieee error indication mode.
  0 - If ctl_rx_rsfec_enable_correction and ctl_rx_rsfec_enable_indication are set to zero, the RS decoder is bypassed.
  1 - Core conforms to the IEEE RS-FEC specification.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616912,
},
"CONFIGURATION_FEC_REG": {"description": "CONFIGURATION_FEC_REG",
"address_offset": "0x00D4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_FEC_RX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec rx enable.
  0 - Normal operation
  1 - Enable the clause 74 FEC decoding of the received data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_FEC_TX_ENABLE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec tx enable.
  0 - Normal operation
  1 - Enable the clause 74 FEC encoding on the transmitted data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_FEC_ENABLE_ERROR_TO_PCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec enable error to pcs.
  0 - Normal operation
  1 - Clause 74 FEC enable error to PCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616916,
},
"CONFIGURATION_AN_CONTROL_REG1": {"description": "CONFIGURATION_AN_CONTROL_REG1",
"address_offset": "0x00E0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AUTONEG_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl autoneg enable.
  0 - Normal operation
  1 - Enable signal for auto-negotiation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AUTONEG_BYPASS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl autoneg bypass.
  0 - Normal operation
  1 - Auto-negotiation is turned off, but the PCS is connected to the output to allow operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"_CTL_AN_NONCE_SEED": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "8",
"desc": "ctl an nonce seed.
  8-bit seed to initialize the nonce field Polynomial generator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_PSEUDO_SEL": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an pseudo sel.
  Selects the polynomial generator  for the bit 49 random bit generator.
  0 - The polynomial is x7+x3+1.
  1 - The polynomial is x7+x6+1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RESTART_NEGOTIATION": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl restart negotiation.
  This input is used to trigger a restart of the auto-negotiation, regardless of what state the circuit is currently in.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_LOCAL_FAULT": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an local fault.
  This input signal is used to set the local_fault bit of the transmit link codeword.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616928,
},
"CONFIGURATION_AN_CONTROL_REG2": {"description": "CONFIGURATION_AN_CONTROL_REG2",
"address_offset": "0x00E4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AN_PAUSE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an pause.
  This is used to set the PAUSE bit, (C0), of the transmit link codeword.
  This signal might not be present if the core does not support pause.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ASMDIR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an asmdir.
  This is used to set the ASMDIR bit, (C1), of the transmit link codeword.
  This signal might not be present if the core does not support pause.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_10G_REQUEST": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 10g request.
  This signal is used to signal the link partner that the local station is requesting clause 74 FEC on the 10Gb/s lane protocols.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_ABILITY_OVERRIDE": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec ability override.
  1 - Then the FEC ability bit in the transmit link codeword is cleared.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_CL91_FEC_REQUEST": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an cl91 fec request.
  This bit is used to request clause 91 FEC.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_CL91_FEC_ABILITY": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an cl91 fec ability.
  This bit is used to indicate clause 91 FEC ability.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_25G_RS_REQUEST": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 25g rs request.
  This signal is used to signal the link partner that the local station is requesting rs FEC (clause 91 or 108) on the 25Gb/s lane protocols.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_25G_BASER_REQUEST": {"access": "read-write",
"bit_offset": "21",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 25g baser request.
  Indicates the baser FEC request.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616932,
},
"CONFIGURATION_AN_ABILITY": {"description": "CONFIGURATION_AN_ABILITY",
"address_offset": "0x00F8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AN_ABILITY_1000BASE_KX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 1000base kx.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_10GBASE_KX4": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 10gbase kx4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_10GBASE_KR": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 10gbase kr.  
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_40GBASE_KR4": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 40gbase kr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_40GBASE_CR4": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 40gbase cr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_CR10": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_an_ability_100gbase_cr10. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_KP4": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase kp4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_KR4": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase kr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_CR4": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase cr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KRCR_S": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase krcr s.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KRCR": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase krcr.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KR1": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase kr1.
   0 - Indicates that the interface advertises that it doesn't supports the protocol.
   1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_CR1": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase cr1.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_50GBASE_KR2": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 50gbase kr2.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_50GBASE_CR2": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 50gbase cr2.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616952,
},
"CONFIGURATION_LT_CONTROL_REG1": {"description": "CONFIGURATION_LT_CONTROL_REG1",
"address_offset": "0x0100",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_TRAINING_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt training enable.
  0 - When link training is disabled, all PCS lanes function in mission mode.
  1 - Enabled link training 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_RESTART_TRAINING": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt restart training.
  0 - Normal operation
  1 - This signal triggers a restart of link training regardless of the current state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616960,
},
"CONFIGURATION_LT_TRAINED_REG": {"description": "CONFIGURATION_LT_TRAINED_REG",
"address_offset": "0x0104",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_RX_TRAINED": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt rx trained.
  1 - Indicates that the receiver finite impulse response (FIR) filter coefficients have all been set, and that the receiver portion of training is complete. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616964,
},
"CONFIGURATION_LT_PRESET_REG": {"description": "CONFIGURATION_LT_PRESET_REG",
"address_offset": "0x0108",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_PRESET_TO_TX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt preset to tx.
  0 - Normal operation. Doesn't set any value the preset bit.
  1 - set the value of the preset bit that is transmitted to the link partner in the control block of the training frame. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616968,
},
"CONFIGURATION_LT_INIT_REG": {"description": "CONFIGURATION_LT_INIT_REG",
"address_offset": "0x010C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_INITIALIZE_TO_TX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt initialize to tx.
  To set the value of the initialize bit that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616972,
},
"CONFIGURATION_LT_SEED_REG0": {"description": "CONFIGURATION_LT_SEED_REG0",
"address_offset": "0x0110",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_PSEUDO_SEED0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "11",
"desc": "ctl lt pseudo seed0.
  This 11-bit signal seeds the training pattern generator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616976,
},
"CONFIGURATION_LT_COEFFICIENT_REG0": {"description": "CONFIGURATION_LT_COEFFICIENT_REG0",
"address_offset": "0x0130",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_K_P1_TO_TX0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt k p1 to tx0.
  This 2-bit field is used to set the value of the k+1 coefficient update field that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_K0_TO_TX0": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "ctl ltk0 to tx0.
  This 2-bit field is used to set the value of the k0 coefficient update field that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_K_M1_TO_TX0": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt k m1 to tx0.
  This 2-bit field is used to set the value of the k-1 coefficient update field that  is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT_P1_TO_TX0": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt stat p1 to tx0.
  This 2-bit field is used to set the value of the k+1 coefficient update status that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT0_TO_TX0": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt stat0 to tx0.
  This 2-bit field is used to set the value of the k0 coefficient update status that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT_M1_TO_TX0": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "ctl_lt_stat_m1_to_tx0.
  This 2-bit field is used to set the value of the k-1 coefficient update status  that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617008,
},
"USER_REG_0": {"description": "USER_REG_0",
"address_offset": "0x0134",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"USER_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "user register0.
  User-defined signal from the AXI4-Reg map user_reg0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617012,
},
"SWITCH_CORE_SPEED_REG": {"description": "SWITCH_CORE_SPEED_REG",
"address_offset": "0x0138",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"AXI_CTL_CORE_MODE_SWITCH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "axi ctl core mode switch.
  0 - Normal operation
  1 - Enables the mode switch line rate from 10G and 25G and vice versa.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617016,
},
"CONFIGURATION_1588_32BIT_REG": {"description": "CONFIGURATION_1588_32BIT_REG",
"address_offset": "0x013C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_LAT_ADJ_ENB": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx lat adj enb.
  1 - The delay computation on the TX path takes into account the value provided by the ctl_tx_latency_0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_LAT_ADJ_ENB": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx lat adj enb
  1 - The delay computation on the RX path takes into account the value provided by the ctl_rx_latency_0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TIMSTAMP_ADJ_ENB": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx timstamp adj enb.
  1 - The delay computation on the TX path takes into account the value obtained from GT DRP read for latency of the TX gearbox FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TIMSTAMP_ADJ_ENB": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx timstamp adj enb.
  1 - The delay computation on the RX path takes into account the value obtained from the GT DRP read for latency of the RX gearbox FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_CORE_SPEED": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl core speed.
  This signal indicates the speed with which the core is working.
  0 - 25G
  1 - 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617020,
},
"TX_CONFIGURATION_1588_REG": {"description": "TX_CONFIGURATION_1588_REG",
"address_offset": "0x0140",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_LATENCY": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx latency
  This is the static latency of the TX path of the core including the GT.
  The MSB 16 bits indicate the delay in ns and the LSB 16 bits indicate sub ns values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617024,
},
"RX_CONFIGURATION_1588_REG": {"description": "RX_CONFIGURATION_1588_REG",
"address_offset": "0x0144",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_LATENCY": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx latency
  This is the static latency of the RX path of the core including the GT.
  The MSB 16 bits indicate the delay in ns and the LSB 16 bits indicate sub ns values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617028,
},
"STAT_TX_STATUS_REG1": {"description": "STAT_TX_STATUS_REG1",
"address_offset": "0x0400",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx local fault.
  0 - Normal operation
  1 - Indicates the receive decoder state machine is in the TX_INIT state. This output is level sensitive. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_GMII_FIFO_OVF_1H_R_OUT": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx gmii fifo ovf 1h r out.
  TX FIFO overflow.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_GMII_FIFO_UNF_1H_R_OUT": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx gmii fifo unf 1h r out.
  TX FIFO underflow.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_BAD_PARITY": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx bad parity.
  Increment on any clock cycle where the  user-generated parity is calculated as  incorrect by the Tx parity checking logic.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617728,
},
"STAT_RX_STATUS_REG1": {"description": "STAT_RX_STATUS_REG1",
"address_offset": "0x0404",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_HI_BER": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx hi ber.
  High Bit Error Rate Indicator.
  1 - the BER is too high as defined by IEEE Std. 802.3. Corresponds to MDIO register bit 3.32.1 as defined in Clause 49.2.14.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_REMOTE_FAULT": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx remote fault.
   0 - Remote fault condition does not exist.
   1 - It indicates a remote fault condition was detected. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx local fault.
  1 - indicates the receive decoder state machine is in the RX_INIT state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_INTERNAL_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx internal local fault.
  1 - when an internal local fault is generated due to test pattern generation or high bit error rate. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_RECEIVED_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx received local fault.
  0 - Normal operation
  1 - when enough local fault words are received from the link partner to trigger a fault condition as specified by the IEEE fault state machine.
      Remains High as long as the fault condition persists.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_BAD_PREAMBLE": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx bad preamble.
  0 - Indicates that an invalid preamble was not received.
  1 - Indicates that an invalid preamble was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_BAD_SFD": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx bad sfd.
  Increment bad SFD.
  0 - Indicates that an invalid SFD was not received.
  1 - Indicates that an invalid SFD was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_GOT_SIGNAL_OS": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx got signal os.
  Signal OS indication.
  1 - It indicates that a signal OS word was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617732,
},
"STAT_STATUS_REG1": {"description": "STAT_STATUS_REG1",
"address_offset": "0x0408",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FIFO_ERROR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx fifo error.
  Transmit clock compensation FIFO error indicator.
  0 - Normal operation
  1 - Indicates the clock compensation FIFO under or overflowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_PTP_FIFO_READ_ERROR": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx ptp fifo read error.
  Transmit PTP FIFO read error.
  0 - Normal operation
  1 - Indicates that an error occurred during the PTP Tag read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_PTP_FIFO_WRITE_ERROR": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx ptp fifo write error.
  Transmit PTP FIFO write error.
  0 - Normal operation
  1 - Indicates that an error occurred during the PTP Tag write. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_FIFO_ERROR": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx fifo error.
  Receive clock compensation FIFO error indicator.
  0 - Normal operation
  1 - Indicates the clock compensation FIFO under or overflowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617736,
},
"STAT_RX_BLOCK_LOCK_REG": {"description": "STAT_RX_BLOCK_LOCK_REG",
"address_offset": "0x040C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BLOCK_LOCK": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx block lock
  Block lock status.
  1 - Indicates that block lock is achieved as defined in Clause 49.2.14 and MDIO register 3.32.0
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617740,
},
"STAT_RX_RSFEC_STATUS_REG": {"description": "STAT_RX_RSFEC_STATUS_REG",
"address_offset": "0x043C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_LANE_ALIGNMENT_STATUS": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx rsfec lane alignment status.
  1 - Indicates that the RX RS-FEC block has achieved alignment on the data from the transceiver. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_RSFEC_HI_SER": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx rsfec hi ser.
  Indicates high symbol error.
  1 - If the number of RS-FEC symbol errors in a window of 8192 codewords exceeds the threshold of 417.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617788,
},
"STAT_RX_FEC_STATUS_REG": {"description": "STAT_RX_FEC_STATUS_REG",
"address_offset": "0x0448",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_RX_LOCK": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat fec rx lock.
  1 - while the ctl_fec_rx_enable is asserted when the FEC decoder detects the frame boundary.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_FEC_LOCK_ERROR": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat fec lock error.
  1 - If the FEC decoder has been unable to detect the frame boundary after about 5 ms. It is cleared when the frame boundary is detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617800,
},
"STAT_TX_RSFEC_STATUS_REG": {"description": "STAT_TX_RSFEC_STATUS_REG",
"address_offset": "0x044C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_RSFEC_LANE_ALIGNMENT_STATUS": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx rsfec lane alignment status.
  1 - Indicates that the TX RS-FEC block has achieved alignment on the incoming PCS data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617804,
},
"STAT_TSN_REG": {"description": "STAT_TSN_REG",
"address_offset": "0x049C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_VERIFY": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat tx mm verify.
  Indicates verification status.
  0 - Indicates that verification is complete.
  1 - Indicates that verification is successful.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617884,
},
"STAT_TX_FLOW_CONTROL_REG1": {"description": "STAT_TX_FLOW_CONTROL_REG1",
"address_offset": "0x0450",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_VALID": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "stat tx pause valid.
  If a bit of this bus is set to 1, the core has transmitted a pause packet. If bit[8] is set to 1, a global pause packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617808,
},
"STAT_RX_FLOW_CONTROL_REG1": {"description": "STAT_RX_FLOW_CONTROL_REG1",
"address_offset": "0x0454",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REQ": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "stat rx pause req.
  Pause request signal.
  When the RX receives a valid pause frame, it sets the corresponding bit of this bus to a 1 and keep it at 1 until the pause packet has been processed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_PAUSE_VALID": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "9",
"desc": "stat rx pause valid.
  This bus indicates that a pause packet was received and the associated quanta on the stat_rx_pause_quanta[8:0][15:0] bus is valid and must be used for pause processing. If an 802.3x Ethernet MAC Pause packet is received, bit[8] is set to 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617812,
},
"STAT_AN_STATUS": {"description": "STAT_AN_STATUS",
"address_offset": "0x0458",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_FEC_ENABLE": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat an fec enable.
  Used to enable the use of clause 74 FEC on the link.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_RS_FEC_ENABLE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat an rs fec enable.
  Used to enable the use of clause 91 FEC on the link.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_AUTONEG_COMPLETE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat an autoneg complete.
  1 - Indicates the auto-negotiation is complete and rx link status from the PCS has been received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_PARALLEL_DETECTION_FAULT": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "stat an parallel detection fault.
  1 - Indicated a parallel detection fault during auto-negotiation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_TX_PAUSE_ENABLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat an tx pause enable.
  1 - Enable station-to-station (global) pause packet generation in the transmit path to control data flow in the receive path.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_RX_PAUSE_ENABLE": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat an rx pause enable.
  1 - Enable station-to-station (global) pause packet interpretation in the receive path, in order to control data flow from the transmitter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_VALID": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability valid.
  1 - Indicates when all of the link partner advertisements become valid.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_AUTONEG_ABLE": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp autoneg able.
  1 - Indicates that the link partner is able to perform auto-negotiation.
      It becomes valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_PAUSE": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp pause.
  1 - Indicates the advertised value of the PAUSE bit, (C0), in the receive link codeword from the link partner.
      It becomes valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ASM_DIR": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp asm dir.
  1 - Indicates the advertised value of the ASMDIR bit, (C1), in the receive link codeword from the link partner.
      It becomes valid when the output signal  stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_RF": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp rf.
  1 - Indicates link partner remote fault.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_10G_ABILITY": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 10g ability.
  1 - Indicates the clause 74 FEC ability associated with 10Gb/s lane protocols that is being advertised by the link partner.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_10G_REQUEST": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 10g request.
  1 - Indicates that the link partner is requesting that the clause 74 FEC be used on the 10Gb/s lane protocols.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_EXTENDED_ABILITY_VALID": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp extended ability valid.
  1 - It indicates that the detected extended abilities are valid.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_EXTENDED_FEC": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "4",
"desc": "stat an lp ability extended fec.
  Indicates the extended FEC abilities as defined in Schedule 3.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_25G_RS_REQUEST": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 25g rs request.
  1 - Indicates that the link partner is requesting the clause 91 (or 108) rs FEC be used for the 25gb/s lane protocols. 
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_25G_BASER_REQUEST": {"access": "read-only",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 25g baser request.
  1 - Indicates that the link partner is requesting the clause 74 FEC be used for the 25Gb/s lane base-r protocols.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617816,
},
"STAT_AN_ABILITY": {"description": "STAT_AN_ABILITY",
"address_offset": "0x045C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_LP_ABILITY_1000BASE_KX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 1000base kx.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_10GBASE_KX4": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 10gbase kx4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_10GBASE_KR": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 10gbase kr.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_40GBASE_KR4": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 40gbase kr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_40GBASE_CR4": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 40gbase cr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_CR10": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase cr10.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_KP4": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase kp4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_KR4": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase kr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_CR4": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase cr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KRCR_S": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase krcr_s.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KRCR": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase krcr.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KR1": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase kr1.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_CR1": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase cr1.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_50GBASE_KR2": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 50gbase kr2.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_50GBASE_CR2": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 50gbase cr2.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617820,
},
"STAT_AN_LINK_CTL": {"description": "STAT_AN_LINK_CTL",
"address_offset": "0x0460",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_LINK_CNTL_1000BASE_KX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 1000base kx.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_10GBASE_KX4": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 10gbase kx4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_10GBASE_KR": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 10gbase kr.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_40GBASE_KR4": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 40gbase kr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_40GBASE_CR4": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 40gbase cr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_CR10": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase cr10.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_KP4": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase kp4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_KR4": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase kr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_CR4": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase cr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KRCR_S": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase krcr_s.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KRCR": {"access": "read-only",
"bit_offset": "20",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase krcr.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KR1": {"access": "read-only",
"bit_offset": "22",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase kr1.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_CR1": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase cr1.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_50GBASE_KR2": {"access": "read-only",
"bit_offset": "26",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 50gbase kr2.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_50GBASE_CR2": {"access": "read-only",
"bit_offset": "28",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 50gbase cr2.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617824,
},
"STAT_LT_STATUS_REG1": {"description": "STAT_LT_STATUS_REG1",
"address_offset": "0x0464",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_INITIALIZE_FROM_RX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt initialize from rx.
  This signal reflects the value of the initialize control bit received in the control block from the link partner.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_PRESET_FROM_RX": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt preset from rx.
  This signal reflects the value of the preset control bit received in the control block from the link partner.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617828,
},
"STAT_LT_STATUS_REG2": {"description": "STAT_LT_STATUS_REG2",
"address_offset": "0x0468",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_TRAINING": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt training.
  1 - Indicates when the respective link training state machine is performing link training.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_FRAME_LOCK": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt frame lock.
  1 - Asserted when link training has begun.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617832,
},
"STAT_LT_STATUS_REG3": {"description": "STAT_LT_STATUS_REG3",
"address_offset": "0x046C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_SIGNAL_DETECT": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt signal detect.
  1 - Indicates when the respective link training state machine has entered the SEND_DATA state, in which normal PCS operation can resume.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_TRAINING_FAIL": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt training fail.
  1 - Asserted during link training if the corresponding link training state machine detects a time-out during the training period.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617836,
},
"STAT_LT_STATUS_REG4": {"description": "STAT_LT_STATUS_REG4",
"address_offset": "0x0470",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_RX_SOF": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt rx sof.
  1 - For 1 RX SerDes clock cycle to indicate the start of the link training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617840,
},
"STAT_LT_COEFFICIENT0_REG": {"description": "STAT_LT_COEFFICIENT0_REG",
"address_offset": "0x0474",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_K_P1_FROM_RX0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k p1 from rx0.
  This 2-bit field indicates the update control bits for the k+1 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_K0_FROM_RX0": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k0 from rx0.
  This 2-bit field indicates the update control bits for the k0 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_K_M1_FROM_RX0": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k m1 from rx0.
  This 2-bit field indicates the update control bits for the k-1 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT_P1_FROM_RX0": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat p1 from rx0.
  This 2-bit field indicates the update status bits for the k+1 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT0_FROM_RX0": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat0 from rx0.
  This 2-bit field indicates the update status bits for the k0 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT_M1_FROM_RX0": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat m1 from rx0.
  This 2-bit field indicates the update status bits for the k-1 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617844,
},
"STAT_RX_VALID_CTRL_CODE": {"description": "STAT_RX_VALID_CTRL_CODE",
"address_offset": "0x0494",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VALID_CTRL_CODE": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx valid ctrl code.
  1 - Indicates that a PCS block with a valid control code was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617876,
},
"STAT_CORE_SPEED_REG": {"description": "STAT_CORE_SPEED_REG",
"address_offset": "0x0498",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CORE_SPEED": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat core speed.
  0 - Standalone 25G
  1 - Standalone 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUNTIME_SWITCHABLE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "runtime switchable.
  0 - Runtime Switchable 25G
  1 - Runtime Switchable 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617880,
},
"STATUS_CYCLE_COUNT_LSB": {"description": "STATUS_CYCLE_COUNT_LSB",
"address_offset": "0x0500",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CYCLE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat cycle reg0.
  Contains a count of the number of RX core clock cycles between TICK_REG writes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617984,
},
"STATUS_CYCLE_COUNT_MSB": {"description": "STATUS_CYCLE_COUNT_MSB",
"address_offset": "0x0504",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CYCLE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat cycle reg1.
  Contains a count of the number of RX core clock cycles between TICK_REG writes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617988,
},
"STAT_RX_FRAMING_ERR_LSB": {"description": "STAT_RX_FRAMING_ERR_LSB",
"address_offset": "0x0648",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAMING_ERR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx framing err reg0.
  RX sync header bits framing error.
  Each PCS Lane has a four-bit bus that indicates how many sync header errors were received for that PCS Lane.
  The value of the bus is only valid when the corresponding stat_rx_framing_err_valid is a 1.
  The values on these buses can be updated at any time and are intended to be used as increment values for sync header error counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618312,
},
"STAT_RX_FRAMING_ERR_MSB": {"description": "STAT_RX_FRAMING_ERR_MSB",
"address_offset": "0x064C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAMING_ERR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx framing err reg1.
  RX sync header bits framing error.
  Each PCS Lane has a four-bit bus that indicates how many sync header errors were received for that PCS Lane.
  The value of the bus is only valid when the corresponding stat_rx_framing_err_valid is a 1.
  The values on these buses can be updated at any time and are intended to be used as increment values for sync header error counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618316,
},
"STAT_RX_BAD_CODE_LSB": {"description": "STAT_RX_BAD_CODE_LSB",
"address_offset": "0x0660",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_CODE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx bad code reg0.
  Increment for 64B/66B code violations.
  This signal indicates that the RX PCS receive state machine is in the RX_E state as specified by the IEEE Std 802.3-2015. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618336,
},
"STAT_RX_BAD_CODE_MSB": {"description": "STAT_RX_BAD_CODE_MSB",
"address_offset": "0x0664",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_CODE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx bad code reg1.
  Increment for 64B/66B code violations.
  This signal indicates that the RX PCS receive state machine is in the RX_E state as specified by the IEEE Std 802.3-2015.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618340,
},
"STAT_RX_ERROR_LSB": {"description": "STAT_RX_ERROR_LSB",
"address_offset": "0x0668",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx error reg0.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates a mismatch occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618344,
},
"STAT_RX_ERROR_MSB": {"description": "STAT_RX_ERROR_MSB",
"address_offset": "0x066C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx error reg1.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates a mismatch occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618348,
},
"STAT_RX_RSFEC_CORRECTED_CW_INC_LSB": {"description": "STAT_RX_RSFEC_CORRECTED_CW_INC_LSB",
"address_offset": "0x0670",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_CORRECTED_CW_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec corrected cw inc reg0.
  Increment for corrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618352,
},
"STAT_RX_RSFEC_CORRECTED_CW_INC_MSB": {"description": "STAT_RX_RSFEC_CORRECTED_CW_INC_MSB",
"address_offset": "0x0674",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_CORRECTED_CW_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec corrected cw inc reg1.
  Increment for corrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618356,
},
"STAT_RX_RSFEC_UNCORRECTED_CW_INC_LSB": {"description": "STAT_RX_RSFEC_UNCORRECTED_CW_INC_LSB",
"address_offset": "0x0678",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_UNCORRECTED_CW_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec uncorrected cw inc reg0.
  Increment for uncorrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618360,
},
"STAT_RX_RSFEC_UNCORRECTED_CW_INC_MSB": {"description": "STAT_RX_RSFEC_UNCORRECTED_CW_INC_MSB",
"address_offset": "0x067C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_UNCORRECTED_CW_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec uncorrected cw inc reg1.
  Increment for uncorrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618364,
},
"STAT_RX_RSFEC_ERR_COUNT0_INC_LSB": {"description": "STAT_RX_RSFEC_ERR_COUNT0_INC_LSB",
"address_offset": "0x0680",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_ERR_COUNT0_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec err count inc reg0.
  Increment for detected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618368,
},
"STAT_RX_RSFEC_ERR_COUNT0_INC_MSB": {"description": "STAT_RX_RSFEC_ERR_COUNT0_INC_MSB",
"address_offset": "0x0684",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_ERR_COUNT0_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec err count inc reg1.
  Increment for detected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618372,
},
"STAT_TX_FRAME_ERROR_LSB": {"description": "STAT_TX_FRAME_ERROR_LSB",
"address_offset": "0x06A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FRAME_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx frame error reg0.
  Increment for packets with tx_axis_tuser set to indicate an End of Packet(EOP) abort.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618400,
},
"STAT_TX_FRAME_ERROR_MSB": {"description": "STAT_TX_FRAME_ERROR_MSB",
"address_offset": "0x06A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FRAME_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx frame error reg1.
  Increment for packets with tx_axis_tuser set to indicate an End of Packet(EOP) abort.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618404,
},
"STAT_TX_TOTAL_PACKETS_LSB": {"description": "STAT_TX_TOTAL_PACKETS_LSB",
"address_offset": "0x0700",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total packets reg0.
  Increment for the total number of packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618496,
},
"STAT_TX_TOTAL_PACKETS_MSB": {"description": "STAT_TX_TOTAL_PACKETS_MSB",
"address_offset": "0x0704",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total packets reg1.
  Increment for the total number of packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618500,
},
"STAT_TX_TOTAL_GOOD_PACKETS_LSB": {"description": "STAT_TX_TOTAL_GOOD_PACKETS_LSB",
"address_offset": "0x0708",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total good packets reg0.
  Increment for the total number of good packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618504,
},
"STAT_TX_TOTAL_GOOD_PACKETS_MSB": {"description": "STAT_TX_TOTAL_GOOD_PACKETS_MSB",
"address_offset": "0x070C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total good packets reg1.
  Increment for the total number of good packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618508,
},
"STAT_TX_TOTAL_BYTES_LSB": {"description": "STAT_TX_TOTAL_BYTES_LSB",
"address_offset": "0x0710",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total bytes reg0.
  Increment for the total number of bytes transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618512,
},
"STAT_TX_TOTAL_BYTES_MSB": {"description": "STAT_TX_TOTAL_BYTES_MSB",
"address_offset": "0x0714",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total bytes reg1.
  Increment for the total number of bytes transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618516,
},
"STAT_TX_TOTAL_GOOD_BYTES_LSB": {"description": "STAT_TX_TOTAL_GOOD_BYTES_LSB",
"address_offset": "0x0718",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total good bytes reg0.
  Increment for the total number of good bytes transmitted.
  This value is only non-zero when a packet is transmitted completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618520,
},
"STAT_TX_TOTAL_GOOD_BYTES_MSB": {"description": "STAT_TX_TOTAL_GOOD_BYTES_MSB",
"address_offset": "0x071C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total good bytes reg1.
  Increment for the total number of good bytes transmitted.
  This value is only non-zero when a packet is transmitted completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618524,
},
"STAT_TX_PACKET_64_BYTES_LSB": {"description": "STAT_TX_PACKET_64_BYTES_LSB",
"address_offset": "0x0720",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_64_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 64 bytes reg0.
  Increment for good and bad packets transmitted that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618528,
},
"STAT_TX_PACKET_64_BYTES_MSB": {"description": "STAT_TX_PACKET_64_BYTES_MSB",
"address_offset": "0x0724",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_64_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 64 bytes reg1.
  Increment for good and bad packets transmitted that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618532,
},
"STAT_TX_PACKET_65_127_BYTES_LSB": {"description": "STAT_TX_PACKET_65_127_BYTES_LSB",
"address_offset": "0x0728",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_65_127_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 65 - 127 bytes reg0.
  Increment for good and bad packets transmitted that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618536,
},
"STAT_TX_PACKET_65_127_BYTES_MSB": {"description": "STAT_TX_PACKET_65_127_BYTES_MSB",
"address_offset": "0x072C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_65_127_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 65-127 bytes reg1.
  Increment for good and bad packets transmitted that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618540,
},
"STAT_TX_PACKET_128_255_BYTES_LSB": {"description": "STAT_TX_PACKET_128_255_BYTES_LSB",
"address_offset": "0x0730",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_128_255_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 128-255 bytes reg0.
  Increment for good and bad packets transmitted that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618544,
},
"STAT_TX_PACKET_128_255_BYTES_MSB": {"description": "STAT_TX_PACKET_128_255_BYTES_MSB",
"address_offset": "0x0734",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_128_255_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 128-255 bytes reg1.
  Increment for good and bad packets transmitted that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618548,
},
"STAT_TX_PACKET_256_511_BYTES_LSB": {"description": "STAT_TX_PACKET_256_511_BYTES_LSB",
"address_offset": "0x0738",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_256_511_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 256-511 bytes reg0.
  Increment for good and bad packets transmitted that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618552,
},
"STAT_TX_PACKET_256_511_BYTES_MSB": {"description": "STAT_TX_PACKET_256_511_BYTES_MSB",
"address_offset": "0x073C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_256_511_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 256-511 bytes reg1.
  Increment for good and bad packets transmitted that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618556,
},
"STAT_TX_PACKET_512_1023_BYTES_LSB": {"description": "STAT_TX_PACKET_512_1023_BYTES_LSB",
"address_offset": "0x0740",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_512_1023_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 512-1023 bytes reg0.
  Increment for good and bad packets transmitted that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618560,
},
"STAT_TX_PACKET_512_1023_BYTES_MSB": {"description": "STAT_TX_PACKET_512_1023_BYTES_MSB",
"address_offset": "0x0744",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_512_1023_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 512-1023 bytes reg1.
  Increment for good and bad packets transmitted that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618564,
},
"STAT_TX_PACKET_1024_1518_BYTES_LSB": {"description": "STAT_TX_PACKET_1024_1518_BYTES_LSB",
"address_offset": "0x0748",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1024_1518_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1024-1518 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618568,
},
"STAT_TX_PACKET_1024_1518_BYTES_MSB": {"description": "STAT_TX_PACKET_1024_1518_BYTES_MSB",
"address_offset": "0x074C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1024_1518_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1024-1518 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618572,
},
"STAT_TX_PACKET_1519_1522_BYTES_LSB": {"description": "STAT_TX_PACKET_1519_1522_BYTES_LSB",
"address_offset": "0x0750",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1519_1522_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1519-1522 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,519 to 1,522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618576,
},
"STAT_TX_PACKET_1519_1522_BYTES_MSB": {"description": "STAT_TX_PACKET_1519_1522_BYTES_MSB",
"address_offset": "0x0754",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1519_1522_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1519-1522 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,519 to 1,522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618580,
},
"STAT_TX_PACKET_1523_1548_BYTES_LSB": {"description": "STAT_TX_PACKET_1523_1548_BYTES_LSB",
"address_offset": "0x0758",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1523_1548_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1523-1548 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618584,
},
"STAT_TX_PACKET_1523_1548_BYTES_MSB": {"description": "STAT_TX_PACKET_1523_1548_BYTES_MSB",
"address_offset": "0x075C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1523_1548_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1523-1548 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618588,
},
"STAT_TX_PACKET_1549_2047_BYTES_LSB": {"description": "STAT_TX_PACKET_1549_2047_BYTES_LSB",
"address_offset": "0x0760",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1549_2047_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1549-2047 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618592,
},
"STAT_TX_PACKET_1549_2047_BYTES_MSB": {"description": "STAT_TX_PACKET_1549_2047_BYTES_MSB",
"address_offset": "0x0764",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1549_2047_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1549-2047 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618596,
},
"STAT_TX_PACKET_2048_4095_BYTES_LSB": {"description": "STAT_TX_PACKET_2048_4095_BYTES_LSB",
"address_offset": "0x0768",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_2048_4095_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 2048-4095 bytes reg0.
  Increment for good and bad packets transmitted that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618600,
},
"STAT_TX_PACKET_2048_4095_BYTES_MSB": {"description": "STAT_TX_PACKET_2048_4095_BYTES_MSB",
"address_offset": "0x076C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_2048_4095_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 2048-4095 bytes reg1.
  Increment for good and bad packets transmitted that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618604,
},
"STAT_TX_PACKET_4096_8191_BYTES_LSB": {"description": "STAT_TX_PACKET_4096_8191_BYTES_LSB",
"address_offset": "0x0770",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_4096_8191_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 4096-8191 bytes reg0.
  Increment for good and bad packets transmitted that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618608,
},
"STAT_TX_PACKET_4096_8191_BYTES_MSB": {"description": "STAT_TX_PACKET_4096_8191_BYTES_MSB",
"address_offset": "0x0774",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_4096_8191_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 4096-8191 bytes reg1.
  Increment for good and bad packets transmitted that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618612,
},
"STAT_TX_PACKET_8192_9215_BYTES_LSB": {"description": "STAT_TX_PACKET_8192_9215_BYTES_LSB",
"address_offset": "0x0778",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_8192_9215_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 8192-9215 bytes reg0.
  Increment for good and bad packets transmitted that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618616,
},
"STAT_TX_PACKET_8192_9215_BYTES_MSB": {"description": "STAT_TX_PACKET_8192_9215_BYTES_MSB",
"address_offset": "0x077C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_8192_9215_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 8192-9215 bytes reg1.
  Increment for good and bad packets transmitted that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618620,
},
"STAT_TX_PACKET_LARGE_LSB": {"description": "STAT_TX_PACKET_LARGE_LSB",
"address_offset": "0x0780",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_LARGE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet large reg0.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618624,
},
"STAT_TX_PACKET_LARGE_MSB": {"description": "STAT_TX_PACKET_LARGE_MSB",
"address_offset": "0x0784",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_LARGE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet large reg1.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618628,
},
"STAT_TX_PACKET_SMALL_LSB": {"description": "STAT_TX_PACKET_SMALL_LSB",
"address_offset": "0x0788",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_SMALL_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet small reg0.
  Increment for all packets that are less than 64 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618632,
},
"STAT_TX_PACKET_SMALL_MSB": {"description": "STAT_TX_PACKET_SMALL_MSB",
"address_offset": "0x078C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_SMALL_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet small reg1.
  Increment for all packets that are less than 64 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618636,
},
"STAT_TX_BAD_FCS_LSB": {"description": "STAT_TX_BAD_FCS_LSB",
"address_offset": "0x07B8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx bad fcs reg0.
  Increment for packets greater than 64 bytes that have FCS errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618680,
},
"STAT_TX_BAD_FCS_MSB": {"description": "STAT_TX_BAD_FCS_MSB",
"address_offset": "0x07BC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx bad fcs reg1.
  Increment for packets greater than 64 bytes that have FCS errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618684,
},
"STAT_TX_UNICAST_LSB": {"description": "STAT_TX_UNICAST_LSB",
"address_offset": "0x07D0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_UNICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx unicast reg0.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618704,
},
"STAT_TX_UNICAST_MSB": {"description": "STAT_TX_UNICAST_MSB",
"address_offset": "0x07D4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_UNICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx unicast reg1.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618708,
},
"STAT_TX_MULTICAST_LSB": {"description": "STAT_TX_MULTICAST_LSB",
"address_offset": "0x07D8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MULTICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx multicast reg0.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618712,
},
"STAT_TX_MULTICAST_MSB": {"description": "STAT_TX_MULTICAST_MSB",
"address_offset": "0x07DC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MULTICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx multicast reg1.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618716,
},
"STAT_TX_BROADCAST_LSB": {"description": "STAT_TX_BROADCAST_LSB",
"address_offset": "0x07E0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BROADCAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx broadcast reg0.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618720,
},
"STAT_TX_BROADCAST_MSB": {"description": "STAT_TX_BROADCAST_MSB",
"address_offset": "0x07E4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BROADCAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx broadcast reg1.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618724,
},
"STAT_TX_VLAN_LSB": {"description": "STAT_TX_VLAN_LSB",
"address_offset": "0x07E8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_VLAN_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx vlan reg0.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618728,
},
"STAT_TX_VLAN_MSB": {"description": "STAT_TX_VLAN_MSB",
"address_offset": "0x07EC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_VLAN_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx vlan reg1.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618732,
},
"STAT_TX_PAUSE_LSB": {"description": "STAT_TX_PAUSE_LSB",
"address_offset": "0x07F0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx pause reg0.
  Increment for 802.3x MAC Pause Packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618736,
},
"STAT_TX_PAUSE_MSB": {"description": "STAT_TX_PAUSE_MSB",
"address_offset": "0x07F4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx pause reg1.
  Increment for 802.3x MAC Pause Packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618740,
},
"STAT_TX_USER_PAUSE_LSB": {"description": "STAT_TX_USER_PAUSE_LSB",
"address_offset": "0x07F8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_USER_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx user pause reg0.
  Increment for Priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618744,
},
"STAT_TX_USER_PAUSE_MSB": {"description": "STAT_TX_USER_PAUSE_MSB",
"address_offset": "0x07FC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_USER_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx user pause reg1.
  Increment for Priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618748,
},
"STAT_RX_TOTAL_PACKETS_LSB": {"description": "STAT_RX_TOTAL_PACKETS_LSB",
"address_offset": "0x0808",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total packets reg0.
  Increment for the total number of packets received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618760,
},
"STAT_RX_TOTAL_PACKETS_MSB": {"description": "STAT_RX_TOTAL_PACKETS_MSB",
"address_offset": "0x080C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total packets reg1.
  Increment for the total number of packets received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618764,
},
"STAT_RX_TOTAL_GOOD_PACKETS_LSB": {"description": "STAT_RX_TOTAL_GOOD_PACKETS_LSB",
"address_offset": "0x0810",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total good packets reg0.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618768,
},
"STAT_RX_TOTAL_GOOD_PACKETS_MSB": {"description": "STAT_RX_TOTAL_GOOD_PACKETS_MSB",
"address_offset": "0x0814",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total good packets reg1.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618772,
},
"STAT_RX_TOTAL_BYTES_LSB": {"description": "STAT_RX_TOTAL_BYTES_LSB",
"address_offset": "0x0818",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total bytes reg0.
  Increment for the total number of bytes received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618776,
},
"STAT_RX_TOTAL_BYTES_MSB": {"description": "STAT_RX_TOTAL_BYTES_MSB",
"address_offset": "0x081C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total bytes reg1.
  Increment for the total number of bytes received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618780,
},
"STAT_RX_TOTAL_GOOD_BYTES_LSB": {"description": "STAT_RX_TOTAL_GOOD_BYTES_LSB",
"address_offset": "0x0820",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total good bytes reg0.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618784,
},
"STAT_RX_TOTAL_GOOD_BYTES_MSB": {"description": "STAT_RX_TOTAL_GOOD_BYTES_MSB",
"address_offset": "0x0824",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total good bytes reg1.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618788,
},
"STAT_RX_PACKET_64_BYTES_LSB": {"description": "STAT_RX_PACKET_64_BYTES_LSB",
"address_offset": "0x0828",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_64_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 64 bytes reg0.
  Increment for good and bad packets received that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618792,
},
"STAT_RX_PACKET_64_BYTES_MSB": {"description": "STAT_RX_PACKET_64_BYTES_MSB",
"address_offset": "0x082C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_64_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 64 bytes reg1.
  Increment for good and bad packets received that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618796,
},
"STAT_RX_PACKET_65_127_BYTES_LSB": {"description": "STAT_RX_PACKET_65_127_BYTES_LSB",
"address_offset": "0x0830",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_65_127_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 65-127 bytes reg0.
  Increment for good and bad packets received that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618800,
},
"STAT_RX_PACKET_65_127_BYTES_MSB": {"description": "STAT_RX_PACKET_65_127_BYTES_MSB",
"address_offset": "0x0834",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_65_127_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 65-127 bytes reg1.
  Increment for good and bad packets received that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618804,
},
"STAT_RX_PACKET_128_255_BYTES_LSB": {"description": "STAT_RX_PACKET_128_255_BYTES_LSB",
"address_offset": "0x0838",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_128_255_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 128-255 bytes reg0.
  Increment for good and bad packets received that contain 128 to 255 bytes. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618808,
},
"STAT_RX_PACKET_128_255_BYTES_MSB": {"description": "STAT_RX_PACKET_128_255_BYTES_MSB",
"address_offset": "0x083C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_128_255_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 128-255 bytes reg1.
  Increment for good and bad packets received that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618812,
},
"STAT_RX_PACKET_256_511_BYTES_LSB": {"description": "STAT_RX_PACKET_256_511_BYTES_LSB",
"address_offset": "0x0840",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_256_511_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 256-511 bytes reg0.
  Increment for good and bad packets received that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618816,
},
"STAT_RX_PACKET_256_511_BYTES_MSB": {"description": "STAT_RX_PACKET_256_511_BYTES_MSB",
"address_offset": "0x0844",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_256_511_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 256-511 bytes reg1.
  Increment for good and bad packets received that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618820,
},
"STAT_RX_PACKET_512_1023_BYTES_LSB": {"description": "STAT_RX_PACKET_512_1023_BYTES_LSB",
"address_offset": "0x0848",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_512_1023_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 512-1023 bytes reg0.
  Increment for good and bad packets received that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618824,
},
"STAT_RX_PACKET_512_1023_BYTES_MSB": {"description": "STAT_RX_PACKET_512_1023_BYTES_MSB",
"address_offset": "0x084C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_512_1023_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 512-1023 bytes reg1.
  Increment for good and bad packets received that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618828,
},
"STAT_RX_PACKET_1024_1518_BYTES_LSB": {"description": "STAT_RX_PACKET_1024_1518_BYTES_LSB",
"address_offset": "0x0850",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1024_1518_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1024-1518 bytes reg0.
  Increment for good and bad packets received that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618832,
},
"STAT_RX_PACKET_1024_1518_BYTES_MSB": {"description": "STAT_RX_PACKET_1024_1518_BYTES_MSB",
"address_offset": "0x0854",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1024_1518_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1024-1518 bytes reg1.
  Increment for good and bad packets received that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618836,
},
"STAT_RX_PACKET_1519_1522_BYTES_LSB": {"description": "STAT_RX_PACKET_1519_1522_BYTES_LSB",
"address_offset": "0x0858",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1519_1522_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1519-1522 bytes reg0.
  Increment for good and bad packets received that contain 1519 to 1522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618840,
},
"STAT_RX_PACKET_1519_1522_BYTES_MSB": {"description": "STAT_RX_PACKET_1519_1522_BYTES_MSB",
"address_offset": "0x085C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1519_1522_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1519-1522 bytes reg1.
  Increment for good and bad packets received that contain 1519 to 1522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618844,
},
"STAT_RX_PACKET_1523_1548_BYTES_LSB": {"description": "STAT_RX_PACKET_1523_1548_BYTES_LSB",
"address_offset": "0x0860",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1523_1548_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1523-1548 bytes reg0.
  Increment for good and bad packets received that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618848,
},
"STAT_RX_PACKET_1523_1548_BYTES_MSB": {"description": "STAT_RX_PACKET_1523_1548_BYTES_MSB",
"address_offset": "0x0864",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1523_1548_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1523-1548 bytes reg1.
  Increment for good and bad packets received that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618852,
},
"STAT_RX_PACKET_1549_2047_BYTES_LSB": {"description": "STAT_RX_PACKET_1549_2047_BYTES_LSB",
"address_offset": "0x0868",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1549_2047_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1549-2047 bytes reg0.
  Increment for good and bad packets received that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618856,
},
"STAT_RX_PACKET_1549_2047_BYTES_MSB": {"description": "STAT_RX_PACKET_1549_2047_BYTES_MSB",
"address_offset": "0x086C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1549_2047_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1549-2047 bytes reg1.
  Increment for good and bad packets received that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618860,
},
"STAT_RX_PACKET_2048_4095_BYTES_LSB": {"description": "STAT_RX_PACKET_2048_4095_BYTES_LSB",
"address_offset": "0x0870",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_2048_4095_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 2048-4095 bytes reg0.
  Increment for good and bad packets received that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618864,
},
"STAT_RX_PACKET_2048_4095_BYTES_MSB": {"description": "STAT_RX_PACKET_2048_4095_BYTES_MSB",
"address_offset": "0x0874",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_2048_4095_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 2048-4095 bytes reg1.
  Increment for good and bad packets received that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618868,
},
"STAT_RX_PACKET_4096_8191_BYTES_LSB": {"description": "STAT_RX_PACKET_4096_8191_BYTES_LSB",
"address_offset": "0x0878",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_4096_8191_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 4096-8191 bytes reg0.
  Increment for good and bad packets received that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618872,
},
"STAT_RX_PACKET_4096_8191_BYTES_MSB": {"description": "STAT_RX_PACKET_4096_8191_BYTES_MSB",
"address_offset": "0x087C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_4096_8191_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 4096-8191 bytes reg1.
  Increment for good and bad packets received that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618876,
},
"STAT_RX_PACKET_8192_9215_BYTES_LSB": {"description": "STAT_RX_PACKET_8192_9215_BYTES_LSB",
"address_offset": "0x0880",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_8192_9215_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 8192-9215 bytes reg0.
  Increment for good and bad packets received that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618880,
},
"STAT_RX_PACKET_8192_9215_BYTES_MSB": {"description": "STAT_RX_PACKET_8192_9215_BYTES_MSB",
"address_offset": "0x0884",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_8192_9215_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 8192-9215 bytes reg1.
  Increment for good and bad packets received that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618884,
},
"STAT_RX_PACKET_LARGE_LSB": {"description": "STAT_RX_PACKET_LARGE_LSB",
"address_offset": "0x0888",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_LARGE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet large reg0.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618888,
},
"STAT_RX_PACKET_LARGE_MSB": {"description": "STAT_RX_PACKET_LARGE_MSB",
"address_offset": "0x088C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_LARGE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet large reg1.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618892,
},
"STAT_RX_PACKET_SMALL_LSB": {"description": "STAT_RX_PACKET_SMALL_LSB",
"address_offset": "0x0890",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_SMALL_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet small reg0.
  Increment for all packets that are less than 64 bytes long.
  Packets that are less than four bytes are dropped.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618896,
},
"STAT_RX_PACKET_SMALL_MSB": {"description": "STAT_RX_PACKET_SMALL_MSB",
"address_offset": "0x0894",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_SMALL_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet small reg1.
  Increment for all packets that are less than 64 bytes long.
  Packets that are less than four bytes are dropped.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618900,
},
"STAT_RX_UNDERSIZE_LSB": {"description": "STAT_RX_UNDERSIZE_LSB",
"address_offset": "0x0898",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNDERSIZE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx undersize reg0.
  Increment for packets shorter than ctl_rx_min_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618904,
},
"STAT_RX_UNDERSIZE_MSB": {"description": "STAT_RX_UNDERSIZE_MSB",
"address_offset": "0x089C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNDERSIZE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx undersize reg1.
  Increment for packets shorter than ctl_rx_min_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618908,
},
"STAT_RX_FRAGMENT_LSB": {"description": "STAT_RX_FRAGMENT_LSB",
"address_offset": "0x8A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx fragment reg0.
  Increment for packets shorter than ctl_rx_min_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618912,
},
"STAT_RX_FRAGMENT_MSB": {"description": "STAT_RX_FRAGMENT_MSB",
"address_offset": "0x8A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx fragment reg1.
  Increment for packets shorter than ctl_rx_min_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618916,
},
"STAT_RX_OVERSIZE_LSB": {"description": "STAT_RX_OVERSIZE_LSB",
"address_offset": "0x08A8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_OVERSIZE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx oversize reg0.
  Increment for packets longer than ctl_rx_max_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618920,
},
"STAT_RX_OVERSIZE_MSB": {"description": "STAT_RX_OVERSIZE_MSB",
"address_offset": "0x08AC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_OVERSIZE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx oversize reg1.
  Increment for packets longer than ctl_rx_max_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618924,
},
"STAT_RX_TOOLONG_LSB": {"description": "STAT_RX_TOOLONG_LSB",
"address_offset": "0x08B0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOOLONG_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx toolong reg0.
  Increment for packets longer than ctl_rx_max_packet_len with good and bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618928,
},
"STAT_RX_TOOLONG_MSB": {"description": "STAT_RX_TOOLONG_MSB",
"address_offset": "0x08B4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOOLONG_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx toolong reg1.
  Increment for packets longer than ctl_rx_max_packet_len with good and bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618932,
},
"STAT_RX_JABBER_LSB": {"description": "STAT_RX_JABBER_LSB",
"address_offset": "0x08B8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_JABBER_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx jabber reg0.
  Increment for packets longer than ctl_rx_max_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618936,
},
"STAT_RX_JABBER_MSB": {"description": "STAT_RX_JABBER_MSB",
"address_offset": "0x08BC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_JABBER_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx jabber reg1.
  Increment for packets longer than ctl_rx_max_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618940,
},
"STAT_RX_BAD_FCS_LSB": {"description": "STAT_RX_BAD_FCS_LSB",
"address_offset": "0x08C0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx bad fcs reg0.
  Bad FCS indicator.
  The value on this bus indicates packets received with a bad FCS, but not a stomped FCS during a cycle.
  This output is pulsed for one clock cycle to indicate an error condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618944,
},
"STAT_RX_BAD_FCS_MSB": {"description": "STAT_RX_BAD_FCS_MSB",
"address_offset": "0x08C4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx bad fcs reg1.
  Bad FCS indicator.
  The value on this bus indicates packets received with a bad FCS, but not a stomped FCS during a cycle.
  This output is pulsed for one clock cycle to indicate an error condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618948,
},
"STAT_RX_PACKET_BAD_FCS_LSB": {"description": "STAT_RX_PACKET_BAD_FCS_LSB",
"address_offset": "0x08C8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet bad fcs reg0.
  Increment for packets between 64 and ctl_rx_max_packet_len bytes that have Frame Check Sequence (FCS) errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618952,
},
"STAT_RX_PACKET_BAD_FCS_MSB": {"description": "STAT_RX_PACKET_BAD_FCS_MSB",
"address_offset": "0x08CC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet bad fcs reg1.
  Increment for packets between 64 and ctl_rx_max_packet_len bytes that have Frame Check Sequence (FCS) errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618956,
},
"STAT_RX_STOMPED_FCS_LSB": {"description": "STAT_RX_STOMPED_FCS_LSB",
"address_offset": "0x08D0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_STOMPED_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx stomped fcs reg0.
  Stomped FCS indicator.
  The value on this bus indicates the packets were received with a stomped FCS.
  A stomped FCS is defined as the bitwise inverse of the expected good FCS.
  This output is pulsed for one clock cycle to indicate the stomped condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618960,
},
"STAT_RX_STOMPED_FCS_MSB": {"description": "STAT_RX_STOMPED_FCS_MSB",
"address_offset": "0x08D4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_STOMPED_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx stomped fcs reg1.
  Stomped FCS indicator.
  The value on this bus indicates the packets were received with a stomped FCS.
  A stomped FCS is defined as the bitwise inverse of the expected good FCS.
  This output is pulsed for one clock cycle to indicate the stomped condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618964,
},
"STAT_RX_UNICAST_LSB": {"description": "STAT_RX_UNICAST_LSB",
"address_offset": "0x08D8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx unicast reg0.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618968,
},
"STAT_RX_UNICAST_MSB": {"description": "STAT_RX_UNICAST_MSB",
"address_offset": "0x08DC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx unicast reg1.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618972,
},
"STAT_RX_MULTICAST_LSB": {"description": "STAT_RX_MULTICAST_LSB",
"address_offset": "0x08E0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MULTICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx multicast reg0.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618976,
},
"STAT_RX_MULTICAST_MSB": {"description": "STAT_RX_MULTICAST_MSB",
"address_offset": "0x08E4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MULTICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx multicast reg1.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618980,
},
"STAT_RX_BROADCAST_LSB": {"description": "STAT_RX_BROADCAST_LSB",
"address_offset": "0x08E8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BROADCAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx broadcast reg0.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618984,
},
"STAT_RX_BROADCAST_MSB": {"description": "STAT_RX_BROADCAST_MSB",
"address_offset": "0x08EC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BROADCAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx broadcast reg1.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618988,
},
"STAT_RX_VLAN_LSB": {"description": "STAT_RX_VLAN_LSB",
"address_offset": "0x08F0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VLAN_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx vlan reg0.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618992,
},
"STAT_RX_VLAN_MSB": {"description": "STAT_RX_VLAN_MSB",
"address_offset": "0x08F4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VLAN_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx vlan reg1.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618996,
},
"STAT_RX_PAUSE_LSB": {"description": "STAT_RX_PAUSE_LSB",
"address_offset": "0x08F8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx pause reg0.
  Increment for 802.3x MAC Pause packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619000,
},
"STAT_RX_PAUSE_MSB": {"description": "STAT_RX_PAUSE_MSB",
"address_offset": "0x08FC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx pause reg1.
  Increment for 802.3x MAC Pause packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619004,
},
"STAT_RX_USER_PAUSE_LSB": {"description": "STAT_RX_USER_PAUSE_LSB",
"address_offset": "0x0900",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_USER_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx user pause reg0.
  Increment for priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619008,
},
"STAT_RX_USER_PAUSE_MSB": {"description": "STAT_RX_USER_PAUSE_MSB",
"address_offset": "0x0904",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_USER_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx user pause reg1.
  Increment for priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619012,
},
"STAT_RX_INRANGEERR_LSB": {"description": "STAT_RX_INRANGEERR_LSB",
"address_offset": "0x0908",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_INRANGEERR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx inrangeerr reg0.
  Increment for packets with Length field error but with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619016,
},
"STAT_RX_INRANGEERR_MSB": {"description": "STAT_RX_INRANGEERR_MSB",
"address_offset": "0x090C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_INRANGEERR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx inrangeerr reg1.
  Increment for packets with Length field error but with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619020,
},
"STAT_RX_TRUNCATED_LSB": {"description": "STAT_RX_TRUNCATED_LSB",
"address_offset": "0x0910",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TRUNCATED_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx truncated reg0.
  Packet truncation indicator.
  1 - Indicates that the current packet in flight is truncated due to its length exceeding ctl_rx_max_packet_len[14:0].
      This output is pulsed for one clock cycle to indicate the truncated condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619024,
},
"STAT_RX_TRUNCATED_MSB": {"description": "STAT_RX_TRUNCATED_MSB",
"address_offset": "0x0914",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TRUNCATED_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx truncated reg1.
  Packet truncation indicator.
  1 - Indicates that the current packet in flight is truncated due to its length exceeding ctl_rx_max_packet_len[14:0].
      This output is pulsed for one clock cycle to indicate the truncated condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619028,
},
"STAT_RX_TEST_PATTERN_MISMATCH_LSB": {"description": "STAT_RX_TEST_PATTERN_MISMATCH_LSB",
"address_offset": "0x0918",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TEST_PATTERN_MISMATCH_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx test pattern mismatch reg0.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates how many mismatches occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set to a 1.
  This output can be used to generate MDIO register as defined in Clause 45.
  This output is pulsed for one clock cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619032,
},
"STAT_RX_TEST_PATTERN_MISMATCH_MSB": {"description": "STAT_RX_TEST_PATTERN_MISMATCH_MSB",
"address_offset": "0x091C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TEST_PATTERN_MISMATCH_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx test pattern mismatch reg1.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates how many mismatches occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set to a 1.
  This output can be used to generate MDIO register as defined in Clause 45.
  This output is pulsed for one clock cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619036,
},
"STAT_FEC_INC_CORRECT_COUNT_LSB": {"description": "STAT_FEC_INC_CORRECT_COUNT_LSB",
"address_offset": "0x0920",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CORRECT_COUNT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat fec inc correct count reg0.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected and corrected a bit errors in the corresponding frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619040,
},
"STAT_FEC_INC_CORRECT_COUNT_MSB": {"description": "STAT_FEC_INC_CORRECT_COUNT_MSB",
"address_offset": "0x0924",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CORRECT_COUNT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat fec inc correct count reg1.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected and corrected a bit errors in the corresponding frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619044,
},
"STAT_FEC_INC_CANT_CORRECT_COUNT_LSB": {"description": "STAT_FEC_INC_CANT_CORRECT_COUNT_LSB",
"address_offset": "0x0928",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CANT_CORRECT_COUNT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat fec inc cant correct count reg0.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619048,
},
"STAT_FEC_INC_CANT_CORRECT_COUNT_MSB": {"description": "STAT_FEC_INC_CANT_CORRECT_COUNT_MSB",
"address_offset": "0x092C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CANT_CORRECT_COUNT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat fec inc cant correct count reg1.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619052,
},
"STAT_TX_MM_STATUS_LSB": {"description": "STAT_TX_MM_STATUS_LSB",
"address_offset": "0x0980",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_STATUS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm status.
  1 - when a preemptable packet (initial fragment or complete packet) is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619136,
},
"STAT_TX_MM_STATUS_MSB": {"description": "STAT_TX_MM_STATUS_MSB",
"address_offset": "0x0984",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_STATUS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm status.
  1 - when a preemptable packet (initial fragment or complete packet) is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619140,
},
"STAT_TX_MM_FRAGMENT_LSB": {"description": "STAT_TX_MM_FRAGMENT_LSB",
"address_offset": "0x0988",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm fragment.
  1 - when a continuation fragment of an preemptable packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619144,
},
"STAT_TX_MM_FRAGMENT_MSB": {"description": "STAT_TX_MM_FRAGMENT_MSB",
"address_offset": "0x098C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm fragment.
  1 - when a continuation fragment of an preemptable packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619148,
},
"STAT_TX_MM_HOLD_LSB": {"description": "STAT_TX_MM_HOLD_LSB",
"address_offset": "0x0990",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_HOLD_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm hold.
  Asserted when ctl_hold_request transitions from 1’b0 to 1’b1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619152,
},
"STAT_TX_MM_HOLD_MSB": {"description": "STAT_TX_MM_HOLD_MSB",
"address_offset": "0x0994",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_HOLD_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm hold.
  Asserted when ctl_hold_request transitions from 1’b0 to 1’b1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619156,
},
"STAT_RX_MM_ASSEMBLY_ERROR_LSB": {"description": "STAT_RX_MM_ASSEMBLY_ERROR_LSB",
"address_offset": "0x0998",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_ASSEMBLY_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm assembly error.
  Asserted when errors are detected during fragment assembly.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619160,
},
"STAT_RX_MM_ASSEMBLY_ERROR_MSB": {"description": "STAT_RX_MM_ASSEMBLY_ERROR_MSB",
"address_offset": "0x099C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_ASSEMBLY_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm assembly error.
  Asserted when errors are detected during fragment assembly.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619164,
},
"STAT_RX_MM_FRAME_SMD_ERROR_LSB": {"description": "STAT_RX_MM_FRAME_SMD_ERROR_LSB",
"address_offset": "0x09A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_SMD_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm frame smd error.
  Asserted when the frame fragment is rejected due to an incorrect SMD value or arriving with SMD-C when no frame is in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619168,
},
"STAT_RX_MM_FRAME_SMD_ERROR_MSB": {"description": "STAT_RX_MM_FRAME_SMD_ERROR_MSB",
"address_offset": "0x09A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_SMD_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm frame smd error.
  Asserted when the frame fragment is rejected due to an incorrect SMD value or arriving with SMD-C when no frame is in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619172,
},
"STAT_RX_MM_FRAME_ASSEMBLY_OK_LSB": {"description": "STAT_RX_MM_FRAME_ASSEMBLY_OK_LSB",
"address_offset": "0x09A8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_ASSEMBLY_OK_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm frame assembly ok.
  Asserted when all the preemptable frame fragments have been assembled and presented.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619176,
},
"STAT_RX_MM_FRAME_ASSEMBLY_OK_MSB": {"description": "STAT_RX_MM_FRAME_ASSEMBLY_OK_MSB",
"address_offset": "0x09AC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_ASSEMBLY_OK_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm frame assembly ok.
  Asserted when all the preemptable frame fragments have been assembled and presented.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619180,
},
"STAT_RX_MM_FRAGMENT_LSB": {"description": "STAT_RX_MM_FRAGMENT_LSB",
"address_offset": "0x09B0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm fragment.
  Asserted when a fragment frame is received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619184,
},
"STAT_RX_MM_FRAGMENT_MSB": {"description": "STAT_RX_MM_FRAGMENT_MSB",
"address_offset": "0x09B4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm fragment.
  Asserted when a fragment frame is received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619188,
},
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 11:04:43.187
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa psu_cortexa53_2], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 11:04:43.308
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa psu_cortexa53_2], Result: [null, {"axi_dma_0": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354560,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354564,
},
"MM2S_CURDESC": {"description": "MM2S DMA Current Descriptor Pointer Register",
"address_offset": "0x08",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354568,
},
"MM2S_CURDESC_MSB": {"description": "MM2S DMA Current Descriptor Pointer Register",
"address_offset": "0x0C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354572,
},
"MM2S_TAILDESC": {"description": "MM2S DMA Tail Descriptor Pointer Register",
"address_offset": "0x10",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354576,
},
"MM2S_TAILDESC_MSB": {"description": "MM2S DMA Tail Descriptor Pointer Register",
"address_offset": "0x14",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354580,
},
"SG_CTL": {"description": "Scatter/Gather User and Cache Control Register",
"address_offset": "0x2C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SG_CACHE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Scatter/Gather Cache Control. Values written in this register reflect on the m_axi_sg_arcache and m_axi_sg_awcache signals of the M_AXI_SG interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SG_USER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Scatter/Gather User Control. Values written in this register reflect on the m_axi_sg_aruser and m_axi_sg_awuser signals of the M_AXI_SG interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354604,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354608,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354612,
},
"S2MM_CURDESC": {"description": "S2MM DMA Current Descriptor Pointer Register",
"address_offset": "0x38",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). 
Buffer Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and so forth. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354616,
},
"S2MM_CURDESC_MSB": {"description": "S2MM DMA Current Descriptor Pointer Register",
"address_offset": "0x3C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354620,
},
"S2MM_TAILDESC": {"description": "S2MM DMA Tail Descriptor Pointer Register",
"address_offset": "0x40",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel DMACR.RS bit is set to 0 (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. 
Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354624,
},
"S2MM_TAILDESC_MSB": {"description": "S2MM DMA Tail Descriptor Pointer Register",
"address_offset": "0x44",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354628,
},
},
"axi_gpio_0": {"GPIO_DATA": {"description": "Channel-1 AXI GPIO Data register",
"address_offset": "0x0",
"access": "read-write",
"size": "1",
"interface": "S_AXI",
"fields": {"CH1_DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420096,
},
"GPIO_TRI": {"description": "Channel-1 AXI GPIO 3-State Control register",
"address_offset": "0x4",
"access": "read-write",
"size": "1",
"interface": "S_AXI",
"fields": {"CH1_TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420100,
},
"GPIO2_DATA": {"description": "Channel-2 AXI GPIO Data register",
"address_offset": "0x8",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH2_DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420104,
},
"GPIO2_TRI": {"description": "Channel-2 AXI GPIO 3-State Control register",
"address_offset": "0xC",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH2_TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420108,
},
"GIER": {"description": "Global_Interrupt_Enable register",
"address_offset": "0x11C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"INT_EN": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output
  0 - Disabled
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420380,
},
"IP_IER": {"description": "IP Interrupt Enable register",
"address_offset": "0x128",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH1_INT_EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CH2_INT_EN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 2 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420392,
},
"IP_ISR": {"description": "IP Interrupt Status register",
"address_offset": "0x120",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH1_INT_S": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 Interrupt Status
  0 - No Channel 1 input interrupt
  1 - Channel 1 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CH2_INT_S": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 2 Interrupt Status
  0 - No Channel 2 input interrupt
  1 - Channel 2 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420384,
},
},
"psu_acpu_gic": {},
"psu_adma_0": {},
"psu_adma_1": {},
"psu_adma_2": {},
"psu_adma_3": {},
"psu_adma_4": {},
"psu_adma_5": {},
"psu_adma_6": {},
"psu_adma_7": {},
"psu_afi_0": {},
"psu_afi_1": {},
"psu_afi_2": {},
"psu_afi_3": {},
"psu_afi_4": {},
"psu_afi_5": {},
"psu_afi_6": {},
"psu_ams": {},
"psu_apm_0": {},
"psu_apm_1": {},
"psu_apm_2": {},
"psu_apm_5": {},
"psu_apu": {},
"psu_can_1": {},
"psu_cci_gpv": {},
"psu_cci_reg": {},
"psu_coresight_0": {},
"psu_crf_apb": {},
"psu_crl_apb": {},
"psu_csu_0": {},
"psu_csudma": {},
"psu_ctrl_ipi": {},
"psu_ddr_0": {},
"psu_ddr_1": {},
"psu_ddr_phy": {},
"psu_ddr_qos_ctrl": {},
"psu_ddr_xmpu0_cfg": {},
"psu_ddr_xmpu1_cfg": {},
"psu_ddr_xmpu2_cfg": {},
"psu_ddr_xmpu3_cfg": {},
"psu_ddr_xmpu4_cfg": {},
"psu_ddr_xmpu5_cfg": {},
"psu_ddrc_0": {},
"psu_dp": {},
"psu_dpdma": {},
"psu_efuse": {},
"psu_ethernet_3": {},
"psu_fpd_gpv": {},
"psu_fpd_slcr": {},
"psu_fpd_slcr_secure": {},
"psu_fpd_xmpu_cfg": {},
"psu_fpd_xmpu_sink": {},
"psu_gdma_0": {},
"psu_gdma_1": {},
"psu_gdma_2": {},
"psu_gdma_3": {},
"psu_gdma_4": {},
"psu_gdma_5": {},
"psu_gdma_6": {},
"psu_gdma_7": {},
"psu_gpio_0": {},
"psu_gpu": {},
"psu_i2c_0": {},
"psu_i2c_1": {},
"psu_iou_scntr": {},
"psu_iou_scntrs": {},
"psu_iousecure_slcr": {},
"psu_iouslcr_0": {},
"psu_ipi_0": {},
"psu_lpd_slcr": {},
"psu_lpd_slcr_secure": {},
"psu_lpd_xppu": {},
"psu_lpd_xppu_sink": {},
"psu_mbistjtag": {},
"psu_message_buffers": {},
"psu_ocm": {},
"psu_ocm_ram_0": {},
"psu_ocm_xmpu_cfg": {},
"psu_pcie": {},
"psu_pcie_attrib_0": {},
"psu_pcie_dma": {},
"psu_pcie_high1": {},
"psu_pcie_high2": {},
"psu_pcie_low": {},
"psu_pmu_global_0": {},
"psu_qspi_0": {},
"psu_qspi_linear_0": {},
"psu_r5_0_atcm_global": {},
"psu_r5_0_btcm_global": {},
"psu_r5_1_atcm_global": {},
"psu_r5_1_btcm_global": {},
"psu_r5_tcm_ram_global": {},
"psu_rcpu_gic": {},
"psu_rpu": {},
"psu_rsa": {},
"psu_rtc": {},
"psu_sata": {},
"psu_sd_1": {},
"psu_serdes": {},
"psu_siou": {},
"psu_smmu_gpv": {},
"psu_smmu_reg": {},
"psu_ttc_0": {},
"psu_ttc_1": {},
"psu_ttc_2": {},
"psu_ttc_3": {},
"psu_uart_0": {},
"psu_uart_1": {},
"psu_usb_0": {},
"psu_usb_xhci_0": {},
"psu_wdt_0": {},
"psu_wdt_1": {},
"xxv_ethernet_0": {"GT_RESET_REG": {"description": "GT_RESET_REG",
"address_offset": "0x0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_GT_RESET_ALL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt reset all.
  0 - Normal operation
  1 - Reset the GT
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_GT_RX_RESET": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt rx reset.
  0 - Normal operation
  1 - Reset the GT receiver
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_GT_TX_RESET": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt tx reset.
  0 - Normal operation
  1 - Reset the GT transmitter
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616704,
},
"RESET_REG": {"description": "RESET_REG",
"address_offset": "0x0004",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"RX_SERDES_RESET": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "rx serdes reset.
  0 - Normal operation
  1 - Reset the Receiver serdes
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_SERDES_RESET": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "tx serdes reset.
  0 - Normal operation
  1 - Reset the transmitter serdes
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_RESET": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "rx reset.
  0 - Normal operation
  1 - Reset the receiver 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_RESET": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "tx_reset.
  0 - Normal operation
  1 - Reset the transmitter
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616708,
},
"MODE_REG": {"description": "MODE_REG",
"address_offset": "0x0008",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"TICK_REG_MODE_SEL": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "tick reg mode sel.
  1 - tick_reg is used to read the statistics counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LOCAL_LOOPBACK": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "ctl local loopback.
  0 - Normal operation
  1 - places the transceiver into the PMA loopback state. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616712,
},
"CONFIGURATION_TX_REG1": {"description": "CONFIGURATION_TX_REG1",
"address_offset": "0x000C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx enable.
  0 - only IDLEs are transmitted by the core.
  1 - Enables the transmission of data. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_FCS_INS_ENABLE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx fcs ins enable.
  0 - the core does not add FCS to packet.
  1 - the core calculates and adds the FCS to the packet. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_IGNORE_FCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx ignore fcs.
  0 - A packet with bad FCS is being transmitted, it is not binned as good.
  1 - A packet with bad FCS is binned as good.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_LFI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send lfi.
  0 - Normal operation
  1 - Transmit Local Fault Indication (LFI) code word. Takes precedence over Remote Fault Indication (RFI).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_RFI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send rfi.
  0 - Normal operation
  1 - the TX path transmits only RFI code words.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_IDLE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send idle.
  0 - Normal operation
  1 - The TX path only transmits Idle code words.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_IPG_VALUE": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "4",
"desc": "ctl tx ipg value.
  This signal can be optionally present.
  The ctl_tx_ipg_value defines the target average minimum Inter Packet Gap (IPG, in bytes) inserted between AXI4-Stream packets.
  Valid values are 8 to 12.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern.
  0 - Normal operation
  1 - Test pattern generation enable for the TX core. A value of 1 enables test mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern enable.
  0 - Normal operation
  1 - Test pattern generation enable for the TX core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern select.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_DATA_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx data pattern select.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_CUSTOM_PREAMBLE_ENABLE": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_tx_custom_preamble_enable.
  0 - Normal operation
  1 - When it is set, the use of tx_preamblein as a custom preamble instead of inserting a standard preamble. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PRBS31_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "23",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx prbs31 test pattern enable.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616716,
},
"CONFIGURATION_RX_REG1": {"description": "CONFIGURATION_RX_REG1",
"address_offset": "0x0014",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable.
  0 - The RX completes the reception of the current packet (if any), it stops receiving packets by keeping the PCS from decoding incoming data.
  1 - Normal operation 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_DELETE_FCS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx delete fcs.
  0 - the core does not remove the FCS of the incoming packet.
  1 - the core deletes the FCS to the received packet. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_IGNORE_FCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx ignore fcs.
  0 - A packet received with an FCS error is sent with the rx_axis_tuser pin asserted during the last transfer (rx_axis_tlast sampled 1).
  1 - The core does not flag an FCS error at the AXI4-Stream interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_PROCESS_LFI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx process lfi.
  0 - the RX core ignores LF control codes coming in from the transceiver. 
  1 - the RX core expects and processes LF control codes coming in from the transceiver.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SFD": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sfd.
  0 - Normal operation
  1 - this input causes the MAC to check the Start of Frame Delimiter of the received frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_PREAMBLE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check preamble.
  0 - Normal operation
  1 - this input causes the MAC to check the preamble of the received frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_FORCE_RESYNC": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx force resync.
  0 - Normal operation
  1 - forces the reset operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TEST_PATTERN": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Test pattern checking enable for the RX core.
  0 - Normal operation
  1 - Enables test mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Test pattern enable for the RX core.
  0 - Normal operation
  1 - Enables test mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_DATA_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Data pattern select for RX core.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CUSTOM_PREAMBLE_ENABLE": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_rx_custom_preamble_enable.
  0 - Normal operation
  1 - This signal causes the side band of a packet presented on the AXI4-Stream to be the preamble as it appears on the line. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_PRBS31_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx prbs31 test pattern enable.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616724,
},
"CONFIGURATION_RX_MTU": {"description": "CONFIGURATION_RX_MTU",
"address_offset": "0x0018",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_MIN_PACKET_LEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "ctl rx min packet len.
  Any packet shorter than this value is considered to be undersized.
  If a packet has a size less than this value, the rx_axis_tuser signal is asserted during the rx_axis_tlast asserted cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_MAX_PACKET_LEN": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "15",
"desc": "ctl rx max packet len.
  Any packet longer than this value is considered to be oversized.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616728,
},
"CONFIGURATION_VL_LENGTH_REG": {"description": "CONFIGURATION_VL_LENGTH_REG",
"address_offset": "0x001C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_VL_LENGTH_MINUS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx vl length minus1.
  Normally set to 20479 (decimal). The normal value is equivalent to (16,383 x 5 -4) = 81,916.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_VL_LENGTH_MINUS1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx vl length minus1.
  Normally set to 20,479 (4FFF hex). The normal value is equivalent to (16,383 x 5 -4) = 81,916.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616732,
},
"CONFIGURATION_TSN_REG": {"description": "CONFIGURATION_TSN_REG",
"address_offset": "0x019C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_EN_PREEMPT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl en preempt.
  1 - It allows preemption.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_HOLD_REQUEST": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl hold request.
  1 - preempt traffic is withheld.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_DISABLE_VERIFY": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl disable verify.
  1 - It inhibits the verification process.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RESTART_VERIFY": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl restart verify.
  A 0-to-1 transition will trigger Verification if ctl_disable_verify = 1’b0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_ADDFRAG_SIZE": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "ctl addfrag size.
  Fragment size remaining to enable pre-emption.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_VERIFY_TIME": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "ctl verify time.
  Verification time-out value in milliseconds.
  Integer range 1-128.
  Default is 1 ms.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_VERIFY_LIMIT": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "ctl verify limit.
  Number of times core attempts Verification.
  Integer range 1-15.
  Default is 3.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617116,
},
"TICK_REG": {"description": "TICK_REG",
"address_offset": "0x0020",
"access": "write-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"TICK_REG": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "tick reg.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616736,
},
"CONFIGURATION_REVISION_REG": {"description": "CONFIGURATION_REVISION_REG",
"address_offset": "0x0024",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"MAJOR_REV": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "major revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MINOR_REV": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "minor revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PATCH_REV": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "patch revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616740,
},
"CONFIGURATION_TX_TEST_PAT_SEED_A_LSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_A_LSB",
"address_offset": "0x0028",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_A_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx test pattern seed a.
  Corresponds to MDIO registers 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616744,
},
"CONFIGURATION_TX_TEST_PAT_SEED_A_MSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_A_MSB",
"address_offset": "0x002C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_A_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "ctl tx test pattern seed a.
  Corresponds to MDIO registers 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616748,
},
"CONFIGURATION_TX_TEST_PAT_SEED_B_LSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_B_LSB",
"address_offset": "0x0030",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_B_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx test pattern seed b.
  Corresponds to MDIO registers 3.38 through to 3.41 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616752,
},
"CONFIGURATION_TX_TEST_PAT_SEED_B_MSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_B_MSB",
"address_offset": "0x0034",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_B_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "ctl tx test pattern seed b.
  Corresponds to MDIO registers 3.38 through to 3.41 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616756,
},
"CONFIGURATION_1588_REG": {"description": "CONFIGURATION_1588_REG",
"address_offset": "0x0038",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PTP_1STEP_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx ptp 1step enable.
  1 - this bit enables 1-step operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_PTP_TRANSPCLK_MODE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl ptp transpclk mode.
  1 - This input places the timestamping  logic into transparent clock mode. In this mode, the system timer input is interpreted as a correction value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PTP_LATENCY_ADJUST": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "11",
"desc": "ctl tx ptp latency adjust.
  This bus can be used to adjust the 1-step TX timestamp with respect to the 2-step timestamp.
  The units of bits [10:3] are nanoseconds and bits [2:0] are fractional nanoseconds.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616760,
},
"CONFIGURATION_TX_FLOW_CONTROL_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REG1",
"address_offset": "0x0040",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "TX pause enable signal.
  This input is used to enable the processing of the pause quanta for the corresponding priority.
  This signal gates transmission of pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616768,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG1",
"address_offset": "0x0044",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer0.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer1.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616772,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG2": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG2",
"address_offset": "0x0048",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER2": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer2.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER3": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer3.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616776,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG3": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG3",
"address_offset": "0x004C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER4": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer4.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER5": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer5.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616780,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG4": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG4",
"address_offset": "0x0050",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER6": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer6.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER7": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer7.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616784,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG5": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG5",
"address_offset": "0x0054",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER8": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer8.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616788,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG1",
"address_offset": "0x0058",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta0.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta1.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616792,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG2": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG2",
"address_offset": "0x005C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA2": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta2.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA3": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta3.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616796,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG3": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG3",
"address_offset": "0x0060",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA4": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta4.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA5": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta5.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616800,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG4": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG4",
"address_offset": "0x0064",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA6": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta6.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA7": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta7.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616804,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG5": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG5",
"address_offset": "0x0068",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA8": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta8.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616808,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_ETYPE_OP_REG": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_ETYPE_OP_REG",
"address_offset": "0x006C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ETHERTYPE_PPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx ethertype ppp.
  Ethertype for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_OPCODE_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx opcode ppp.
  Opcode for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616812,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_ETYPE_OP_REG": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_ETYPE_OP_REG",
"address_offset": "0x0070",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ETHERTYPE_GPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx ethertype gpp.
  Ethertype for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_OPCODE_GPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx opcode gpp.
  Opcode for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616816,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_LSB",
"address_offset": "0x0074",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_GPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx da gpp.
  Destination address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616820,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_MSB",
"address_offset": "0x0078",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_GPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx da gpp.
  Destination address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616824,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_LSB",
"address_offset": "0x007C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_GPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx sa gpp.
  Source address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616828,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_MSB",
"address_offset": "0x0080",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_GPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx sa gpp.
  Source address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616832,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_LSB",
"address_offset": "0x0084",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_PPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx da ppp.
  Destination address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616836,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_MSB",
"address_offset": "0x0088",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_PPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx da ppp.
  Destination address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616840,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_LSB",
"address_offset": "0x008C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_PPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx sa ppp.
  Source address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616844,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_MSB",
"address_offset": "0x0090",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_PPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx sa ppp.
  Source address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616848,
},
"CONFIGURATION_RX_FLOW_CONTROL_REG1": {"description": "CONFIGURATION_RX_FLOW_CONTROL_REG1",
"address_offset": "0x0094",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "Rx pause enable.
  This input is used to enable the processing of the pause quanta for the corresponding priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_FORWARD_CONTROL": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx forward control.
  0 - causes core to drop control packets.
  1 - Indicates that the core forwards control packets. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_GCP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable gcp.
  1 - Enables global control packet processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_PCP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable pcp.
  1 - Enables priority control packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_GPP": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable gpp.
  1 - Enables global pause packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_PPP": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable ppp.
  1 - Enables priority pause packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ACK": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ack.
  0 - ctl_rx_pause_ack[8:0] is not used.
  1 - the core uses the ctl_rx_pause_ack[8:0] bus for pause processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616852,
},
"CONFIGURATION_RX_FLOW_CONTROL_REG2": {"description": "CONFIGURATION_RX_FLOW_CONTROL_REG2",
"address_offset": "0x0098",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_CHECK_MCAST_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast gcp.
  0 - Normal operation
  1 - Enables global control multicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_GCP": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast gcp.
  0 - Normal operation
  1 - Enables global control unicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_GCP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa gcp.
  0 - Normal operation
  1 - Enables global control source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_GCP": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype gcp.
  0 - Normal operation
  1 - Enables global control ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_GCP": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode gcp.
  0 - Normal operation
  1 - Enables global control opcodeprocessing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_PCP": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast pcp.
  0 - Normal operation
  1 - Enables priority control multicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_PCP": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast pcp.
  0 - Normal operation
  1 - Enables priority control unicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_PCP": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa pcp.
  0 - Normal operation
  1 - Enables priority control source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_PCP": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype pcp.
  0 - Normal operation
  1 - Enables priority control ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_PCP": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode pcp.
  0 - Normal operation
  1 - Enables priority control opcode processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_GPP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast gpp.
  0 - Normal operation
  1 - Enables global pause multicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_GPP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast gpp.
  0 - Normal operation
  1 - Enables global pause unicast destination address processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_GPP": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa gpp.
  0 - Normal operation
  1 - Enables global pause source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_GPP": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype gpp.
  0 - Normal operation
  1 - Enables global pause ethertype processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_GPP": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode gpp.
  0 - Normal operation
  1 - Enables global pause opcode processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_PPP": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast ppp.
  0 - Normal operation
  1 - Enables priority pause multicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast ppp.
  0 - Normal operation
  1 - Enables priority pause unicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_PPP": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa ppp.
  0 - Normal operation
  1 - Enables priority pause source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_PPP": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype ppp.
  0 - Normal operation
  1 - Enables priority pause ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_PPP": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode ppp.
  0 - Normal operation
  1 - Enables priority pause opcode processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616856,
},
"CONFIGURATION_RX_FLOW_CONTROL_PPP_ETYPE_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_PPP_ETYPE_OP_REG",
"address_offset": "0x009C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_PPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype ppp.
  Ethertype field for priority pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode ppp.
  Priority pause opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616860,
},
"CONFIGURATION_RX_FLOW_CONTROL_GPP_ETYPE_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GPP_ETYPE_OP_REG",
"address_offset": "0x00A0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_GPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype gpp.
  Ethertype field for global pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_GPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode gpp.
  Global pause opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616864,
},
"CONFIGURATION_RX_FLOW_CONTROL_GCP_PCP_TYPE_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GCP_PCP_TYPE_REG",
"address_offset": "0x00A4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype gcp.
  Ethertype field for global control processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ETYPE_PCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype pcp.
  Ethertype field for priority control processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616868,
},
"CONFIGURATION_RX_FLOW_CONTROL_PCP_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_PCP_OP_REG",
"address_offset": "0x00A8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_OPCODE_MIN_PCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode min pcp.
  Minimum priority control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_MAX_PCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode max pcp.
  Maximum priority control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616872,
},
"CONFIGURATION_RX_FLOW_CONTROL_GCP_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GCP_OP_REG",
"address_offset": "0x00AC",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_OPCODE_MIN_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode min gcp.
  Minimum global control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_MAX_GCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode max gcp.
  Maximum global control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616876,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_LSB",
"address_offset": "0x00B0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_UCAST_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause da ucast.
  Unicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616880,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_MSB",
"address_offset": "0x00B4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_UCAST_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause da ucast.
  Unicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616884,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_LSB",
"address_offset": "0x00B8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_MCAST_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause da mcast.
  Multicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616888,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_MSB",
"address_offset": "0x00BC",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_MCAST_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause da mcast.
  Multicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616892,
},
"CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_LSB",
"address_offset": "0x00C0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_SA_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause sa.
  Source address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616896,
},
"CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_MSB",
"address_offset": "0x00C4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_SA_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause sa.
  Source address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616900,
},
"CONFIGURATION_RSFEC_REG": {"description": "CONFIGURATION_RSFEC_REG",
"address_offset": "0x00D0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RSFEC_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec enable.
  0 - Normal operation
  1 - Enable RS-FEC function.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RSFEC_CONSORTIUM_25G": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec consortium 25g.
  This signal switches between IEEE Clause 108 and 25G Ethernet Consortium modes.
  0 - IEEE 802.3by mode.
  1 - 25G Consortium specification mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_RSFEC_ENABLE_INDICATION": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx rsfec enable indication.
  0 - Bypass the error indication function (see IEEE Std 802.3by section 91.5.3.3).
  1 - Decoder indicates errors to the PCS sublayer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_RSFEC_ENABLE_CORRECTION": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx rsfec enable correction.
  0 - Decoder performs error detection without error correction (see IEEE 802.3by Clause 91.5.3.3).
  1 - Decoder also performs error correction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RSFEC_IEEE_ERROR_INDICATION_MODE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec ieee error indication mode.
  0 - If ctl_rx_rsfec_enable_correction and ctl_rx_rsfec_enable_indication are set to zero, the RS decoder is bypassed.
  1 - Core conforms to the IEEE RS-FEC specification.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616912,
},
"CONFIGURATION_FEC_REG": {"description": "CONFIGURATION_FEC_REG",
"address_offset": "0x00D4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_FEC_RX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec rx enable.
  0 - Normal operation
  1 - Enable the clause 74 FEC decoding of the received data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_FEC_TX_ENABLE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec tx enable.
  0 - Normal operation
  1 - Enable the clause 74 FEC encoding on the transmitted data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_FEC_ENABLE_ERROR_TO_PCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec enable error to pcs.
  0 - Normal operation
  1 - Clause 74 FEC enable error to PCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616916,
},
"CONFIGURATION_AN_CONTROL_REG1": {"description": "CONFIGURATION_AN_CONTROL_REG1",
"address_offset": "0x00E0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AUTONEG_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl autoneg enable.
  0 - Normal operation
  1 - Enable signal for auto-negotiation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AUTONEG_BYPASS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl autoneg bypass.
  0 - Normal operation
  1 - Auto-negotiation is turned off, but the PCS is connected to the output to allow operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"_CTL_AN_NONCE_SEED": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "8",
"desc": "ctl an nonce seed.
  8-bit seed to initialize the nonce field Polynomial generator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_PSEUDO_SEL": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an pseudo sel.
  Selects the polynomial generator  for the bit 49 random bit generator.
  0 - The polynomial is x7+x3+1.
  1 - The polynomial is x7+x6+1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RESTART_NEGOTIATION": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl restart negotiation.
  This input is used to trigger a restart of the auto-negotiation, regardless of what state the circuit is currently in.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_LOCAL_FAULT": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an local fault.
  This input signal is used to set the local_fault bit of the transmit link codeword.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616928,
},
"CONFIGURATION_AN_CONTROL_REG2": {"description": "CONFIGURATION_AN_CONTROL_REG2",
"address_offset": "0x00E4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AN_PAUSE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an pause.
  This is used to set the PAUSE bit, (C0), of the transmit link codeword.
  This signal might not be present if the core does not support pause.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ASMDIR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an asmdir.
  This is used to set the ASMDIR bit, (C1), of the transmit link codeword.
  This signal might not be present if the core does not support pause.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_10G_REQUEST": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 10g request.
  This signal is used to signal the link partner that the local station is requesting clause 74 FEC on the 10Gb/s lane protocols.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_ABILITY_OVERRIDE": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec ability override.
  1 - Then the FEC ability bit in the transmit link codeword is cleared.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_CL91_FEC_REQUEST": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an cl91 fec request.
  This bit is used to request clause 91 FEC.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_CL91_FEC_ABILITY": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an cl91 fec ability.
  This bit is used to indicate clause 91 FEC ability.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_25G_RS_REQUEST": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 25g rs request.
  This signal is used to signal the link partner that the local station is requesting rs FEC (clause 91 or 108) on the 25Gb/s lane protocols.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_25G_BASER_REQUEST": {"access": "read-write",
"bit_offset": "21",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 25g baser request.
  Indicates the baser FEC request.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616932,
},
"CONFIGURATION_AN_ABILITY": {"description": "CONFIGURATION_AN_ABILITY",
"address_offset": "0x00F8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AN_ABILITY_1000BASE_KX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 1000base kx.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_10GBASE_KX4": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 10gbase kx4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_10GBASE_KR": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 10gbase kr.  
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_40GBASE_KR4": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 40gbase kr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_40GBASE_CR4": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 40gbase cr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_CR10": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_an_ability_100gbase_cr10. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_KP4": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase kp4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_KR4": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase kr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_CR4": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase cr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KRCR_S": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase krcr s.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KRCR": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase krcr.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KR1": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase kr1.
   0 - Indicates that the interface advertises that it doesn't supports the protocol.
   1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_CR1": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase cr1.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_50GBASE_KR2": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 50gbase kr2.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_50GBASE_CR2": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 50gbase cr2.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616952,
},
"CONFIGURATION_LT_CONTROL_REG1": {"description": "CONFIGURATION_LT_CONTROL_REG1",
"address_offset": "0x0100",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_TRAINING_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt training enable.
  0 - When link training is disabled, all PCS lanes function in mission mode.
  1 - Enabled link training 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_RESTART_TRAINING": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt restart training.
  0 - Normal operation
  1 - This signal triggers a restart of link training regardless of the current state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616960,
},
"CONFIGURATION_LT_TRAINED_REG": {"description": "CONFIGURATION_LT_TRAINED_REG",
"address_offset": "0x0104",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_RX_TRAINED": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt rx trained.
  1 - Indicates that the receiver finite impulse response (FIR) filter coefficients have all been set, and that the receiver portion of training is complete. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616964,
},
"CONFIGURATION_LT_PRESET_REG": {"description": "CONFIGURATION_LT_PRESET_REG",
"address_offset": "0x0108",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_PRESET_TO_TX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt preset to tx.
  0 - Normal operation. Doesn't set any value the preset bit.
  1 - set the value of the preset bit that is transmitted to the link partner in the control block of the training frame. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616968,
},
"CONFIGURATION_LT_INIT_REG": {"description": "CONFIGURATION_LT_INIT_REG",
"address_offset": "0x010C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_INITIALIZE_TO_TX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt initialize to tx.
  To set the value of the initialize bit that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616972,
},
"CONFIGURATION_LT_SEED_REG0": {"description": "CONFIGURATION_LT_SEED_REG0",
"address_offset": "0x0110",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_PSEUDO_SEED0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "11",
"desc": "ctl lt pseudo seed0.
  This 11-bit signal seeds the training pattern generator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616976,
},
"CONFIGURATION_LT_COEFFICIENT_REG0": {"description": "CONFIGURATION_LT_COEFFICIENT_REG0",
"address_offset": "0x0130",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_K_P1_TO_TX0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt k p1 to tx0.
  This 2-bit field is used to set the value of the k+1 coefficient update field that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_K0_TO_TX0": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "ctl ltk0 to tx0.
  This 2-bit field is used to set the value of the k0 coefficient update field that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_K_M1_TO_TX0": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt k m1 to tx0.
  This 2-bit field is used to set the value of the k-1 coefficient update field that  is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT_P1_TO_TX0": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt stat p1 to tx0.
  This 2-bit field is used to set the value of the k+1 coefficient update status that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT0_TO_TX0": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt stat0 to tx0.
  This 2-bit field is used to set the value of the k0 coefficient update status that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT_M1_TO_TX0": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "ctl_lt_stat_m1_to_tx0.
  This 2-bit field is used to set the value of the k-1 coefficient update status  that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617008,
},
"USER_REG_0": {"description": "USER_REG_0",
"address_offset": "0x0134",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"USER_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "user register0.
  User-defined signal from the AXI4-Reg map user_reg0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617012,
},
"SWITCH_CORE_SPEED_REG": {"description": "SWITCH_CORE_SPEED_REG",
"address_offset": "0x0138",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"AXI_CTL_CORE_MODE_SWITCH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "axi ctl core mode switch.
  0 - Normal operation
  1 - Enables the mode switch line rate from 10G and 25G and vice versa.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617016,
},
"CONFIGURATION_1588_32BIT_REG": {"description": "CONFIGURATION_1588_32BIT_REG",
"address_offset": "0x013C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_LAT_ADJ_ENB": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx lat adj enb.
  1 - The delay computation on the TX path takes into account the value provided by the ctl_tx_latency_0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_LAT_ADJ_ENB": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx lat adj enb
  1 - The delay computation on the RX path takes into account the value provided by the ctl_rx_latency_0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TIMSTAMP_ADJ_ENB": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx timstamp adj enb.
  1 - The delay computation on the TX path takes into account the value obtained from GT DRP read for latency of the TX gearbox FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TIMSTAMP_ADJ_ENB": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx timstamp adj enb.
  1 - The delay computation on the RX path takes into account the value obtained from the GT DRP read for latency of the RX gearbox FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_CORE_SPEED": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl core speed.
  This signal indicates the speed with which the core is working.
  0 - 25G
  1 - 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617020,
},
"TX_CONFIGURATION_1588_REG": {"description": "TX_CONFIGURATION_1588_REG",
"address_offset": "0x0140",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_LATENCY": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx latency
  This is the static latency of the TX path of the core including the GT.
  The MSB 16 bits indicate the delay in ns and the LSB 16 bits indicate sub ns values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617024,
},
"RX_CONFIGURATION_1588_REG": {"description": "RX_CONFIGURATION_1588_REG",
"address_offset": "0x0144",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_LATENCY": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx latency
  This is the static latency of the RX path of the core including the GT.
  The MSB 16 bits indicate the delay in ns and the LSB 16 bits indicate sub ns values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617028,
},
"STAT_TX_STATUS_REG1": {"description": "STAT_TX_STATUS_REG1",
"address_offset": "0x0400",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx local fault.
  0 - Normal operation
  1 - Indicates the receive decoder state machine is in the TX_INIT state. This output is level sensitive. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_GMII_FIFO_OVF_1H_R_OUT": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx gmii fifo ovf 1h r out.
  TX FIFO overflow.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_GMII_FIFO_UNF_1H_R_OUT": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx gmii fifo unf 1h r out.
  TX FIFO underflow.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_BAD_PARITY": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx bad parity.
  Increment on any clock cycle where the  user-generated parity is calculated as  incorrect by the Tx parity checking logic.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617728,
},
"STAT_RX_STATUS_REG1": {"description": "STAT_RX_STATUS_REG1",
"address_offset": "0x0404",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_HI_BER": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx hi ber.
  High Bit Error Rate Indicator.
  1 - the BER is too high as defined by IEEE Std. 802.3. Corresponds to MDIO register bit 3.32.1 as defined in Clause 49.2.14.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_REMOTE_FAULT": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx remote fault.
   0 - Remote fault condition does not exist.
   1 - It indicates a remote fault condition was detected. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx local fault.
  1 - indicates the receive decoder state machine is in the RX_INIT state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_INTERNAL_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx internal local fault.
  1 - when an internal local fault is generated due to test pattern generation or high bit error rate. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_RECEIVED_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx received local fault.
  0 - Normal operation
  1 - when enough local fault words are received from the link partner to trigger a fault condition as specified by the IEEE fault state machine.
      Remains High as long as the fault condition persists.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_BAD_PREAMBLE": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx bad preamble.
  0 - Indicates that an invalid preamble was not received.
  1 - Indicates that an invalid preamble was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_BAD_SFD": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx bad sfd.
  Increment bad SFD.
  0 - Indicates that an invalid SFD was not received.
  1 - Indicates that an invalid SFD was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_GOT_SIGNAL_OS": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx got signal os.
  Signal OS indication.
  1 - It indicates that a signal OS word was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617732,
},
"STAT_STATUS_REG1": {"description": "STAT_STATUS_REG1",
"address_offset": "0x0408",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FIFO_ERROR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx fifo error.
  Transmit clock compensation FIFO error indicator.
  0 - Normal operation
  1 - Indicates the clock compensation FIFO under or overflowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_PTP_FIFO_READ_ERROR": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx ptp fifo read error.
  Transmit PTP FIFO read error.
  0 - Normal operation
  1 - Indicates that an error occurred during the PTP Tag read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_PTP_FIFO_WRITE_ERROR": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx ptp fifo write error.
  Transmit PTP FIFO write error.
  0 - Normal operation
  1 - Indicates that an error occurred during the PTP Tag write. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_FIFO_ERROR": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx fifo error.
  Receive clock compensation FIFO error indicator.
  0 - Normal operation
  1 - Indicates the clock compensation FIFO under or overflowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617736,
},
"STAT_RX_BLOCK_LOCK_REG": {"description": "STAT_RX_BLOCK_LOCK_REG",
"address_offset": "0x040C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BLOCK_LOCK": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx block lock
  Block lock status.
  1 - Indicates that block lock is achieved as defined in Clause 49.2.14 and MDIO register 3.32.0
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617740,
},
"STAT_RX_RSFEC_STATUS_REG": {"description": "STAT_RX_RSFEC_STATUS_REG",
"address_offset": "0x043C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_LANE_ALIGNMENT_STATUS": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx rsfec lane alignment status.
  1 - Indicates that the RX RS-FEC block has achieved alignment on the data from the transceiver. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_RSFEC_HI_SER": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx rsfec hi ser.
  Indicates high symbol error.
  1 - If the number of RS-FEC symbol errors in a window of 8192 codewords exceeds the threshold of 417.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617788,
},
"STAT_RX_FEC_STATUS_REG": {"description": "STAT_RX_FEC_STATUS_REG",
"address_offset": "0x0448",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_RX_LOCK": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat fec rx lock.
  1 - while the ctl_fec_rx_enable is asserted when the FEC decoder detects the frame boundary.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_FEC_LOCK_ERROR": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat fec lock error.
  1 - If the FEC decoder has been unable to detect the frame boundary after about 5 ms. It is cleared when the frame boundary is detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617800,
},
"STAT_TX_RSFEC_STATUS_REG": {"description": "STAT_TX_RSFEC_STATUS_REG",
"address_offset": "0x044C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_RSFEC_LANE_ALIGNMENT_STATUS": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx rsfec lane alignment status.
  1 - Indicates that the TX RS-FEC block has achieved alignment on the incoming PCS data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617804,
},
"STAT_TSN_REG": {"description": "STAT_TSN_REG",
"address_offset": "0x049C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_VERIFY": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat tx mm verify.
  Indicates verification status.
  0 - Indicates that verification is complete.
  1 - Indicates that verification is successful.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617884,
},
"STAT_TX_FLOW_CONTROL_REG1": {"description": "STAT_TX_FLOW_CONTROL_REG1",
"address_offset": "0x0450",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_VALID": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "stat tx pause valid.
  If a bit of this bus is set to 1, the core has transmitted a pause packet. If bit[8] is set to 1, a global pause packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617808,
},
"STAT_RX_FLOW_CONTROL_REG1": {"description": "STAT_RX_FLOW_CONTROL_REG1",
"address_offset": "0x0454",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REQ": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "stat rx pause req.
  Pause request signal.
  When the RX receives a valid pause frame, it sets the corresponding bit of this bus to a 1 and keep it at 1 until the pause packet has been processed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_PAUSE_VALID": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "9",
"desc": "stat rx pause valid.
  This bus indicates that a pause packet was received and the associated quanta on the stat_rx_pause_quanta[8:0][15:0] bus is valid and must be used for pause processing. If an 802.3x Ethernet MAC Pause packet is received, bit[8] is set to 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617812,
},
"STAT_AN_STATUS": {"description": "STAT_AN_STATUS",
"address_offset": "0x0458",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_FEC_ENABLE": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat an fec enable.
  Used to enable the use of clause 74 FEC on the link.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_RS_FEC_ENABLE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat an rs fec enable.
  Used to enable the use of clause 91 FEC on the link.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_AUTONEG_COMPLETE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat an autoneg complete.
  1 - Indicates the auto-negotiation is complete and rx link status from the PCS has been received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_PARALLEL_DETECTION_FAULT": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "stat an parallel detection fault.
  1 - Indicated a parallel detection fault during auto-negotiation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_TX_PAUSE_ENABLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat an tx pause enable.
  1 - Enable station-to-station (global) pause packet generation in the transmit path to control data flow in the receive path.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_RX_PAUSE_ENABLE": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat an rx pause enable.
  1 - Enable station-to-station (global) pause packet interpretation in the receive path, in order to control data flow from the transmitter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_VALID": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability valid.
  1 - Indicates when all of the link partner advertisements become valid.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_AUTONEG_ABLE": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp autoneg able.
  1 - Indicates that the link partner is able to perform auto-negotiation.
      It becomes valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_PAUSE": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp pause.
  1 - Indicates the advertised value of the PAUSE bit, (C0), in the receive link codeword from the link partner.
      It becomes valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ASM_DIR": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp asm dir.
  1 - Indicates the advertised value of the ASMDIR bit, (C1), in the receive link codeword from the link partner.
      It becomes valid when the output signal  stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_RF": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp rf.
  1 - Indicates link partner remote fault.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_10G_ABILITY": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 10g ability.
  1 - Indicates the clause 74 FEC ability associated with 10Gb/s lane protocols that is being advertised by the link partner.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_10G_REQUEST": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 10g request.
  1 - Indicates that the link partner is requesting that the clause 74 FEC be used on the 10Gb/s lane protocols.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_EXTENDED_ABILITY_VALID": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp extended ability valid.
  1 - It indicates that the detected extended abilities are valid.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_EXTENDED_FEC": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "4",
"desc": "stat an lp ability extended fec.
  Indicates the extended FEC abilities as defined in Schedule 3.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_25G_RS_REQUEST": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 25g rs request.
  1 - Indicates that the link partner is requesting the clause 91 (or 108) rs FEC be used for the 25gb/s lane protocols. 
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_25G_BASER_REQUEST": {"access": "read-only",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 25g baser request.
  1 - Indicates that the link partner is requesting the clause 74 FEC be used for the 25Gb/s lane base-r protocols.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617816,
},
"STAT_AN_ABILITY": {"description": "STAT_AN_ABILITY",
"address_offset": "0x045C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_LP_ABILITY_1000BASE_KX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 1000base kx.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_10GBASE_KX4": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 10gbase kx4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_10GBASE_KR": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 10gbase kr.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_40GBASE_KR4": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 40gbase kr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_40GBASE_CR4": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 40gbase cr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_CR10": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase cr10.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_KP4": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase kp4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_KR4": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase kr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_CR4": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase cr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KRCR_S": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase krcr_s.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KRCR": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase krcr.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KR1": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase kr1.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_CR1": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase cr1.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_50GBASE_KR2": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 50gbase kr2.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_50GBASE_CR2": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 50gbase cr2.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617820,
},
"STAT_AN_LINK_CTL": {"description": "STAT_AN_LINK_CTL",
"address_offset": "0x0460",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_LINK_CNTL_1000BASE_KX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 1000base kx.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_10GBASE_KX4": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 10gbase kx4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_10GBASE_KR": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 10gbase kr.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_40GBASE_KR4": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 40gbase kr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_40GBASE_CR4": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 40gbase cr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_CR10": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase cr10.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_KP4": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase kp4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_KR4": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase kr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_CR4": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase cr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KRCR_S": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase krcr_s.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KRCR": {"access": "read-only",
"bit_offset": "20",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase krcr.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KR1": {"access": "read-only",
"bit_offset": "22",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase kr1.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_CR1": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase cr1.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_50GBASE_KR2": {"access": "read-only",
"bit_offset": "26",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 50gbase kr2.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_50GBASE_CR2": {"access": "read-only",
"bit_offset": "28",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 50gbase cr2.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617824,
},
"STAT_LT_STATUS_REG1": {"description": "STAT_LT_STATUS_REG1",
"address_offset": "0x0464",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_INITIALIZE_FROM_RX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt initialize from rx.
  This signal reflects the value of the initialize control bit received in the control block from the link partner.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_PRESET_FROM_RX": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt preset from rx.
  This signal reflects the value of the preset control bit received in the control block from the link partner.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617828,
},
"STAT_LT_STATUS_REG2": {"description": "STAT_LT_STATUS_REG2",
"address_offset": "0x0468",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_TRAINING": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt training.
  1 - Indicates when the respective link training state machine is performing link training.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_FRAME_LOCK": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt frame lock.
  1 - Asserted when link training has begun.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617832,
},
"STAT_LT_STATUS_REG3": {"description": "STAT_LT_STATUS_REG3",
"address_offset": "0x046C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_SIGNAL_DETECT": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt signal detect.
  1 - Indicates when the respective link training state machine has entered the SEND_DATA state, in which normal PCS operation can resume.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_TRAINING_FAIL": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt training fail.
  1 - Asserted during link training if the corresponding link training state machine detects a time-out during the training period.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617836,
},
"STAT_LT_STATUS_REG4": {"description": "STAT_LT_STATUS_REG4",
"address_offset": "0x0470",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_RX_SOF": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt rx sof.
  1 - For 1 RX SerDes clock cycle to indicate the start of the link training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617840,
},
"STAT_LT_COEFFICIENT0_REG": {"description": "STAT_LT_COEFFICIENT0_REG",
"address_offset": "0x0474",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_K_P1_FROM_RX0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k p1 from rx0.
  This 2-bit field indicates the update control bits for the k+1 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_K0_FROM_RX0": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k0 from rx0.
  This 2-bit field indicates the update control bits for the k0 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_K_M1_FROM_RX0": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k m1 from rx0.
  This 2-bit field indicates the update control bits for the k-1 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT_P1_FROM_RX0": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat p1 from rx0.
  This 2-bit field indicates the update status bits for the k+1 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT0_FROM_RX0": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat0 from rx0.
  This 2-bit field indicates the update status bits for the k0 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT_M1_FROM_RX0": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat m1 from rx0.
  This 2-bit field indicates the update status bits for the k-1 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617844,
},
"STAT_RX_VALID_CTRL_CODE": {"description": "STAT_RX_VALID_CTRL_CODE",
"address_offset": "0x0494",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VALID_CTRL_CODE": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx valid ctrl code.
  1 - Indicates that a PCS block with a valid control code was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617876,
},
"STAT_CORE_SPEED_REG": {"description": "STAT_CORE_SPEED_REG",
"address_offset": "0x0498",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CORE_SPEED": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat core speed.
  0 - Standalone 25G
  1 - Standalone 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUNTIME_SWITCHABLE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "runtime switchable.
  0 - Runtime Switchable 25G
  1 - Runtime Switchable 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617880,
},
"STATUS_CYCLE_COUNT_LSB": {"description": "STATUS_CYCLE_COUNT_LSB",
"address_offset": "0x0500",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CYCLE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat cycle reg0.
  Contains a count of the number of RX core clock cycles between TICK_REG writes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617984,
},
"STATUS_CYCLE_COUNT_MSB": {"description": "STATUS_CYCLE_COUNT_MSB",
"address_offset": "0x0504",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CYCLE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat cycle reg1.
  Contains a count of the number of RX core clock cycles between TICK_REG writes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617988,
},
"STAT_RX_FRAMING_ERR_LSB": {"description": "STAT_RX_FRAMING_ERR_LSB",
"address_offset": "0x0648",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAMING_ERR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx framing err reg0.
  RX sync header bits framing error.
  Each PCS Lane has a four-bit bus that indicates how many sync header errors were received for that PCS Lane.
  The value of the bus is only valid when the corresponding stat_rx_framing_err_valid is a 1.
  The values on these buses can be updated at any time and are intended to be used as increment values for sync header error counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618312,
},
"STAT_RX_FRAMING_ERR_MSB": {"description": "STAT_RX_FRAMING_ERR_MSB",
"address_offset": "0x064C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAMING_ERR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx framing err reg1.
  RX sync header bits framing error.
  Each PCS Lane has a four-bit bus that indicates how many sync header errors were received for that PCS Lane.
  The value of the bus is only valid when the corresponding stat_rx_framing_err_valid is a 1.
  The values on these buses can be updated at any time and are intended to be used as increment values for sync header error counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618316,
},
"STAT_RX_BAD_CODE_LSB": {"description": "STAT_RX_BAD_CODE_LSB",
"address_offset": "0x0660",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_CODE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx bad code reg0.
  Increment for 64B/66B code violations.
  This signal indicates that the RX PCS receive state machine is in the RX_E state as specified by the IEEE Std 802.3-2015. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618336,
},
"STAT_RX_BAD_CODE_MSB": {"description": "STAT_RX_BAD_CODE_MSB",
"address_offset": "0x0664",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_CODE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx bad code reg1.
  Increment for 64B/66B code violations.
  This signal indicates that the RX PCS receive state machine is in the RX_E state as specified by the IEEE Std 802.3-2015.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618340,
},
"STAT_RX_ERROR_LSB": {"description": "STAT_RX_ERROR_LSB",
"address_offset": "0x0668",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx error reg0.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates a mismatch occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618344,
},
"STAT_RX_ERROR_MSB": {"description": "STAT_RX_ERROR_MSB",
"address_offset": "0x066C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx error reg1.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates a mismatch occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618348,
},
"STAT_RX_RSFEC_CORRECTED_CW_INC_LSB": {"description": "STAT_RX_RSFEC_CORRECTED_CW_INC_LSB",
"address_offset": "0x0670",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_CORRECTED_CW_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec corrected cw inc reg0.
  Increment for corrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618352,
},
"STAT_RX_RSFEC_CORRECTED_CW_INC_MSB": {"description": "STAT_RX_RSFEC_CORRECTED_CW_INC_MSB",
"address_offset": "0x0674",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_CORRECTED_CW_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec corrected cw inc reg1.
  Increment for corrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618356,
},
"STAT_RX_RSFEC_UNCORRECTED_CW_INC_LSB": {"description": "STAT_RX_RSFEC_UNCORRECTED_CW_INC_LSB",
"address_offset": "0x0678",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_UNCORRECTED_CW_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec uncorrected cw inc reg0.
  Increment for uncorrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618360,
},
"STAT_RX_RSFEC_UNCORRECTED_CW_INC_MSB": {"description": "STAT_RX_RSFEC_UNCORRECTED_CW_INC_MSB",
"address_offset": "0x067C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_UNCORRECTED_CW_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec uncorrected cw inc reg1.
  Increment for uncorrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618364,
},
"STAT_RX_RSFEC_ERR_COUNT0_INC_LSB": {"description": "STAT_RX_RSFEC_ERR_COUNT0_INC_LSB",
"address_offset": "0x0680",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_ERR_COUNT0_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec err count inc reg0.
  Increment for detected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618368,
},
"STAT_RX_RSFEC_ERR_COUNT0_INC_MSB": {"description": "STAT_RX_RSFEC_ERR_COUNT0_INC_MSB",
"address_offset": "0x0684",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_ERR_COUNT0_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec err count inc reg1.
  Increment for detected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618372,
},
"STAT_TX_FRAME_ERROR_LSB": {"description": "STAT_TX_FRAME_ERROR_LSB",
"address_offset": "0x06A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FRAME_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx frame error reg0.
  Increment for packets with tx_axis_tuser set to indicate an End of Packet(EOP) abort.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618400,
},
"STAT_TX_FRAME_ERROR_MSB": {"description": "STAT_TX_FRAME_ERROR_MSB",
"address_offset": "0x06A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FRAME_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx frame error reg1.
  Increment for packets with tx_axis_tuser set to indicate an End of Packet(EOP) abort.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618404,
},
"STAT_TX_TOTAL_PACKETS_LSB": {"description": "STAT_TX_TOTAL_PACKETS_LSB",
"address_offset": "0x0700",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total packets reg0.
  Increment for the total number of packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618496,
},
"STAT_TX_TOTAL_PACKETS_MSB": {"description": "STAT_TX_TOTAL_PACKETS_MSB",
"address_offset": "0x0704",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total packets reg1.
  Increment for the total number of packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618500,
},
"STAT_TX_TOTAL_GOOD_PACKETS_LSB": {"description": "STAT_TX_TOTAL_GOOD_PACKETS_LSB",
"address_offset": "0x0708",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total good packets reg0.
  Increment for the total number of good packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618504,
},
"STAT_TX_TOTAL_GOOD_PACKETS_MSB": {"description": "STAT_TX_TOTAL_GOOD_PACKETS_MSB",
"address_offset": "0x070C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total good packets reg1.
  Increment for the total number of good packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618508,
},
"STAT_TX_TOTAL_BYTES_LSB": {"description": "STAT_TX_TOTAL_BYTES_LSB",
"address_offset": "0x0710",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total bytes reg0.
  Increment for the total number of bytes transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618512,
},
"STAT_TX_TOTAL_BYTES_MSB": {"description": "STAT_TX_TOTAL_BYTES_MSB",
"address_offset": "0x0714",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total bytes reg1.
  Increment for the total number of bytes transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618516,
},
"STAT_TX_TOTAL_GOOD_BYTES_LSB": {"description": "STAT_TX_TOTAL_GOOD_BYTES_LSB",
"address_offset": "0x0718",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total good bytes reg0.
  Increment for the total number of good bytes transmitted.
  This value is only non-zero when a packet is transmitted completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618520,
},
"STAT_TX_TOTAL_GOOD_BYTES_MSB": {"description": "STAT_TX_TOTAL_GOOD_BYTES_MSB",
"address_offset": "0x071C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total good bytes reg1.
  Increment for the total number of good bytes transmitted.
  This value is only non-zero when a packet is transmitted completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618524,
},
"STAT_TX_PACKET_64_BYTES_LSB": {"description": "STAT_TX_PACKET_64_BYTES_LSB",
"address_offset": "0x0720",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_64_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 64 bytes reg0.
  Increment for good and bad packets transmitted that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618528,
},
"STAT_TX_PACKET_64_BYTES_MSB": {"description": "STAT_TX_PACKET_64_BYTES_MSB",
"address_offset": "0x0724",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_64_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 64 bytes reg1.
  Increment for good and bad packets transmitted that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618532,
},
"STAT_TX_PACKET_65_127_BYTES_LSB": {"description": "STAT_TX_PACKET_65_127_BYTES_LSB",
"address_offset": "0x0728",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_65_127_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 65 - 127 bytes reg0.
  Increment for good and bad packets transmitted that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618536,
},
"STAT_TX_PACKET_65_127_BYTES_MSB": {"description": "STAT_TX_PACKET_65_127_BYTES_MSB",
"address_offset": "0x072C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_65_127_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 65-127 bytes reg1.
  Increment for good and bad packets transmitted that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618540,
},
"STAT_TX_PACKET_128_255_BYTES_LSB": {"description": "STAT_TX_PACKET_128_255_BYTES_LSB",
"address_offset": "0x0730",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_128_255_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 128-255 bytes reg0.
  Increment for good and bad packets transmitted that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618544,
},
"STAT_TX_PACKET_128_255_BYTES_MSB": {"description": "STAT_TX_PACKET_128_255_BYTES_MSB",
"address_offset": "0x0734",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_128_255_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 128-255 bytes reg1.
  Increment for good and bad packets transmitted that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618548,
},
"STAT_TX_PACKET_256_511_BYTES_LSB": {"description": "STAT_TX_PACKET_256_511_BYTES_LSB",
"address_offset": "0x0738",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_256_511_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 256-511 bytes reg0.
  Increment for good and bad packets transmitted that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618552,
},
"STAT_TX_PACKET_256_511_BYTES_MSB": {"description": "STAT_TX_PACKET_256_511_BYTES_MSB",
"address_offset": "0x073C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_256_511_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 256-511 bytes reg1.
  Increment for good and bad packets transmitted that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618556,
},
"STAT_TX_PACKET_512_1023_BYTES_LSB": {"description": "STAT_TX_PACKET_512_1023_BYTES_LSB",
"address_offset": "0x0740",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_512_1023_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 512-1023 bytes reg0.
  Increment for good and bad packets transmitted that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618560,
},
"STAT_TX_PACKET_512_1023_BYTES_MSB": {"description": "STAT_TX_PACKET_512_1023_BYTES_MSB",
"address_offset": "0x0744",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_512_1023_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 512-1023 bytes reg1.
  Increment for good and bad packets transmitted that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618564,
},
"STAT_TX_PACKET_1024_1518_BYTES_LSB": {"description": "STAT_TX_PACKET_1024_1518_BYTES_LSB",
"address_offset": "0x0748",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1024_1518_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1024-1518 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618568,
},
"STAT_TX_PACKET_1024_1518_BYTES_MSB": {"description": "STAT_TX_PACKET_1024_1518_BYTES_MSB",
"address_offset": "0x074C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1024_1518_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1024-1518 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618572,
},
"STAT_TX_PACKET_1519_1522_BYTES_LSB": {"description": "STAT_TX_PACKET_1519_1522_BYTES_LSB",
"address_offset": "0x0750",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1519_1522_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1519-1522 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,519 to 1,522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618576,
},
"STAT_TX_PACKET_1519_1522_BYTES_MSB": {"description": "STAT_TX_PACKET_1519_1522_BYTES_MSB",
"address_offset": "0x0754",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1519_1522_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1519-1522 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,519 to 1,522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618580,
},
"STAT_TX_PACKET_1523_1548_BYTES_LSB": {"description": "STAT_TX_PACKET_1523_1548_BYTES_LSB",
"address_offset": "0x0758",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1523_1548_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1523-1548 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618584,
},
"STAT_TX_PACKET_1523_1548_BYTES_MSB": {"description": "STAT_TX_PACKET_1523_1548_BYTES_MSB",
"address_offset": "0x075C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1523_1548_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1523-1548 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618588,
},
"STAT_TX_PACKET_1549_2047_BYTES_LSB": {"description": "STAT_TX_PACKET_1549_2047_BYTES_LSB",
"address_offset": "0x0760",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1549_2047_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1549-2047 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618592,
},
"STAT_TX_PACKET_1549_2047_BYTES_MSB": {"description": "STAT_TX_PACKET_1549_2047_BYTES_MSB",
"address_offset": "0x0764",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1549_2047_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1549-2047 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618596,
},
"STAT_TX_PACKET_2048_4095_BYTES_LSB": {"description": "STAT_TX_PACKET_2048_4095_BYTES_LSB",
"address_offset": "0x0768",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_2048_4095_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 2048-4095 bytes reg0.
  Increment for good and bad packets transmitted that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618600,
},
"STAT_TX_PACKET_2048_4095_BYTES_MSB": {"description": "STAT_TX_PACKET_2048_4095_BYTES_MSB",
"address_offset": "0x076C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_2048_4095_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 2048-4095 bytes reg1.
  Increment for good and bad packets transmitted that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618604,
},
"STAT_TX_PACKET_4096_8191_BYTES_LSB": {"description": "STAT_TX_PACKET_4096_8191_BYTES_LSB",
"address_offset": "0x0770",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_4096_8191_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 4096-8191 bytes reg0.
  Increment for good and bad packets transmitted that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618608,
},
"STAT_TX_PACKET_4096_8191_BYTES_MSB": {"description": "STAT_TX_PACKET_4096_8191_BYTES_MSB",
"address_offset": "0x0774",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_4096_8191_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 4096-8191 bytes reg1.
  Increment for good and bad packets transmitted that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618612,
},
"STAT_TX_PACKET_8192_9215_BYTES_LSB": {"description": "STAT_TX_PACKET_8192_9215_BYTES_LSB",
"address_offset": "0x0778",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_8192_9215_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 8192-9215 bytes reg0.
  Increment for good and bad packets transmitted that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618616,
},
"STAT_TX_PACKET_8192_9215_BYTES_MSB": {"description": "STAT_TX_PACKET_8192_9215_BYTES_MSB",
"address_offset": "0x077C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_8192_9215_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 8192-9215 bytes reg1.
  Increment for good and bad packets transmitted that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618620,
},
"STAT_TX_PACKET_LARGE_LSB": {"description": "STAT_TX_PACKET_LARGE_LSB",
"address_offset": "0x0780",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_LARGE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet large reg0.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618624,
},
"STAT_TX_PACKET_LARGE_MSB": {"description": "STAT_TX_PACKET_LARGE_MSB",
"address_offset": "0x0784",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_LARGE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet large reg1.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618628,
},
"STAT_TX_PACKET_SMALL_LSB": {"description": "STAT_TX_PACKET_SMALL_LSB",
"address_offset": "0x0788",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_SMALL_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet small reg0.
  Increment for all packets that are less than 64 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618632,
},
"STAT_TX_PACKET_SMALL_MSB": {"description": "STAT_TX_PACKET_SMALL_MSB",
"address_offset": "0x078C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_SMALL_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet small reg1.
  Increment for all packets that are less than 64 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618636,
},
"STAT_TX_BAD_FCS_LSB": {"description": "STAT_TX_BAD_FCS_LSB",
"address_offset": "0x07B8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx bad fcs reg0.
  Increment for packets greater than 64 bytes that have FCS errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618680,
},
"STAT_TX_BAD_FCS_MSB": {"description": "STAT_TX_BAD_FCS_MSB",
"address_offset": "0x07BC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx bad fcs reg1.
  Increment for packets greater than 64 bytes that have FCS errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618684,
},
"STAT_TX_UNICAST_LSB": {"description": "STAT_TX_UNICAST_LSB",
"address_offset": "0x07D0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_UNICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx unicast reg0.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618704,
},
"STAT_TX_UNICAST_MSB": {"description": "STAT_TX_UNICAST_MSB",
"address_offset": "0x07D4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_UNICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx unicast reg1.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618708,
},
"STAT_TX_MULTICAST_LSB": {"description": "STAT_TX_MULTICAST_LSB",
"address_offset": "0x07D8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MULTICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx multicast reg0.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618712,
},
"STAT_TX_MULTICAST_MSB": {"description": "STAT_TX_MULTICAST_MSB",
"address_offset": "0x07DC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MULTICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx multicast reg1.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618716,
},
"STAT_TX_BROADCAST_LSB": {"description": "STAT_TX_BROADCAST_LSB",
"address_offset": "0x07E0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BROADCAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx broadcast reg0.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618720,
},
"STAT_TX_BROADCAST_MSB": {"description": "STAT_TX_BROADCAST_MSB",
"address_offset": "0x07E4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BROADCAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx broadcast reg1.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618724,
},
"STAT_TX_VLAN_LSB": {"description": "STAT_TX_VLAN_LSB",
"address_offset": "0x07E8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_VLAN_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx vlan reg0.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618728,
},
"STAT_TX_VLAN_MSB": {"description": "STAT_TX_VLAN_MSB",
"address_offset": "0x07EC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_VLAN_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx vlan reg1.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618732,
},
"STAT_TX_PAUSE_LSB": {"description": "STAT_TX_PAUSE_LSB",
"address_offset": "0x07F0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx pause reg0.
  Increment for 802.3x MAC Pause Packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618736,
},
"STAT_TX_PAUSE_MSB": {"description": "STAT_TX_PAUSE_MSB",
"address_offset": "0x07F4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx pause reg1.
  Increment for 802.3x MAC Pause Packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618740,
},
"STAT_TX_USER_PAUSE_LSB": {"description": "STAT_TX_USER_PAUSE_LSB",
"address_offset": "0x07F8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_USER_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx user pause reg0.
  Increment for Priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618744,
},
"STAT_TX_USER_PAUSE_MSB": {"description": "STAT_TX_USER_PAUSE_MSB",
"address_offset": "0x07FC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_USER_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx user pause reg1.
  Increment for Priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618748,
},
"STAT_RX_TOTAL_PACKETS_LSB": {"description": "STAT_RX_TOTAL_PACKETS_LSB",
"address_offset": "0x0808",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total packets reg0.
  Increment for the total number of packets received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618760,
},
"STAT_RX_TOTAL_PACKETS_MSB": {"description": "STAT_RX_TOTAL_PACKETS_MSB",
"address_offset": "0x080C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total packets reg1.
  Increment for the total number of packets received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618764,
},
"STAT_RX_TOTAL_GOOD_PACKETS_LSB": {"description": "STAT_RX_TOTAL_GOOD_PACKETS_LSB",
"address_offset": "0x0810",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total good packets reg0.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618768,
},
"STAT_RX_TOTAL_GOOD_PACKETS_MSB": {"description": "STAT_RX_TOTAL_GOOD_PACKETS_MSB",
"address_offset": "0x0814",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total good packets reg1.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618772,
},
"STAT_RX_TOTAL_BYTES_LSB": {"description": "STAT_RX_TOTAL_BYTES_LSB",
"address_offset": "0x0818",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total bytes reg0.
  Increment for the total number of bytes received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618776,
},
"STAT_RX_TOTAL_BYTES_MSB": {"description": "STAT_RX_TOTAL_BYTES_MSB",
"address_offset": "0x081C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total bytes reg1.
  Increment for the total number of bytes received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618780,
},
"STAT_RX_TOTAL_GOOD_BYTES_LSB": {"description": "STAT_RX_TOTAL_GOOD_BYTES_LSB",
"address_offset": "0x0820",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total good bytes reg0.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618784,
},
"STAT_RX_TOTAL_GOOD_BYTES_MSB": {"description": "STAT_RX_TOTAL_GOOD_BYTES_MSB",
"address_offset": "0x0824",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total good bytes reg1.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618788,
},
"STAT_RX_PACKET_64_BYTES_LSB": {"description": "STAT_RX_PACKET_64_BYTES_LSB",
"address_offset": "0x0828",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_64_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 64 bytes reg0.
  Increment for good and bad packets received that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618792,
},
"STAT_RX_PACKET_64_BYTES_MSB": {"description": "STAT_RX_PACKET_64_BYTES_MSB",
"address_offset": "0x082C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_64_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 64 bytes reg1.
  Increment for good and bad packets received that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618796,
},
"STAT_RX_PACKET_65_127_BYTES_LSB": {"description": "STAT_RX_PACKET_65_127_BYTES_LSB",
"address_offset": "0x0830",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_65_127_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 65-127 bytes reg0.
  Increment for good and bad packets received that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618800,
},
"STAT_RX_PACKET_65_127_BYTES_MSB": {"description": "STAT_RX_PACKET_65_127_BYTES_MSB",
"address_offset": "0x0834",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_65_127_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 65-127 bytes reg1.
  Increment for good and bad packets received that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618804,
},
"STAT_RX_PACKET_128_255_BYTES_LSB": {"description": "STAT_RX_PACKET_128_255_BYTES_LSB",
"address_offset": "0x0838",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_128_255_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 128-255 bytes reg0.
  Increment for good and bad packets received that contain 128 to 255 bytes. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618808,
},
"STAT_RX_PACKET_128_255_BYTES_MSB": {"description": "STAT_RX_PACKET_128_255_BYTES_MSB",
"address_offset": "0x083C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_128_255_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 128-255 bytes reg1.
  Increment for good and bad packets received that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618812,
},
"STAT_RX_PACKET_256_511_BYTES_LSB": {"description": "STAT_RX_PACKET_256_511_BYTES_LSB",
"address_offset": "0x0840",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_256_511_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 256-511 bytes reg0.
  Increment for good and bad packets received that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618816,
},
"STAT_RX_PACKET_256_511_BYTES_MSB": {"description": "STAT_RX_PACKET_256_511_BYTES_MSB",
"address_offset": "0x0844",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_256_511_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 256-511 bytes reg1.
  Increment for good and bad packets received that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618820,
},
"STAT_RX_PACKET_512_1023_BYTES_LSB": {"description": "STAT_RX_PACKET_512_1023_BYTES_LSB",
"address_offset": "0x0848",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_512_1023_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 512-1023 bytes reg0.
  Increment for good and bad packets received that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618824,
},
"STAT_RX_PACKET_512_1023_BYTES_MSB": {"description": "STAT_RX_PACKET_512_1023_BYTES_MSB",
"address_offset": "0x084C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_512_1023_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 512-1023 bytes reg1.
  Increment for good and bad packets received that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618828,
},
"STAT_RX_PACKET_1024_1518_BYTES_LSB": {"description": "STAT_RX_PACKET_1024_1518_BYTES_LSB",
"address_offset": "0x0850",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1024_1518_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1024-1518 bytes reg0.
  Increment for good and bad packets received that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618832,
},
"STAT_RX_PACKET_1024_1518_BYTES_MSB": {"description": "STAT_RX_PACKET_1024_1518_BYTES_MSB",
"address_offset": "0x0854",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1024_1518_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1024-1518 bytes reg1.
  Increment for good and bad packets received that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618836,
},
"STAT_RX_PACKET_1519_1522_BYTES_LSB": {"description": "STAT_RX_PACKET_1519_1522_BYTES_LSB",
"address_offset": "0x0858",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1519_1522_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1519-1522 bytes reg0.
  Increment for good and bad packets received that contain 1519 to 1522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618840,
},
"STAT_RX_PACKET_1519_1522_BYTES_MSB": {"description": "STAT_RX_PACKET_1519_1522_BYTES_MSB",
"address_offset": "0x085C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1519_1522_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1519-1522 bytes reg1.
  Increment for good and bad packets received that contain 1519 to 1522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618844,
},
"STAT_RX_PACKET_1523_1548_BYTES_LSB": {"description": "STAT_RX_PACKET_1523_1548_BYTES_LSB",
"address_offset": "0x0860",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1523_1548_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1523-1548 bytes reg0.
  Increment for good and bad packets received that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618848,
},
"STAT_RX_PACKET_1523_1548_BYTES_MSB": {"description": "STAT_RX_PACKET_1523_1548_BYTES_MSB",
"address_offset": "0x0864",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1523_1548_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1523-1548 bytes reg1.
  Increment for good and bad packets received that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618852,
},
"STAT_RX_PACKET_1549_2047_BYTES_LSB": {"description": "STAT_RX_PACKET_1549_2047_BYTES_LSB",
"address_offset": "0x0868",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1549_2047_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1549-2047 bytes reg0.
  Increment for good and bad packets received that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618856,
},
"STAT_RX_PACKET_1549_2047_BYTES_MSB": {"description": "STAT_RX_PACKET_1549_2047_BYTES_MSB",
"address_offset": "0x086C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1549_2047_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1549-2047 bytes reg1.
  Increment for good and bad packets received that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618860,
},
"STAT_RX_PACKET_2048_4095_BYTES_LSB": {"description": "STAT_RX_PACKET_2048_4095_BYTES_LSB",
"address_offset": "0x0870",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_2048_4095_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 2048-4095 bytes reg0.
  Increment for good and bad packets received that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618864,
},
"STAT_RX_PACKET_2048_4095_BYTES_MSB": {"description": "STAT_RX_PACKET_2048_4095_BYTES_MSB",
"address_offset": "0x0874",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_2048_4095_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 2048-4095 bytes reg1.
  Increment for good and bad packets received that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618868,
},
"STAT_RX_PACKET_4096_8191_BYTES_LSB": {"description": "STAT_RX_PACKET_4096_8191_BYTES_LSB",
"address_offset": "0x0878",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_4096_8191_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 4096-8191 bytes reg0.
  Increment for good and bad packets received that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618872,
},
"STAT_RX_PACKET_4096_8191_BYTES_MSB": {"description": "STAT_RX_PACKET_4096_8191_BYTES_MSB",
"address_offset": "0x087C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_4096_8191_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 4096-8191 bytes reg1.
  Increment for good and bad packets received that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618876,
},
"STAT_RX_PACKET_8192_9215_BYTES_LSB": {"description": "STAT_RX_PACKET_8192_9215_BYTES_LSB",
"address_offset": "0x0880",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_8192_9215_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 8192-9215 bytes reg0.
  Increment for good and bad packets received that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618880,
},
"STAT_RX_PACKET_8192_9215_BYTES_MSB": {"description": "STAT_RX_PACKET_8192_9215_BYTES_MSB",
"address_offset": "0x0884",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_8192_9215_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 8192-9215 bytes reg1.
  Increment for good and bad packets received that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618884,
},
"STAT_RX_PACKET_LARGE_LSB": {"description": "STAT_RX_PACKET_LARGE_LSB",
"address_offset": "0x0888",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_LARGE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet large reg0.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618888,
},
"STAT_RX_PACKET_LARGE_MSB": {"description": "STAT_RX_PACKET_LARGE_MSB",
"address_offset": "0x088C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_LARGE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet large reg1.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618892,
},
"STAT_RX_PACKET_SMALL_LSB": {"description": "STAT_RX_PACKET_SMALL_LSB",
"address_offset": "0x0890",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_SMALL_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet small reg0.
  Increment for all packets that are less than 64 bytes long.
  Packets that are less than four bytes are dropped.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618896,
},
"STAT_RX_PACKET_SMALL_MSB": {"description": "STAT_RX_PACKET_SMALL_MSB",
"address_offset": "0x0894",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_SMALL_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet small reg1.
  Increment for all packets that are less than 64 bytes long.
  Packets that are less than four bytes are dropped.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618900,
},
"STAT_RX_UNDERSIZE_LSB": {"description": "STAT_RX_UNDERSIZE_LSB",
"address_offset": "0x0898",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNDERSIZE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx undersize reg0.
  Increment for packets shorter than ctl_rx_min_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618904,
},
"STAT_RX_UNDERSIZE_MSB": {"description": "STAT_RX_UNDERSIZE_MSB",
"address_offset": "0x089C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNDERSIZE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx undersize reg1.
  Increment for packets shorter than ctl_rx_min_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618908,
},
"STAT_RX_FRAGMENT_LSB": {"description": "STAT_RX_FRAGMENT_LSB",
"address_offset": "0x8A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx fragment reg0.
  Increment for packets shorter than ctl_rx_min_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618912,
},
"STAT_RX_FRAGMENT_MSB": {"description": "STAT_RX_FRAGMENT_MSB",
"address_offset": "0x8A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx fragment reg1.
  Increment for packets shorter than ctl_rx_min_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618916,
},
"STAT_RX_OVERSIZE_LSB": {"description": "STAT_RX_OVERSIZE_LSB",
"address_offset": "0x08A8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_OVERSIZE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx oversize reg0.
  Increment for packets longer than ctl_rx_max_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618920,
},
"STAT_RX_OVERSIZE_MSB": {"description": "STAT_RX_OVERSIZE_MSB",
"address_offset": "0x08AC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_OVERSIZE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx oversize reg1.
  Increment for packets longer than ctl_rx_max_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618924,
},
"STAT_RX_TOOLONG_LSB": {"description": "STAT_RX_TOOLONG_LSB",
"address_offset": "0x08B0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOOLONG_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx toolong reg0.
  Increment for packets longer than ctl_rx_max_packet_len with good and bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618928,
},
"STAT_RX_TOOLONG_MSB": {"description": "STAT_RX_TOOLONG_MSB",
"address_offset": "0x08B4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOOLONG_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx toolong reg1.
  Increment for packets longer than ctl_rx_max_packet_len with good and bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618932,
},
"STAT_RX_JABBER_LSB": {"description": "STAT_RX_JABBER_LSB",
"address_offset": "0x08B8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_JABBER_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx jabber reg0.
  Increment for packets longer than ctl_rx_max_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618936,
},
"STAT_RX_JABBER_MSB": {"description": "STAT_RX_JABBER_MSB",
"address_offset": "0x08BC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_JABBER_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx jabber reg1.
  Increment for packets longer than ctl_rx_max_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618940,
},
"STAT_RX_BAD_FCS_LSB": {"description": "STAT_RX_BAD_FCS_LSB",
"address_offset": "0x08C0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx bad fcs reg0.
  Bad FCS indicator.
  The value on this bus indicates packets received with a bad FCS, but not a stomped FCS during a cycle.
  This output is pulsed for one clock cycle to indicate an error condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618944,
},
"STAT_RX_BAD_FCS_MSB": {"description": "STAT_RX_BAD_FCS_MSB",
"address_offset": "0x08C4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx bad fcs reg1.
  Bad FCS indicator.
  The value on this bus indicates packets received with a bad FCS, but not a stomped FCS during a cycle.
  This output is pulsed for one clock cycle to indicate an error condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618948,
},
"STAT_RX_PACKET_BAD_FCS_LSB": {"description": "STAT_RX_PACKET_BAD_FCS_LSB",
"address_offset": "0x08C8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet bad fcs reg0.
  Increment for packets between 64 and ctl_rx_max_packet_len bytes that have Frame Check Sequence (FCS) errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618952,
},
"STAT_RX_PACKET_BAD_FCS_MSB": {"description": "STAT_RX_PACKET_BAD_FCS_MSB",
"address_offset": "0x08CC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet bad fcs reg1.
  Increment for packets between 64 and ctl_rx_max_packet_len bytes that have Frame Check Sequence (FCS) errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618956,
},
"STAT_RX_STOMPED_FCS_LSB": {"description": "STAT_RX_STOMPED_FCS_LSB",
"address_offset": "0x08D0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_STOMPED_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx stomped fcs reg0.
  Stomped FCS indicator.
  The value on this bus indicates the packets were received with a stomped FCS.
  A stomped FCS is defined as the bitwise inverse of the expected good FCS.
  This output is pulsed for one clock cycle to indicate the stomped condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618960,
},
"STAT_RX_STOMPED_FCS_MSB": {"description": "STAT_RX_STOMPED_FCS_MSB",
"address_offset": "0x08D4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_STOMPED_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx stomped fcs reg1.
  Stomped FCS indicator.
  The value on this bus indicates the packets were received with a stomped FCS.
  A stomped FCS is defined as the bitwise inverse of the expected good FCS.
  This output is pulsed for one clock cycle to indicate the stomped condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618964,
},
"STAT_RX_UNICAST_LSB": {"description": "STAT_RX_UNICAST_LSB",
"address_offset": "0x08D8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx unicast reg0.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618968,
},
"STAT_RX_UNICAST_MSB": {"description": "STAT_RX_UNICAST_MSB",
"address_offset": "0x08DC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx unicast reg1.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618972,
},
"STAT_RX_MULTICAST_LSB": {"description": "STAT_RX_MULTICAST_LSB",
"address_offset": "0x08E0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MULTICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx multicast reg0.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618976,
},
"STAT_RX_MULTICAST_MSB": {"description": "STAT_RX_MULTICAST_MSB",
"address_offset": "0x08E4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MULTICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx multicast reg1.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618980,
},
"STAT_RX_BROADCAST_LSB": {"description": "STAT_RX_BROADCAST_LSB",
"address_offset": "0x08E8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BROADCAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx broadcast reg0.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618984,
},
"STAT_RX_BROADCAST_MSB": {"description": "STAT_RX_BROADCAST_MSB",
"address_offset": "0x08EC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BROADCAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx broadcast reg1.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618988,
},
"STAT_RX_VLAN_LSB": {"description": "STAT_RX_VLAN_LSB",
"address_offset": "0x08F0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VLAN_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx vlan reg0.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618992,
},
"STAT_RX_VLAN_MSB": {"description": "STAT_RX_VLAN_MSB",
"address_offset": "0x08F4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VLAN_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx vlan reg1.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618996,
},
"STAT_RX_PAUSE_LSB": {"description": "STAT_RX_PAUSE_LSB",
"address_offset": "0x08F8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx pause reg0.
  Increment for 802.3x MAC Pause packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619000,
},
"STAT_RX_PAUSE_MSB": {"description": "STAT_RX_PAUSE_MSB",
"address_offset": "0x08FC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx pause reg1.
  Increment for 802.3x MAC Pause packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619004,
},
"STAT_RX_USER_PAUSE_LSB": {"description": "STAT_RX_USER_PAUSE_LSB",
"address_offset": "0x0900",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_USER_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx user pause reg0.
  Increment for priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619008,
},
"STAT_RX_USER_PAUSE_MSB": {"description": "STAT_RX_USER_PAUSE_MSB",
"address_offset": "0x0904",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_USER_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx user pause reg1.
  Increment for priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619012,
},
"STAT_RX_INRANGEERR_LSB": {"description": "STAT_RX_INRANGEERR_LSB",
"address_offset": "0x0908",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_INRANGEERR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx inrangeerr reg0.
  Increment for packets with Length field error but with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619016,
},
"STAT_RX_INRANGEERR_MSB": {"description": "STAT_RX_INRANGEERR_MSB",
"address_offset": "0x090C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_INRANGEERR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx inrangeerr reg1.
  Increment for packets with Length field error but with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619020,
},
"STAT_RX_TRUNCATED_LSB": {"description": "STAT_RX_TRUNCATED_LSB",
"address_offset": "0x0910",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TRUNCATED_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx truncated reg0.
  Packet truncation indicator.
  1 - Indicates that the current packet in flight is truncated due to its length exceeding ctl_rx_max_packet_len[14:0].
      This output is pulsed for one clock cycle to indicate the truncated condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619024,
},
"STAT_RX_TRUNCATED_MSB": {"description": "STAT_RX_TRUNCATED_MSB",
"address_offset": "0x0914",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TRUNCATED_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx truncated reg1.
  Packet truncation indicator.
  1 - Indicates that the current packet in flight is truncated due to its length exceeding ctl_rx_max_packet_len[14:0].
      This output is pulsed for one clock cycle to indicate the truncated condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619028,
},
"STAT_RX_TEST_PATTERN_MISMATCH_LSB": {"description": "STAT_RX_TEST_PATTERN_MISMATCH_LSB",
"address_offset": "0x0918",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TEST_PATTERN_MISMATCH_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx test pattern mismatch reg0.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates how many mismatches occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set to a 1.
  This output can be used to generate MDIO register as defined in Clause 45.
  This output is pulsed for one clock cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619032,
},
"STAT_RX_TEST_PATTERN_MISMATCH_MSB": {"description": "STAT_RX_TEST_PATTERN_MISMATCH_MSB",
"address_offset": "0x091C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TEST_PATTERN_MISMATCH_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx test pattern mismatch reg1.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates how many mismatches occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set to a 1.
  This output can be used to generate MDIO register as defined in Clause 45.
  This output is pulsed for one clock cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619036,
},
"STAT_FEC_INC_CORRECT_COUNT_LSB": {"description": "STAT_FEC_INC_CORRECT_COUNT_LSB",
"address_offset": "0x0920",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CORRECT_COUNT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat fec inc correct count reg0.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected and corrected a bit errors in the corresponding frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619040,
},
"STAT_FEC_INC_CORRECT_COUNT_MSB": {"description": "STAT_FEC_INC_CORRECT_COUNT_MSB",
"address_offset": "0x0924",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CORRECT_COUNT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat fec inc correct count reg1.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected and corrected a bit errors in the corresponding frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619044,
},
"STAT_FEC_INC_CANT_CORRECT_COUNT_LSB": {"description": "STAT_FEC_INC_CANT_CORRECT_COUNT_LSB",
"address_offset": "0x0928",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CANT_CORRECT_COUNT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat fec inc cant correct count reg0.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619048,
},
"STAT_FEC_INC_CANT_CORRECT_COUNT_MSB": {"description": "STAT_FEC_INC_CANT_CORRECT_COUNT_MSB",
"address_offset": "0x092C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CANT_CORRECT_COUNT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat fec inc cant correct count reg1.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619052,
},
"STAT_TX_MM_STATUS_LSB": {"description": "STAT_TX_MM_STATUS_LSB",
"address_offset": "0x0980",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_STATUS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm status.
  1 - when a preemptable packet (initial fragment or complete packet) is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619136,
},
"STAT_TX_MM_STATUS_MSB": {"description": "STAT_TX_MM_STATUS_MSB",
"address_offset": "0x0984",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_STATUS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm status.
  1 - when a preemptable packet (initial fragment or complete packet) is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619140,
},
"STAT_TX_MM_FRAGMENT_LSB": {"description": "STAT_TX_MM_FRAGMENT_LSB",
"address_offset": "0x0988",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm fragment.
  1 - when a continuation fragment of an preemptable packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619144,
},
"STAT_TX_MM_FRAGMENT_MSB": {"description": "STAT_TX_MM_FRAGMENT_MSB",
"address_offset": "0x098C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm fragment.
  1 - when a continuation fragment of an preemptable packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619148,
},
"STAT_TX_MM_HOLD_LSB": {"description": "STAT_TX_MM_HOLD_LSB",
"address_offset": "0x0990",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_HOLD_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm hold.
  Asserted when ctl_hold_request transitions from 1’b0 to 1’b1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619152,
},
"STAT_TX_MM_HOLD_MSB": {"description": "STAT_TX_MM_HOLD_MSB",
"address_offset": "0x0994",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_HOLD_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm hold.
  Asserted when ctl_hold_request transitions from 1’b0 to 1’b1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619156,
},
"STAT_RX_MM_ASSEMBLY_ERROR_LSB": {"description": "STAT_RX_MM_ASSEMBLY_ERROR_LSB",
"address_offset": "0x0998",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_ASSEMBLY_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm assembly error.
  Asserted when errors are detected during fragment assembly.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619160,
},
"STAT_RX_MM_ASSEMBLY_ERROR_MSB": {"description": "STAT_RX_MM_ASSEMBLY_ERROR_MSB",
"address_offset": "0x099C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_ASSEMBLY_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm assembly error.
  Asserted when errors are detected during fragment assembly.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619164,
},
"STAT_RX_MM_FRAME_SMD_ERROR_LSB": {"description": "STAT_RX_MM_FRAME_SMD_ERROR_LSB",
"address_offset": "0x09A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_SMD_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm frame smd error.
  Asserted when the frame fragment is rejected due to an incorrect SMD value or arriving with SMD-C when no frame is in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619168,
},
"STAT_RX_MM_FRAME_SMD_ERROR_MSB": {"description": "STAT_RX_MM_FRAME_SMD_ERROR_MSB",
"address_offset": "0x09A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_SMD_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm frame smd error.
  Asserted when the frame fragment is rejected due to an incorrect SMD value or arriving with SMD-C when no frame is in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619172,
},
"STAT_RX_MM_FRAME_ASSEMBLY_OK_LSB": {"description": "STAT_RX_MM_FRAME_ASSEMBLY_OK_LSB",
"address_offset": "0x09A8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_ASSEMBLY_OK_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm frame assembly ok.
  Asserted when all the preemptable frame fragments have been assembled and presented.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619176,
},
"STAT_RX_MM_FRAME_ASSEMBLY_OK_MSB": {"description": "STAT_RX_MM_FRAME_ASSEMBLY_OK_MSB",
"address_offset": "0x09AC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_ASSEMBLY_OK_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm frame assembly ok.
  Asserted when all the preemptable frame fragments have been assembled and presented.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619180,
},
"STAT_RX_MM_FRAGMENT_LSB": {"description": "STAT_RX_MM_FRAGMENT_LSB",
"address_offset": "0x09B0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm fragment.
  Asserted when a fragment frame is received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619184,
},
"STAT_RX_MM_FRAGMENT_MSB": {"description": "STAT_RX_MM_FRAGMENT_MSB",
"address_offset": "0x09B4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm fragment.
  Asserted when a fragment frame is received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619188,
},
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 11:04:43.316
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa psu_cortexa53_3], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2025-06-05 11:04:43.427
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json /home/elya/Public/ZCU102-Ethernet-main/2024.2/pl_eth_10g/Software/Vitis/zcu102_platform/hw/pl_eth_10g_wrapper.xsa psu_cortexa53_3], Result: [null, {"axi_dma_0": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354560,
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354564,
},
"MM2S_CURDESC": {"description": "MM2S DMA Current Descriptor Pointer Register",
"address_offset": "0x08",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354568,
},
"MM2S_CURDESC_MSB": {"description": "MM2S DMA Current Descriptor Pointer Register",
"address_offset": "0x0C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354572,
},
"MM2S_TAILDESC": {"description": "MM2S DMA Tail Descriptor Pointer Register",
"address_offset": "0x10",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354576,
},
"MM2S_TAILDESC_MSB": {"description": "MM2S DMA Tail Descriptor Pointer Register",
"address_offset": "0x14",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354580,
},
"SG_CTL": {"description": "Scatter/Gather User and Cache Control Register",
"address_offset": "0x2C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SG_CACHE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Scatter/Gather Cache Control. Values written in this register reflect on the m_axi_sg_arcache and m_axi_sg_awcache signals of the M_AXI_SG interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SG_USER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Scatter/Gather User Control. Values written in this register reflect on the m_axi_sg_aruser and m_axi_sg_awuser signals of the M_AXI_SG interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354604,
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop, DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run, Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354608,
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the \"Complete bit\" already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354612,
},
"S2MM_CURDESC": {"description": "S2MM DMA Current Descriptor Pointer Register",
"address_offset": "0x38",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). 
Buffer Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and so forth. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354616,
},
"S2MM_CURDESC_MSB": {"description": "S2MM DMA Current Descriptor Pointer Register",
"address_offset": "0x3C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Current_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pointer of the current descriptor being worked on. This register must contain a pointer to a valid descriptor prior to writing the TAILDESC_PTR register. Otherwise, undefined results occur. When DMACR.RS is 1, CURDESC_PTR becomes Read Only (RO) and is used to fetch the first descriptor.
When the DMA Engine is running (DMACR.RS=1), CURDESC_PTR registers are updated by AXI DMA to indicate the current descriptor being worked on.
On error detection, CURDESC_PTR is updated to reflect the descriptor associated with the detected error.
Note: The register can only be written to by the CPU when the DMA Engine is Halted (DMACR.RS=0 and DMASR.Halted =1). At all other times, this register is Read Only (RO). Descriptors must be 16 word aligned, that is, 0x00, 0x40, 0x80 and others. Any other alignment has undefined results.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354620,
},
"S2MM_TAILDESC": {"description": "S2MM DMA Tail Descriptor Pointer Register",
"address_offset": "0x40",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel DMACR.RS bit is set to 0 (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. 
Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354624,
},
"S2MM_TAILDESC_MSB": {"description": "S2MM DMA Tail Descriptor Pointer Register",
"address_offset": "0x44",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"Tail_Descriptor_Pointer": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the pause pointer in a descriptor chain. The AXI DMA SG Engine pauses descriptor fetching after completing operations on the descriptor whose current descriptor pointer matches the tail descriptor pointer.
When AXI DMA Channel is not halted (DMASR.Halted = 0), a write by the CPU to the TAILDESC_PTR register causes the AXI DMA SG Engine to start fetching descriptors or restart if it was idle (DMASR.Idle = 1). If it was not idle, writing TAILDESC_PTR has no effect except to reposition the pause point.
If the AXI DMA Channel is halted (DMASR.Halted = 1 and DMACR.RS = 0), a write by the CPU to the TAILDESC_PTR register has no effect except to reposition the pause point.
Note: The software must not move the tail pointer to a location that has not been updated. The software processes and reallocates all completed descriptors (Cmplted = 1), clears the completed bits and then moves the tail pointer. The software must move the pointer to the last descriptor it updated. Descriptors must be 16-word aligned, that is, 0x00, 0x40, 0x80, and so forth. Any other alignment has undefined results. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684354628,
},
},
"axi_gpio_0": {"GPIO_DATA": {"description": "Channel-1 AXI GPIO Data register",
"address_offset": "0x0",
"access": "read-write",
"size": "1",
"interface": "S_AXI",
"fields": {"CH1_DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420096,
},
"GPIO_TRI": {"description": "Channel-1 AXI GPIO 3-State Control register",
"address_offset": "0x4",
"access": "read-write",
"size": "1",
"interface": "S_AXI",
"fields": {"CH1_TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420100,
},
"GPIO2_DATA": {"description": "Channel-2 AXI GPIO Data register",
"address_offset": "0x8",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH2_DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420104,
},
"GPIO2_TRI": {"description": "Channel-2 AXI GPIO 3-State Control register",
"address_offset": "0xC",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH2_TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420108,
},
"GIER": {"description": "Global_Interrupt_Enable register",
"address_offset": "0x11C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"INT_EN": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output
  0 - Disabled
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420380,
},
"IP_IER": {"description": "IP Interrupt Enable register",
"address_offset": "0x128",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH1_INT_EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CH2_INT_EN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 2 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420392,
},
"IP_ISR": {"description": "IP Interrupt Status register",
"address_offset": "0x120",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"CH1_INT_S": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 Interrupt Status
  0 - No Channel 1 input interrupt
  1 - Channel 1 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CH2_INT_S": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 2 Interrupt Status
  0 - No Channel 2 input interrupt
  1 - Channel 2 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684420384,
},
},
"psu_acpu_gic": {},
"psu_adma_0": {},
"psu_adma_1": {},
"psu_adma_2": {},
"psu_adma_3": {},
"psu_adma_4": {},
"psu_adma_5": {},
"psu_adma_6": {},
"psu_adma_7": {},
"psu_afi_0": {},
"psu_afi_1": {},
"psu_afi_2": {},
"psu_afi_3": {},
"psu_afi_4": {},
"psu_afi_5": {},
"psu_afi_6": {},
"psu_ams": {},
"psu_apm_0": {},
"psu_apm_1": {},
"psu_apm_2": {},
"psu_apm_5": {},
"psu_apu": {},
"psu_can_1": {},
"psu_cci_gpv": {},
"psu_cci_reg": {},
"psu_coresight_0": {},
"psu_crf_apb": {},
"psu_crl_apb": {},
"psu_csu_0": {},
"psu_csudma": {},
"psu_ctrl_ipi": {},
"psu_ddr_0": {},
"psu_ddr_1": {},
"psu_ddr_phy": {},
"psu_ddr_qos_ctrl": {},
"psu_ddr_xmpu0_cfg": {},
"psu_ddr_xmpu1_cfg": {},
"psu_ddr_xmpu2_cfg": {},
"psu_ddr_xmpu3_cfg": {},
"psu_ddr_xmpu4_cfg": {},
"psu_ddr_xmpu5_cfg": {},
"psu_ddrc_0": {},
"psu_dp": {},
"psu_dpdma": {},
"psu_efuse": {},
"psu_ethernet_3": {},
"psu_fpd_gpv": {},
"psu_fpd_slcr": {},
"psu_fpd_slcr_secure": {},
"psu_fpd_xmpu_cfg": {},
"psu_fpd_xmpu_sink": {},
"psu_gdma_0": {},
"psu_gdma_1": {},
"psu_gdma_2": {},
"psu_gdma_3": {},
"psu_gdma_4": {},
"psu_gdma_5": {},
"psu_gdma_6": {},
"psu_gdma_7": {},
"psu_gpio_0": {},
"psu_gpu": {},
"psu_i2c_0": {},
"psu_i2c_1": {},
"psu_iou_scntr": {},
"psu_iou_scntrs": {},
"psu_iousecure_slcr": {},
"psu_iouslcr_0": {},
"psu_ipi_0": {},
"psu_lpd_slcr": {},
"psu_lpd_slcr_secure": {},
"psu_lpd_xppu": {},
"psu_lpd_xppu_sink": {},
"psu_mbistjtag": {},
"psu_message_buffers": {},
"psu_ocm": {},
"psu_ocm_ram_0": {},
"psu_ocm_xmpu_cfg": {},
"psu_pcie": {},
"psu_pcie_attrib_0": {},
"psu_pcie_dma": {},
"psu_pcie_high1": {},
"psu_pcie_high2": {},
"psu_pcie_low": {},
"psu_pmu_global_0": {},
"psu_qspi_0": {},
"psu_qspi_linear_0": {},
"psu_r5_0_atcm_global": {},
"psu_r5_0_btcm_global": {},
"psu_r5_1_atcm_global": {},
"psu_r5_1_btcm_global": {},
"psu_r5_tcm_ram_global": {},
"psu_rcpu_gic": {},
"psu_rpu": {},
"psu_rsa": {},
"psu_rtc": {},
"psu_sata": {},
"psu_sd_1": {},
"psu_serdes": {},
"psu_siou": {},
"psu_smmu_gpv": {},
"psu_smmu_reg": {},
"psu_ttc_0": {},
"psu_ttc_1": {},
"psu_ttc_2": {},
"psu_ttc_3": {},
"psu_uart_0": {},
"psu_uart_1": {},
"psu_usb_0": {},
"psu_usb_xhci_0": {},
"psu_wdt_0": {},
"psu_wdt_1": {},
"xxv_ethernet_0": {"GT_RESET_REG": {"description": "GT_RESET_REG",
"address_offset": "0x0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_GT_RESET_ALL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt reset all.
  0 - Normal operation
  1 - Reset the GT
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_GT_RX_RESET": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt rx reset.
  0 - Normal operation
  1 - Reset the GT receiver
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_GT_TX_RESET": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl gt tx reset.
  0 - Normal operation
  1 - Reset the GT transmitter
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616704,
},
"RESET_REG": {"description": "RESET_REG",
"address_offset": "0x0004",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"RX_SERDES_RESET": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "rx serdes reset.
  0 - Normal operation
  1 - Reset the Receiver serdes
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_SERDES_RESET": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "tx serdes reset.
  0 - Normal operation
  1 - Reset the transmitter serdes
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_RESET": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "rx reset.
  0 - Normal operation
  1 - Reset the receiver 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_RESET": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "tx_reset.
  0 - Normal operation
  1 - Reset the transmitter
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616708,
},
"MODE_REG": {"description": "MODE_REG",
"address_offset": "0x0008",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"TICK_REG_MODE_SEL": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "tick reg mode sel.
  1 - tick_reg is used to read the statistics counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LOCAL_LOOPBACK": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "ctl local loopback.
  0 - Normal operation
  1 - places the transceiver into the PMA loopback state. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616712,
},
"CONFIGURATION_TX_REG1": {"description": "CONFIGURATION_TX_REG1",
"address_offset": "0x000C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx enable.
  0 - only IDLEs are transmitted by the core.
  1 - Enables the transmission of data. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_FCS_INS_ENABLE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx fcs ins enable.
  0 - the core does not add FCS to packet.
  1 - the core calculates and adds the FCS to the packet. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_IGNORE_FCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx ignore fcs.
  0 - A packet with bad FCS is being transmitted, it is not binned as good.
  1 - A packet with bad FCS is binned as good.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_LFI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send lfi.
  0 - Normal operation
  1 - Transmit Local Fault Indication (LFI) code word. Takes precedence over Remote Fault Indication (RFI).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_RFI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send rfi.
  0 - Normal operation
  1 - the TX path transmits only RFI code words.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_SEND_IDLE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx send idle.
  0 - Normal operation
  1 - The TX path only transmits Idle code words.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_IPG_VALUE": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "4",
"desc": "ctl tx ipg value.
  This signal can be optionally present.
  The ctl_tx_ipg_value defines the target average minimum Inter Packet Gap (IPG, in bytes) inserted between AXI4-Stream packets.
  Valid values are 8 to 12.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern.
  0 - Normal operation
  1 - Test pattern generation enable for the TX core. A value of 1 enables test mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern enable.
  0 - Normal operation
  1 - Test pattern generation enable for the TX core.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TEST_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx test pattern select.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_DATA_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx data pattern select.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_CUSTOM_PREAMBLE_ENABLE": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_tx_custom_preamble_enable.
  0 - Normal operation
  1 - When it is set, the use of tx_preamblein as a custom preamble instead of inserting a standard preamble. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PRBS31_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "23",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx prbs31 test pattern enable.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616716,
},
"CONFIGURATION_RX_REG1": {"description": "CONFIGURATION_RX_REG1",
"address_offset": "0x0014",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable.
  0 - The RX completes the reception of the current packet (if any), it stops receiving packets by keeping the PCS from decoding incoming data.
  1 - Normal operation 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_DELETE_FCS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx delete fcs.
  0 - the core does not remove the FCS of the incoming packet.
  1 - the core deletes the FCS to the received packet. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_IGNORE_FCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx ignore fcs.
  0 - A packet received with an FCS error is sent with the rx_axis_tuser pin asserted during the last transfer (rx_axis_tlast sampled 1).
  1 - The core does not flag an FCS error at the AXI4-Stream interface.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_PROCESS_LFI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx process lfi.
  0 - the RX core ignores LF control codes coming in from the transceiver. 
  1 - the RX core expects and processes LF control codes coming in from the transceiver.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SFD": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sfd.
  0 - Normal operation
  1 - this input causes the MAC to check the Start of Frame Delimiter of the received frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_PREAMBLE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check preamble.
  0 - Normal operation
  1 - this input causes the MAC to check the preamble of the received frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_FORCE_RESYNC": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx force resync.
  0 - Normal operation
  1 - forces the reset operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TEST_PATTERN": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Test pattern checking enable for the RX core.
  0 - Normal operation
  1 - Enables test mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Test pattern enable for the RX core.
  0 - Normal operation
  1 - Enables test mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_DATA_PATTERN_SELECT": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Data pattern select for RX core.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CUSTOM_PREAMBLE_ENABLE": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_rx_custom_preamble_enable.
  0 - Normal operation
  1 - This signal causes the side band of a packet presented on the AXI4-Stream to be the preamble as it appears on the line. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_PRBS31_TEST_PATTERN_ENABLE": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx prbs31 test pattern enable.
  Corresponds to MDIO register 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616724,
},
"CONFIGURATION_RX_MTU": {"description": "CONFIGURATION_RX_MTU",
"address_offset": "0x0018",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_MIN_PACKET_LEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "ctl rx min packet len.
  Any packet shorter than this value is considered to be undersized.
  If a packet has a size less than this value, the rx_axis_tuser signal is asserted during the rx_axis_tlast asserted cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_MAX_PACKET_LEN": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "15",
"desc": "ctl rx max packet len.
  Any packet longer than this value is considered to be oversized.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616728,
},
"CONFIGURATION_VL_LENGTH_REG": {"description": "CONFIGURATION_VL_LENGTH_REG",
"address_offset": "0x001C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_VL_LENGTH_MINUS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx vl length minus1.
  Normally set to 20479 (decimal). The normal value is equivalent to (16,383 x 5 -4) = 81,916.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_VL_LENGTH_MINUS1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx vl length minus1.
  Normally set to 20,479 (4FFF hex). The normal value is equivalent to (16,383 x 5 -4) = 81,916.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616732,
},
"CONFIGURATION_TSN_REG": {"description": "CONFIGURATION_TSN_REG",
"address_offset": "0x019C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_EN_PREEMPT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl en preempt.
  1 - It allows preemption.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_HOLD_REQUEST": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl hold request.
  1 - preempt traffic is withheld.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_DISABLE_VERIFY": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl disable verify.
  1 - It inhibits the verification process.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RESTART_VERIFY": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl restart verify.
  A 0-to-1 transition will trigger Verification if ctl_disable_verify = 1’b0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_ADDFRAG_SIZE": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "ctl addfrag size.
  Fragment size remaining to enable pre-emption.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_VERIFY_TIME": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "ctl verify time.
  Verification time-out value in milliseconds.
  Integer range 1-128.
  Default is 1 ms.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_VERIFY_LIMIT": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "ctl verify limit.
  Number of times core attempts Verification.
  Integer range 1-15.
  Default is 3.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617116,
},
"TICK_REG": {"description": "TICK_REG",
"address_offset": "0x0020",
"access": "write-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"TICK_REG": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "tick reg.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616736,
},
"CONFIGURATION_REVISION_REG": {"description": "CONFIGURATION_REVISION_REG",
"address_offset": "0x0024",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"MAJOR_REV": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "major revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MINOR_REV": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "minor revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PATCH_REV": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "patch revision.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616740,
},
"CONFIGURATION_TX_TEST_PAT_SEED_A_LSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_A_LSB",
"address_offset": "0x0028",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_A_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx test pattern seed a.
  Corresponds to MDIO registers 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616744,
},
"CONFIGURATION_TX_TEST_PAT_SEED_A_MSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_A_MSB",
"address_offset": "0x002C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_A_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "ctl tx test pattern seed a.
  Corresponds to MDIO registers 3.34 through to 3.37 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616748,
},
"CONFIGURATION_TX_TEST_PAT_SEED_B_LSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_B_LSB",
"address_offset": "0x0030",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_B_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx test pattern seed b.
  Corresponds to MDIO registers 3.38 through to 3.41 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616752,
},
"CONFIGURATION_TX_TEST_PAT_SEED_B_MSB": {"description": "CONFIGURATION_TX_TEST_PAT_SEED_B_MSB",
"address_offset": "0x0034",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_TEST_PATTERN_SEED_B_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "ctl tx test pattern seed b.
  Corresponds to MDIO registers 3.38 through to 3.41 as defined in Clause 45.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616756,
},
"CONFIGURATION_1588_REG": {"description": "CONFIGURATION_1588_REG",
"address_offset": "0x0038",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PTP_1STEP_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx ptp 1step enable.
  1 - this bit enables 1-step operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_PTP_TRANSPCLK_MODE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl ptp transpclk mode.
  1 - This input places the timestamping  logic into transparent clock mode. In this mode, the system timer input is interpreted as a correction value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PTP_LATENCY_ADJUST": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "11",
"desc": "ctl tx ptp latency adjust.
  This bus can be used to adjust the 1-step TX timestamp with respect to the 2-step timestamp.
  The units of bits [10:3] are nanoseconds and bits [2:0] are fractional nanoseconds.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616760,
},
"CONFIGURATION_TX_FLOW_CONTROL_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REG1",
"address_offset": "0x0040",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "TX pause enable signal.
  This input is used to enable the processing of the pause quanta for the corresponding priority.
  This signal gates transmission of pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616768,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG1",
"address_offset": "0x0044",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer0.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer1.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616772,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG2": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG2",
"address_offset": "0x0048",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER2": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer2.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER3": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer3.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616776,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG3": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG3",
"address_offset": "0x004C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER4": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer4.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER5": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer5.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616780,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG4": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG4",
"address_offset": "0x0050",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER6": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer6.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_REFRESH_TIMER7": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer7.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616784,
},
"CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG5": {"description": "CONFIGURATION_TX_FLOW_CONTROL_REFRESH_REG5",
"address_offset": "0x0054",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_REFRESH_TIMER8": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause refresh timer8.
  This bus sets the retransmission time of pause packets for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_refresh_timer[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616788,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG1": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG1",
"address_offset": "0x0058",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta0.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta1.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616792,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG2": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG2",
"address_offset": "0x005C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA2": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta2.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA3": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta3.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616796,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG3": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG3",
"address_offset": "0x0060",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA4": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta4.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA5": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta5.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616800,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG4": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG4",
"address_offset": "0x0064",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA6": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta6.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_PAUSE_QUANTA7": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta7.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616804,
},
"CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG5": {"description": "CONFIGURATION_TX_FLOW_CONTROL_QUANTA_REG5",
"address_offset": "0x0068",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_PAUSE_QUANTA8": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx pause quanta8.
  These buses indicate the quanta to be transmitted for each of the eight priorities in priority-based pause operation and the global pause operation.
  The value for ctl_tx_pause_quanta[8] is used for global pause operation. All other values are used for priority pause operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616808,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_ETYPE_OP_REG": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_ETYPE_OP_REG",
"address_offset": "0x006C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ETHERTYPE_PPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx ethertype ppp.
  Ethertype for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_OPCODE_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx opcode ppp.
  Opcode for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616812,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_ETYPE_OP_REG": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_ETYPE_OP_REG",
"address_offset": "0x0070",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_ETHERTYPE_GPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx ethertype gpp.
  Ethertype for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_OPCODE_GPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx opcode gpp.
  Opcode for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616816,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_LSB",
"address_offset": "0x0074",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_GPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx da gpp.
  Destination address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616820,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_DA_REG_MSB",
"address_offset": "0x0078",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_GPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx da gpp.
  Destination address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616824,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_LSB",
"address_offset": "0x007C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_GPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx sa gpp.
  Source address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616828,
},
"CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_GPP_SA_REG_MSB",
"address_offset": "0x0080",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_GPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx sa gpp.
  Source address for transmitting global pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616832,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_LSB",
"address_offset": "0x0084",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_PPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx da ppp.
  Destination address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616836,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_DA_REG_MSB",
"address_offset": "0x0088",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_DA_PPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx da ppp.
  Destination address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616840,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_LSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_LSB",
"address_offset": "0x008C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_PPP_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx sa ppp.
  Source address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616844,
},
"CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_MSB": {"description": "CONFIGURATION_TX_FLOW_CONTROL_PPP_SA_REG_MSB",
"address_offset": "0x0090",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_SA_PPP_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl tx sa ppp.
  Source address for transmitting priority pause packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616848,
},
"CONFIGURATION_RX_FLOW_CONTROL_REG1": {"description": "CONFIGURATION_RX_FLOW_CONTROL_REG1",
"address_offset": "0x0094",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "Rx pause enable.
  This input is used to enable the processing of the pause quanta for the corresponding priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_FORWARD_CONTROL": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx forward control.
  0 - causes core to drop control packets.
  1 - Indicates that the core forwards control packets. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_GCP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable gcp.
  1 - Enables global control packet processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_PCP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable pcp.
  1 - Enables priority control packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_GPP": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable gpp.
  1 - Enables global pause packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ENABLE_PPP": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx enable ppp.
  1 - Enables priority pause packet processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ACK": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ack.
  0 - ctl_rx_pause_ack[8:0] is not used.
  1 - the core uses the ctl_rx_pause_ack[8:0] bus for pause processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616852,
},
"CONFIGURATION_RX_FLOW_CONTROL_REG2": {"description": "CONFIGURATION_RX_FLOW_CONTROL_REG2",
"address_offset": "0x0098",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_CHECK_MCAST_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast gcp.
  0 - Normal operation
  1 - Enables global control multicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_GCP": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast gcp.
  0 - Normal operation
  1 - Enables global control unicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_GCP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa gcp.
  0 - Normal operation
  1 - Enables global control source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_GCP": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype gcp.
  0 - Normal operation
  1 - Enables global control ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_GCP": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode gcp.
  0 - Normal operation
  1 - Enables global control opcodeprocessing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_PCP": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast pcp.
  0 - Normal operation
  1 - Enables priority control multicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_PCP": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast pcp.
  0 - Normal operation
  1 - Enables priority control unicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_PCP": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa pcp.
  0 - Normal operation
  1 - Enables priority control source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_PCP": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype pcp.
  0 - Normal operation
  1 - Enables priority control ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_PCP": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode pcp.
  0 - Normal operation
  1 - Enables priority control opcode processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_GPP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast gpp.
  0 - Normal operation
  1 - Enables global pause multicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_GPP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast gpp.
  0 - Normal operation
  1 - Enables global pause unicast destination address processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_GPP": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa gpp.
  0 - Normal operation
  1 - Enables global pause source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_GPP": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype gpp.
  0 - Normal operation
  1 - Enables global pause ethertype processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_GPP": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode gpp.
  0 - Normal operation
  1 - Enables global pause opcode processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_MCAST_PPP": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check mcast ppp.
  0 - Normal operation
  1 - Enables priority pause multicast destination address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_UCAST_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check ucast ppp.
  0 - Normal operation
  1 - Enables priority pause unicast destination address processing. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_SA_PPP": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check sa ppp.
  0 - Normal operation
  1 - Enables priority pause source address processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_ETYPE_PPP": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check etype ppp.
  0 - Normal operation
  1 - Enables priority pause ethertype processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_CHECK_OPCODE_PPP": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx check opcode ppp.
  0 - Normal operation
  1 - Enables priority pause opcode processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616856,
},
"CONFIGURATION_RX_FLOW_CONTROL_PPP_ETYPE_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_PPP_ETYPE_OP_REG",
"address_offset": "0x009C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_PPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype ppp.
  Ethertype field for priority pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_PPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode ppp.
  Priority pause opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616860,
},
"CONFIGURATION_RX_FLOW_CONTROL_GPP_ETYPE_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GPP_ETYPE_OP_REG",
"address_offset": "0x00A0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_GPP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype gpp.
  Ethertype field for global pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_GPP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode gpp.
  Global pause opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616864,
},
"CONFIGURATION_RX_FLOW_CONTROL_GCP_PCP_TYPE_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GCP_PCP_TYPE_REG",
"address_offset": "0x00A4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_ETYPE_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype gcp.
  Ethertype field for global control processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_ETYPE_PCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx etype pcp.
  Ethertype field for priority control processing
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616868,
},
"CONFIGURATION_RX_FLOW_CONTROL_PCP_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_PCP_OP_REG",
"address_offset": "0x00A8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_OPCODE_MIN_PCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode min pcp.
  Minimum priority control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_MAX_PCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode max pcp.
  Maximum priority control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616872,
},
"CONFIGURATION_RX_FLOW_CONTROL_GCP_OP_REG": {"description": "CONFIGURATION_RX_FLOW_CONTROL_GCP_OP_REG",
"address_offset": "0x00AC",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_OPCODE_MIN_GCP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode min gcp.
  Minimum global control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_OPCODE_MAX_GCP": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx opcode max gcp.
  Maximum global control opcode value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616876,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_LSB",
"address_offset": "0x00B0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_UCAST_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause da ucast.
  Unicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616880,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG1_MSB",
"address_offset": "0x00B4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_UCAST_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause da ucast.
  Unicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616884,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_LSB",
"address_offset": "0x00B8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_MCAST_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause da mcast.
  Multicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616888,
},
"CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_DA_REG2_MSB",
"address_offset": "0x00BC",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_DA_MCAST_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause da mcast.
  Multicast destination address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616892,
},
"CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_LSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_LSB",
"address_offset": "0x00C0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_SA_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx pause sa.
  Source address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616896,
},
"CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_MSB": {"description": "CONFIGURATION_RX_FLOW_CONTROL_SA_REG1_MSB",
"address_offset": "0x00C4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_PAUSE_SA_REG1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "ctl rx pause sa.
  Source address for pause processing.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616900,
},
"CONFIGURATION_RSFEC_REG": {"description": "CONFIGURATION_RSFEC_REG",
"address_offset": "0x00D0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RSFEC_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec enable.
  0 - Normal operation
  1 - Enable RS-FEC function.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RSFEC_CONSORTIUM_25G": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec consortium 25g.
  This signal switches between IEEE Clause 108 and 25G Ethernet Consortium modes.
  0 - IEEE 802.3by mode.
  1 - 25G Consortium specification mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_RSFEC_ENABLE_INDICATION": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx rsfec enable indication.
  0 - Bypass the error indication function (see IEEE Std 802.3by section 91.5.3.3).
  1 - Decoder indicates errors to the PCS sublayer
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_RSFEC_ENABLE_CORRECTION": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx rsfec enable correction.
  0 - Decoder performs error detection without error correction (see IEEE 802.3by Clause 91.5.3.3).
  1 - Decoder also performs error correction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RSFEC_IEEE_ERROR_INDICATION_MODE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rsfec ieee error indication mode.
  0 - If ctl_rx_rsfec_enable_correction and ctl_rx_rsfec_enable_indication are set to zero, the RS decoder is bypassed.
  1 - Core conforms to the IEEE RS-FEC specification.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616912,
},
"CONFIGURATION_FEC_REG": {"description": "CONFIGURATION_FEC_REG",
"address_offset": "0x00D4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_FEC_RX_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec rx enable.
  0 - Normal operation
  1 - Enable the clause 74 FEC decoding of the received data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_FEC_TX_ENABLE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec tx enable.
  0 - Normal operation
  1 - Enable the clause 74 FEC encoding on the transmitted data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_FEC_ENABLE_ERROR_TO_PCS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl fec enable error to pcs.
  0 - Normal operation
  1 - Clause 74 FEC enable error to PCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616916,
},
"CONFIGURATION_AN_CONTROL_REG1": {"description": "CONFIGURATION_AN_CONTROL_REG1",
"address_offset": "0x00E0",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AUTONEG_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl autoneg enable.
  0 - Normal operation
  1 - Enable signal for auto-negotiation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AUTONEG_BYPASS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl autoneg bypass.
  0 - Normal operation
  1 - Auto-negotiation is turned off, but the PCS is connected to the output to allow operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"_CTL_AN_NONCE_SEED": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "8",
"desc": "ctl an nonce seed.
  8-bit seed to initialize the nonce field Polynomial generator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_PSEUDO_SEL": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an pseudo sel.
  Selects the polynomial generator  for the bit 49 random bit generator.
  0 - The polynomial is x7+x3+1.
  1 - The polynomial is x7+x6+1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RESTART_NEGOTIATION": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl restart negotiation.
  This input is used to trigger a restart of the auto-negotiation, regardless of what state the circuit is currently in.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_LOCAL_FAULT": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an local fault.
  This input signal is used to set the local_fault bit of the transmit link codeword.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616928,
},
"CONFIGURATION_AN_CONTROL_REG2": {"description": "CONFIGURATION_AN_CONTROL_REG2",
"address_offset": "0x00E4",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AN_PAUSE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an pause.
  This is used to set the PAUSE bit, (C0), of the transmit link codeword.
  This signal might not be present if the core does not support pause.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ASMDIR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an asmdir.
  This is used to set the ASMDIR bit, (C1), of the transmit link codeword.
  This signal might not be present if the core does not support pause.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_10G_REQUEST": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 10g request.
  This signal is used to signal the link partner that the local station is requesting clause 74 FEC on the 10Gb/s lane protocols.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_ABILITY_OVERRIDE": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec ability override.
  1 - Then the FEC ability bit in the transmit link codeword is cleared.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_CL91_FEC_REQUEST": {"access": "read-write",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an cl91 fec request.
  This bit is used to request clause 91 FEC.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_CL91_FEC_ABILITY": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an cl91 fec ability.
  This bit is used to indicate clause 91 FEC ability.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_25G_RS_REQUEST": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 25g rs request.
  This signal is used to signal the link partner that the local station is requesting rs FEC (clause 91 or 108) on the 25Gb/s lane protocols.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_FEC_25G_BASER_REQUEST": {"access": "read-write",
"bit_offset": "21",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an fec 25g baser request.
  Indicates the baser FEC request.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616932,
},
"CONFIGURATION_AN_ABILITY": {"description": "CONFIGURATION_AN_ABILITY",
"address_offset": "0x00F8",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_AN_ABILITY_1000BASE_KX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 1000base kx.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_10GBASE_KX4": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 10gbase kx4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_10GBASE_KR": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 10gbase kr.  
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_40GBASE_KR4": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 40gbase kr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_40GBASE_CR4": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 40gbase cr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_CR10": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl_an_ability_100gbase_cr10. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_KP4": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase kp4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_KR4": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase kr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_100GBASE_CR4": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 100gbase cr4. 
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KRCR_S": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase krcr s.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KRCR": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase krcr.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_KR1": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase kr1.
   0 - Indicates that the interface advertises that it doesn't supports the protocol.
   1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_25GBASE_CR1": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 25gbase cr1.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_50GBASE_KR2": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 50gbase kr2.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_AN_ABILITY_50GBASE_CR2": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "ctl an ability 50gbase cr2.
  0 - Indicates that the interface advertises that it doesn't supports the protocol.
  1 - Indicates that the interface advertises that it supports the protocol.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616952,
},
"CONFIGURATION_LT_CONTROL_REG1": {"description": "CONFIGURATION_LT_CONTROL_REG1",
"address_offset": "0x0100",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_TRAINING_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt training enable.
  0 - When link training is disabled, all PCS lanes function in mission mode.
  1 - Enabled link training 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_RESTART_TRAINING": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt restart training.
  0 - Normal operation
  1 - This signal triggers a restart of link training regardless of the current state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616960,
},
"CONFIGURATION_LT_TRAINED_REG": {"description": "CONFIGURATION_LT_TRAINED_REG",
"address_offset": "0x0104",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_RX_TRAINED": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt rx trained.
  1 - Indicates that the receiver finite impulse response (FIR) filter coefficients have all been set, and that the receiver portion of training is complete. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616964,
},
"CONFIGURATION_LT_PRESET_REG": {"description": "CONFIGURATION_LT_PRESET_REG",
"address_offset": "0x0108",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_PRESET_TO_TX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt preset to tx.
  0 - Normal operation. Doesn't set any value the preset bit.
  1 - set the value of the preset bit that is transmitted to the link partner in the control block of the training frame. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616968,
},
"CONFIGURATION_LT_INIT_REG": {"description": "CONFIGURATION_LT_INIT_REG",
"address_offset": "0x010C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_INITIALIZE_TO_TX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl lt initialize to tx.
  To set the value of the initialize bit that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616972,
},
"CONFIGURATION_LT_SEED_REG0": {"description": "CONFIGURATION_LT_SEED_REG0",
"address_offset": "0x0110",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_PSEUDO_SEED0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "11",
"desc": "ctl lt pseudo seed0.
  This 11-bit signal seeds the training pattern generator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684616976,
},
"CONFIGURATION_LT_COEFFICIENT_REG0": {"description": "CONFIGURATION_LT_COEFFICIENT_REG0",
"address_offset": "0x0130",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_LT_K_P1_TO_TX0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt k p1 to tx0.
  This 2-bit field is used to set the value of the k+1 coefficient update field that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_K0_TO_TX0": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "ctl ltk0 to tx0.
  This 2-bit field is used to set the value of the k0 coefficient update field that is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_K_M1_TO_TX0": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt k m1 to tx0.
  This 2-bit field is used to set the value of the k-1 coefficient update field that  is transmitted to the link partner in the control block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT_P1_TO_TX0": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt stat p1 to tx0.
  This 2-bit field is used to set the value of the k+1 coefficient update status that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT0_TO_TX0": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "ctl lt stat0 to tx0.
  This 2-bit field is used to set the value of the k0 coefficient update status that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_LT_STAT_M1_TO_TX0": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "ctl_lt_stat_m1_to_tx0.
  This 2-bit field is used to set the value of the k-1 coefficient update status  that is transmitted to the link partner in the status block of the training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617008,
},
"USER_REG_0": {"description": "USER_REG_0",
"address_offset": "0x0134",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"USER_REG0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "user register0.
  User-defined signal from the AXI4-Reg map user_reg0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617012,
},
"SWITCH_CORE_SPEED_REG": {"description": "SWITCH_CORE_SPEED_REG",
"address_offset": "0x0138",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"AXI_CTL_CORE_MODE_SWITCH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "axi ctl core mode switch.
  0 - Normal operation
  1 - Enables the mode switch line rate from 10G and 25G and vice versa.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617016,
},
"CONFIGURATION_1588_32BIT_REG": {"description": "CONFIGURATION_1588_32BIT_REG",
"address_offset": "0x013C",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_LAT_ADJ_ENB": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx lat adj enb.
  1 - The delay computation on the TX path takes into account the value provided by the ctl_tx_latency_0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_LAT_ADJ_ENB": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx lat adj enb
  1 - The delay computation on the RX path takes into account the value provided by the ctl_rx_latency_0 register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_TX_TIMSTAMP_ADJ_ENB": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "ctl tx timstamp adj enb.
  1 - The delay computation on the TX path takes into account the value obtained from GT DRP read for latency of the TX gearbox FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_RX_TIMSTAMP_ADJ_ENB": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "ctl rx timstamp adj enb.
  1 - The delay computation on the RX path takes into account the value obtained from the GT DRP read for latency of the RX gearbox FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_CORE_SPEED": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "ctl core speed.
  This signal indicates the speed with which the core is working.
  0 - 25G
  1 - 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617020,
},
"TX_CONFIGURATION_1588_REG": {"description": "TX_CONFIGURATION_1588_REG",
"address_offset": "0x0140",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_TX_LATENCY": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl tx latency
  This is the static latency of the TX path of the core including the GT.
  The MSB 16 bits indicate the delay in ns and the LSB 16 bits indicate sub ns values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617024,
},
"RX_CONFIGURATION_1588_REG": {"description": "RX_CONFIGURATION_1588_REG",
"address_offset": "0x0144",
"access": "read-write",
"size": "1",
"interface": "s_axi_0",
"fields": {"CTL_RX_LATENCY": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "ctl rx latency
  This is the static latency of the RX path of the core including the GT.
  The MSB 16 bits indicate the delay in ns and the LSB 16 bits indicate sub ns values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617028,
},
"STAT_TX_STATUS_REG1": {"description": "STAT_TX_STATUS_REG1",
"address_offset": "0x0400",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx local fault.
  0 - Normal operation
  1 - Indicates the receive decoder state machine is in the TX_INIT state. This output is level sensitive. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_GMII_FIFO_OVF_1H_R_OUT": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx gmii fifo ovf 1h r out.
  TX FIFO overflow.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_GMII_FIFO_UNF_1H_R_OUT": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx gmii fifo unf 1h r out.
  TX FIFO underflow.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_BAD_PARITY": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx bad parity.
  Increment on any clock cycle where the  user-generated parity is calculated as  incorrect by the Tx parity checking logic.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617728,
},
"STAT_RX_STATUS_REG1": {"description": "STAT_RX_STATUS_REG1",
"address_offset": "0x0404",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_HI_BER": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx hi ber.
  High Bit Error Rate Indicator.
  1 - the BER is too high as defined by IEEE Std. 802.3. Corresponds to MDIO register bit 3.32.1 as defined in Clause 49.2.14.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_REMOTE_FAULT": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx remote fault.
   0 - Remote fault condition does not exist.
   1 - It indicates a remote fault condition was detected. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx local fault.
  1 - indicates the receive decoder state machine is in the RX_INIT state.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_INTERNAL_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx internal local fault.
  1 - when an internal local fault is generated due to test pattern generation or high bit error rate. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_RECEIVED_LOCAL_FAULT": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx received local fault.
  0 - Normal operation
  1 - when enough local fault words are received from the link partner to trigger a fault condition as specified by the IEEE fault state machine.
      Remains High as long as the fault condition persists.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_BAD_PREAMBLE": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx bad preamble.
  0 - Indicates that an invalid preamble was not received.
  1 - Indicates that an invalid preamble was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_BAD_SFD": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx bad sfd.
  Increment bad SFD.
  0 - Indicates that an invalid SFD was not received.
  1 - Indicates that an invalid SFD was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_GOT_SIGNAL_OS": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx got signal os.
  Signal OS indication.
  1 - It indicates that a signal OS word was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617732,
},
"STAT_STATUS_REG1": {"description": "STAT_STATUS_REG1",
"address_offset": "0x0408",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FIFO_ERROR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx fifo error.
  Transmit clock compensation FIFO error indicator.
  0 - Normal operation
  1 - Indicates the clock compensation FIFO under or overflowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_PTP_FIFO_READ_ERROR": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx ptp fifo read error.
  Transmit PTP FIFO read error.
  0 - Normal operation
  1 - Indicates that an error occurred during the PTP Tag read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_TX_PTP_FIFO_WRITE_ERROR": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx ptp fifo write error.
  Transmit PTP FIFO write error.
  0 - Normal operation
  1 - Indicates that an error occurred during the PTP Tag write. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_FIFO_ERROR": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx fifo error.
  Receive clock compensation FIFO error indicator.
  0 - Normal operation
  1 - Indicates the clock compensation FIFO under or overflowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617736,
},
"STAT_RX_BLOCK_LOCK_REG": {"description": "STAT_RX_BLOCK_LOCK_REG",
"address_offset": "0x040C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BLOCK_LOCK": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx block lock
  Block lock status.
  1 - Indicates that block lock is achieved as defined in Clause 49.2.14 and MDIO register 3.32.0
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617740,
},
"STAT_RX_RSFEC_STATUS_REG": {"description": "STAT_RX_RSFEC_STATUS_REG",
"address_offset": "0x043C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_LANE_ALIGNMENT_STATUS": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx rsfec lane alignment status.
  1 - Indicates that the RX RS-FEC block has achieved alignment on the data from the transceiver. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_RSFEC_HI_SER": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx rsfec hi ser.
  Indicates high symbol error.
  1 - If the number of RS-FEC symbol errors in a window of 8192 codewords exceeds the threshold of 417.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617788,
},
"STAT_RX_FEC_STATUS_REG": {"description": "STAT_RX_FEC_STATUS_REG",
"address_offset": "0x0448",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_RX_LOCK": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat fec rx lock.
  1 - while the ctl_fec_rx_enable is asserted when the FEC decoder detects the frame boundary.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_FEC_LOCK_ERROR": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat fec lock error.
  1 - If the FEC decoder has been unable to detect the frame boundary after about 5 ms. It is cleared when the frame boundary is detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617800,
},
"STAT_TX_RSFEC_STATUS_REG": {"description": "STAT_TX_RSFEC_STATUS_REG",
"address_offset": "0x044C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_RSFEC_LANE_ALIGNMENT_STATUS": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat tx rsfec lane alignment status.
  1 - Indicates that the TX RS-FEC block has achieved alignment on the incoming PCS data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617804,
},
"STAT_TSN_REG": {"description": "STAT_TSN_REG",
"address_offset": "0x049C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_VERIFY": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat tx mm verify.
  Indicates verification status.
  0 - Indicates that verification is complete.
  1 - Indicates that verification is successful.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617884,
},
"STAT_TX_FLOW_CONTROL_REG1": {"description": "STAT_TX_FLOW_CONTROL_REG1",
"address_offset": "0x0450",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_VALID": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "stat tx pause valid.
  If a bit of this bus is set to 1, the core has transmitted a pause packet. If bit[8] is set to 1, a global pause packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617808,
},
"STAT_RX_FLOW_CONTROL_REG1": {"description": "STAT_RX_FLOW_CONTROL_REG1",
"address_offset": "0x0454",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REQ": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "9",
"desc": "stat rx pause req.
  Pause request signal.
  When the RX receives a valid pause frame, it sets the corresponding bit of this bus to a 1 and keep it at 1 until the pause packet has been processed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_RX_PAUSE_VALID": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "9",
"desc": "stat rx pause valid.
  This bus indicates that a pause packet was received and the associated quanta on the stat_rx_pause_quanta[8:0][15:0] bus is valid and must be used for pause processing. If an 802.3x Ethernet MAC Pause packet is received, bit[8] is set to 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617812,
},
"STAT_AN_STATUS": {"description": "STAT_AN_STATUS",
"address_offset": "0x0458",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_FEC_ENABLE": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat an fec enable.
  Used to enable the use of clause 74 FEC on the link.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_RS_FEC_ENABLE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat an rs fec enable.
  Used to enable the use of clause 91 FEC on the link.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_AUTONEG_COMPLETE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat an autoneg complete.
  1 - Indicates the auto-negotiation is complete and rx link status from the PCS has been received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_PARALLEL_DETECTION_FAULT": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "stat an parallel detection fault.
  1 - Indicated a parallel detection fault during auto-negotiation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_TX_PAUSE_ENABLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat an tx pause enable.
  1 - Enable station-to-station (global) pause packet generation in the transmit path to control data flow in the receive path.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_RX_PAUSE_ENABLE": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat an rx pause enable.
  1 - Enable station-to-station (global) pause packet interpretation in the receive path, in order to control data flow from the transmitter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_VALID": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability valid.
  1 - Indicates when all of the link partner advertisements become valid.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_AUTONEG_ABLE": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp autoneg able.
  1 - Indicates that the link partner is able to perform auto-negotiation.
      It becomes valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_PAUSE": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp pause.
  1 - Indicates the advertised value of the PAUSE bit, (C0), in the receive link codeword from the link partner.
      It becomes valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ASM_DIR": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp asm dir.
  1 - Indicates the advertised value of the ASMDIR bit, (C1), in the receive link codeword from the link partner.
      It becomes valid when the output signal  stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_RF": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp rf.
  1 - Indicates link partner remote fault.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_10G_ABILITY": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 10g ability.
  1 - Indicates the clause 74 FEC ability associated with 10Gb/s lane protocols that is being advertised by the link partner.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_10G_REQUEST": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 10g request.
  1 - Indicates that the link partner is requesting that the clause 74 FEC be used on the 10Gb/s lane protocols.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_EXTENDED_ABILITY_VALID": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp extended ability valid.
  1 - It indicates that the detected extended abilities are valid.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_EXTENDED_FEC": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "4",
"desc": "stat an lp ability extended fec.
  Indicates the extended FEC abilities as defined in Schedule 3.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_25G_RS_REQUEST": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 25g rs request.
  1 - Indicates that the link partner is requesting the clause 91 (or 108) rs FEC be used for the 25gb/s lane protocols. 
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_FEC_25G_BASER_REQUEST": {"access": "read-only",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp fec 25g baser request.
  1 - Indicates that the link partner is requesting the clause 74 FEC be used for the 25Gb/s lane base-r protocols.
      It becomes valid when the output signal stat_an_lp_ability_valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617816,
},
"STAT_AN_ABILITY": {"description": "STAT_AN_ABILITY",
"address_offset": "0x045C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_LP_ABILITY_1000BASE_KX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 1000base kx.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_10GBASE_KX4": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 10gbase kx4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_10GBASE_KR": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 10gbase kr.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_40GBASE_KR4": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 40gbase kr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_40GBASE_CR4": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 40gbase cr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_CR10": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase cr10.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_KP4": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase kp4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_KR4": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase kr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_100GBASE_CR4": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 100gbase cr4.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KRCR_S": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase krcr_s.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KRCR": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase krcr.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_KR1": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase kr1.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_25GBASE_CR1": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 25gbase cr1.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_50GBASE_KR2": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 50gbase kr2.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LP_ABILITY_50GBASE_CR2": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "stat an lp ability 50gbase cr2.
  1 - Indicates that the protocol is advertised as supported by the link partner.
      They all become valid when the output signal stat_AN_lp_Ability_Valid is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617820,
},
"STAT_AN_LINK_CTL": {"description": "STAT_AN_LINK_CTL",
"address_offset": "0x0460",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_AN_LINK_CNTL_1000BASE_KX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 1000base kx.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_10GBASE_KX4": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 10gbase kx4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_10GBASE_KR": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 10gbase kr.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_40GBASE_KR4": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 40gbase kr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_40GBASE_CR4": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 40gbase cr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_CR10": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase cr10.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_KP4": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase kp4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_KR4": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase kr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_100GBASE_CR4": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 100gbase cr4.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KRCR_S": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase krcr_s.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KRCR": {"access": "read-only",
"bit_offset": "20",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase krcr.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_KR1": {"access": "read-only",
"bit_offset": "22",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase kr1.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_25GBASE_CR1": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 25gbase cr1.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_50GBASE_KR2": {"access": "read-only",
"bit_offset": "26",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 50gbase kr2.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_AN_LINK_CNTL_50GBASE_CR2": {"access": "read-only",
"bit_offset": "28",
"bit_range": "",
"bit_width": "2",
"desc": "stat an link cntl 50gbase cr2.
  Link Control outputs from the auto-negotiation controller for the various Ethernet protocols. 
  Settings are as follows:
    00 - DISABLE; PCS is disconnected
    01 - SCAN_FOR_CARRIER; RX is connected to PCS
    11 - ENABLE; PCS is connected for mission mode operation
    10 - not used
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617824,
},
"STAT_LT_STATUS_REG1": {"description": "STAT_LT_STATUS_REG1",
"address_offset": "0x0464",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_INITIALIZE_FROM_RX": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt initialize from rx.
  This signal reflects the value of the initialize control bit received in the control block from the link partner.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_PRESET_FROM_RX": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt preset from rx.
  This signal reflects the value of the preset control bit received in the control block from the link partner.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617828,
},
"STAT_LT_STATUS_REG2": {"description": "STAT_LT_STATUS_REG2",
"address_offset": "0x0468",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_TRAINING": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt training.
  1 - Indicates when the respective link training state machine is performing link training.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_FRAME_LOCK": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt frame lock.
  1 - Asserted when link training has begun.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617832,
},
"STAT_LT_STATUS_REG3": {"description": "STAT_LT_STATUS_REG3",
"address_offset": "0x046C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_SIGNAL_DETECT": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt signal detect.
  1 - Indicates when the respective link training state machine has entered the SEND_DATA state, in which normal PCS operation can resume.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_TRAINING_FAIL": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt training fail.
  1 - Asserted during link training if the corresponding link training state machine detects a time-out during the training period.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617836,
},
"STAT_LT_STATUS_REG4": {"description": "STAT_LT_STATUS_REG4",
"address_offset": "0x0470",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_RX_SOF": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat lt rx sof.
  1 - For 1 RX SerDes clock cycle to indicate the start of the link training frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617840,
},
"STAT_LT_COEFFICIENT0_REG": {"description": "STAT_LT_COEFFICIENT0_REG",
"address_offset": "0x0474",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_LT_K_P1_FROM_RX0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k p1 from rx0.
  This 2-bit field indicates the update control bits for the k+1 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_K0_FROM_RX0": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k0 from rx0.
  This 2-bit field indicates the update control bits for the k0 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_K_M1_FROM_RX0": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt k m1 from rx0.
  This 2-bit field indicates the update control bits for the k-1 coefficient, as received from the link partner in the control block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT_P1_FROM_RX0": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat p1 from rx0.
  This 2-bit field indicates the update status bits for the k+1 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT0_FROM_RX0": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat0 from rx0.
  This 2-bit field indicates the update status bits for the k0 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STAT_LT_STAT_M1_FROM_RX0": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "stat lt stat m1 from rx0.
  This 2-bit field indicates the update status bits for the k-1 coefficient, as received from the link partner in the status block.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617844,
},
"STAT_RX_VALID_CTRL_CODE": {"description": "STAT_RX_VALID_CTRL_CODE",
"address_offset": "0x0494",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VALID_CTRL_CODE": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat rx valid ctrl code.
  1 - Indicates that a PCS block with a valid control code was received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617876,
},
"STAT_CORE_SPEED_REG": {"description": "STAT_CORE_SPEED_REG",
"address_offset": "0x0498",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CORE_SPEED": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "stat core speed.
  0 - Standalone 25G
  1 - Standalone 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUNTIME_SWITCHABLE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "runtime switchable.
  0 - Runtime Switchable 25G
  1 - Runtime Switchable 10G
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617880,
},
"STATUS_CYCLE_COUNT_LSB": {"description": "STATUS_CYCLE_COUNT_LSB",
"address_offset": "0x0500",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CYCLE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat cycle reg0.
  Contains a count of the number of RX core clock cycles between TICK_REG writes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617984,
},
"STATUS_CYCLE_COUNT_MSB": {"description": "STATUS_CYCLE_COUNT_MSB",
"address_offset": "0x0504",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_CYCLE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat cycle reg1.
  Contains a count of the number of RX core clock cycles between TICK_REG writes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684617988,
},
"STAT_RX_FRAMING_ERR_LSB": {"description": "STAT_RX_FRAMING_ERR_LSB",
"address_offset": "0x0648",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAMING_ERR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx framing err reg0.
  RX sync header bits framing error.
  Each PCS Lane has a four-bit bus that indicates how many sync header errors were received for that PCS Lane.
  The value of the bus is only valid when the corresponding stat_rx_framing_err_valid is a 1.
  The values on these buses can be updated at any time and are intended to be used as increment values for sync header error counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618312,
},
"STAT_RX_FRAMING_ERR_MSB": {"description": "STAT_RX_FRAMING_ERR_MSB",
"address_offset": "0x064C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAMING_ERR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx framing err reg1.
  RX sync header bits framing error.
  Each PCS Lane has a four-bit bus that indicates how many sync header errors were received for that PCS Lane.
  The value of the bus is only valid when the corresponding stat_rx_framing_err_valid is a 1.
  The values on these buses can be updated at any time and are intended to be used as increment values for sync header error counters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618316,
},
"STAT_RX_BAD_CODE_LSB": {"description": "STAT_RX_BAD_CODE_LSB",
"address_offset": "0x0660",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_CODE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx bad code reg0.
  Increment for 64B/66B code violations.
  This signal indicates that the RX PCS receive state machine is in the RX_E state as specified by the IEEE Std 802.3-2015. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618336,
},
"STAT_RX_BAD_CODE_MSB": {"description": "STAT_RX_BAD_CODE_MSB",
"address_offset": "0x0664",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_CODE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx bad code reg1.
  Increment for 64B/66B code violations.
  This signal indicates that the RX PCS receive state machine is in the RX_E state as specified by the IEEE Std 802.3-2015.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618340,
},
"STAT_RX_ERROR_LSB": {"description": "STAT_RX_ERROR_LSB",
"address_offset": "0x0668",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx error reg0.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates a mismatch occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618344,
},
"STAT_RX_ERROR_MSB": {"description": "STAT_RX_ERROR_MSB",
"address_offset": "0x066C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx error reg1.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates a mismatch occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618348,
},
"STAT_RX_RSFEC_CORRECTED_CW_INC_LSB": {"description": "STAT_RX_RSFEC_CORRECTED_CW_INC_LSB",
"address_offset": "0x0670",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_CORRECTED_CW_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec corrected cw inc reg0.
  Increment for corrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618352,
},
"STAT_RX_RSFEC_CORRECTED_CW_INC_MSB": {"description": "STAT_RX_RSFEC_CORRECTED_CW_INC_MSB",
"address_offset": "0x0674",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_CORRECTED_CW_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec corrected cw inc reg1.
  Increment for corrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618356,
},
"STAT_RX_RSFEC_UNCORRECTED_CW_INC_LSB": {"description": "STAT_RX_RSFEC_UNCORRECTED_CW_INC_LSB",
"address_offset": "0x0678",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_UNCORRECTED_CW_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec uncorrected cw inc reg0.
  Increment for uncorrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618360,
},
"STAT_RX_RSFEC_UNCORRECTED_CW_INC_MSB": {"description": "STAT_RX_RSFEC_UNCORRECTED_CW_INC_MSB",
"address_offset": "0x067C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_UNCORRECTED_CW_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec uncorrected cw inc reg1.
  Increment for uncorrected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618364,
},
"STAT_RX_RSFEC_ERR_COUNT0_INC_LSB": {"description": "STAT_RX_RSFEC_ERR_COUNT0_INC_LSB",
"address_offset": "0x0680",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_ERR_COUNT0_INC_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx rsfec err count inc reg0.
  Increment for detected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618368,
},
"STAT_RX_RSFEC_ERR_COUNT0_INC_MSB": {"description": "STAT_RX_RSFEC_ERR_COUNT0_INC_MSB",
"address_offset": "0x0684",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_RSFEC_ERR_COUNT0_INC_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx rsfec err count inc reg1.
  Increment for detected errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618372,
},
"STAT_TX_FRAME_ERROR_LSB": {"description": "STAT_TX_FRAME_ERROR_LSB",
"address_offset": "0x06A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FRAME_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx frame error reg0.
  Increment for packets with tx_axis_tuser set to indicate an End of Packet(EOP) abort.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618400,
},
"STAT_TX_FRAME_ERROR_MSB": {"description": "STAT_TX_FRAME_ERROR_MSB",
"address_offset": "0x06A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_FRAME_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx frame error reg1.
  Increment for packets with tx_axis_tuser set to indicate an End of Packet(EOP) abort.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618404,
},
"STAT_TX_TOTAL_PACKETS_LSB": {"description": "STAT_TX_TOTAL_PACKETS_LSB",
"address_offset": "0x0700",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total packets reg0.
  Increment for the total number of packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618496,
},
"STAT_TX_TOTAL_PACKETS_MSB": {"description": "STAT_TX_TOTAL_PACKETS_MSB",
"address_offset": "0x0704",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total packets reg1.
  Increment for the total number of packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618500,
},
"STAT_TX_TOTAL_GOOD_PACKETS_LSB": {"description": "STAT_TX_TOTAL_GOOD_PACKETS_LSB",
"address_offset": "0x0708",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total good packets reg0.
  Increment for the total number of good packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618504,
},
"STAT_TX_TOTAL_GOOD_PACKETS_MSB": {"description": "STAT_TX_TOTAL_GOOD_PACKETS_MSB",
"address_offset": "0x070C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total good packets reg1.
  Increment for the total number of good packets transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618508,
},
"STAT_TX_TOTAL_BYTES_LSB": {"description": "STAT_TX_TOTAL_BYTES_LSB",
"address_offset": "0x0710",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total bytes reg0.
  Increment for the total number of bytes transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618512,
},
"STAT_TX_TOTAL_BYTES_MSB": {"description": "STAT_TX_TOTAL_BYTES_MSB",
"address_offset": "0x0714",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total bytes reg1.
  Increment for the total number of bytes transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618516,
},
"STAT_TX_TOTAL_GOOD_BYTES_LSB": {"description": "STAT_TX_TOTAL_GOOD_BYTES_LSB",
"address_offset": "0x0718",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx total good bytes reg0.
  Increment for the total number of good bytes transmitted.
  This value is only non-zero when a packet is transmitted completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618520,
},
"STAT_TX_TOTAL_GOOD_BYTES_MSB": {"description": "STAT_TX_TOTAL_GOOD_BYTES_MSB",
"address_offset": "0x071C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_TOTAL_GOOD_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx total good bytes reg1.
  Increment for the total number of good bytes transmitted.
  This value is only non-zero when a packet is transmitted completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618524,
},
"STAT_TX_PACKET_64_BYTES_LSB": {"description": "STAT_TX_PACKET_64_BYTES_LSB",
"address_offset": "0x0720",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_64_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 64 bytes reg0.
  Increment for good and bad packets transmitted that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618528,
},
"STAT_TX_PACKET_64_BYTES_MSB": {"description": "STAT_TX_PACKET_64_BYTES_MSB",
"address_offset": "0x0724",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_64_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 64 bytes reg1.
  Increment for good and bad packets transmitted that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618532,
},
"STAT_TX_PACKET_65_127_BYTES_LSB": {"description": "STAT_TX_PACKET_65_127_BYTES_LSB",
"address_offset": "0x0728",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_65_127_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 65 - 127 bytes reg0.
  Increment for good and bad packets transmitted that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618536,
},
"STAT_TX_PACKET_65_127_BYTES_MSB": {"description": "STAT_TX_PACKET_65_127_BYTES_MSB",
"address_offset": "0x072C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_65_127_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 65-127 bytes reg1.
  Increment for good and bad packets transmitted that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618540,
},
"STAT_TX_PACKET_128_255_BYTES_LSB": {"description": "STAT_TX_PACKET_128_255_BYTES_LSB",
"address_offset": "0x0730",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_128_255_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 128-255 bytes reg0.
  Increment for good and bad packets transmitted that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618544,
},
"STAT_TX_PACKET_128_255_BYTES_MSB": {"description": "STAT_TX_PACKET_128_255_BYTES_MSB",
"address_offset": "0x0734",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_128_255_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 128-255 bytes reg1.
  Increment for good and bad packets transmitted that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618548,
},
"STAT_TX_PACKET_256_511_BYTES_LSB": {"description": "STAT_TX_PACKET_256_511_BYTES_LSB",
"address_offset": "0x0738",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_256_511_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 256-511 bytes reg0.
  Increment for good and bad packets transmitted that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618552,
},
"STAT_TX_PACKET_256_511_BYTES_MSB": {"description": "STAT_TX_PACKET_256_511_BYTES_MSB",
"address_offset": "0x073C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_256_511_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 256-511 bytes reg1.
  Increment for good and bad packets transmitted that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618556,
},
"STAT_TX_PACKET_512_1023_BYTES_LSB": {"description": "STAT_TX_PACKET_512_1023_BYTES_LSB",
"address_offset": "0x0740",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_512_1023_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 512-1023 bytes reg0.
  Increment for good and bad packets transmitted that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618560,
},
"STAT_TX_PACKET_512_1023_BYTES_MSB": {"description": "STAT_TX_PACKET_512_1023_BYTES_MSB",
"address_offset": "0x0744",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_512_1023_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 512-1023 bytes reg1.
  Increment for good and bad packets transmitted that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618564,
},
"STAT_TX_PACKET_1024_1518_BYTES_LSB": {"description": "STAT_TX_PACKET_1024_1518_BYTES_LSB",
"address_offset": "0x0748",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1024_1518_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1024-1518 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618568,
},
"STAT_TX_PACKET_1024_1518_BYTES_MSB": {"description": "STAT_TX_PACKET_1024_1518_BYTES_MSB",
"address_offset": "0x074C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1024_1518_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1024-1518 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618572,
},
"STAT_TX_PACKET_1519_1522_BYTES_LSB": {"description": "STAT_TX_PACKET_1519_1522_BYTES_LSB",
"address_offset": "0x0750",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1519_1522_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1519-1522 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,519 to 1,522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618576,
},
"STAT_TX_PACKET_1519_1522_BYTES_MSB": {"description": "STAT_TX_PACKET_1519_1522_BYTES_MSB",
"address_offset": "0x0754",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1519_1522_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1519-1522 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,519 to 1,522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618580,
},
"STAT_TX_PACKET_1523_1548_BYTES_LSB": {"description": "STAT_TX_PACKET_1523_1548_BYTES_LSB",
"address_offset": "0x0758",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1523_1548_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1523-1548 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618584,
},
"STAT_TX_PACKET_1523_1548_BYTES_MSB": {"description": "STAT_TX_PACKET_1523_1548_BYTES_MSB",
"address_offset": "0x075C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1523_1548_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1523-1548 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618588,
},
"STAT_TX_PACKET_1549_2047_BYTES_LSB": {"description": "STAT_TX_PACKET_1549_2047_BYTES_LSB",
"address_offset": "0x0760",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1549_2047_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 1549-2047 bytes reg0.
  Increment for good and bad packets transmitted that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618592,
},
"STAT_TX_PACKET_1549_2047_BYTES_MSB": {"description": "STAT_TX_PACKET_1549_2047_BYTES_MSB",
"address_offset": "0x0764",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_1549_2047_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 1549-2047 bytes reg1.
  Increment for good and bad packets transmitted that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618596,
},
"STAT_TX_PACKET_2048_4095_BYTES_LSB": {"description": "STAT_TX_PACKET_2048_4095_BYTES_LSB",
"address_offset": "0x0768",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_2048_4095_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 2048-4095 bytes reg0.
  Increment for good and bad packets transmitted that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618600,
},
"STAT_TX_PACKET_2048_4095_BYTES_MSB": {"description": "STAT_TX_PACKET_2048_4095_BYTES_MSB",
"address_offset": "0x076C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_2048_4095_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 2048-4095 bytes reg1.
  Increment for good and bad packets transmitted that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618604,
},
"STAT_TX_PACKET_4096_8191_BYTES_LSB": {"description": "STAT_TX_PACKET_4096_8191_BYTES_LSB",
"address_offset": "0x0770",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_4096_8191_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 4096-8191 bytes reg0.
  Increment for good and bad packets transmitted that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618608,
},
"STAT_TX_PACKET_4096_8191_BYTES_MSB": {"description": "STAT_TX_PACKET_4096_8191_BYTES_MSB",
"address_offset": "0x0774",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_4096_8191_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 4096-8191 bytes reg1.
  Increment for good and bad packets transmitted that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618612,
},
"STAT_TX_PACKET_8192_9215_BYTES_LSB": {"description": "STAT_TX_PACKET_8192_9215_BYTES_LSB",
"address_offset": "0x0778",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_8192_9215_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet 8192-9215 bytes reg0.
  Increment for good and bad packets transmitted that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618616,
},
"STAT_TX_PACKET_8192_9215_BYTES_MSB": {"description": "STAT_TX_PACKET_8192_9215_BYTES_MSB",
"address_offset": "0x077C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_8192_9215_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet 8192-9215 bytes reg1.
  Increment for good and bad packets transmitted that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618620,
},
"STAT_TX_PACKET_LARGE_LSB": {"description": "STAT_TX_PACKET_LARGE_LSB",
"address_offset": "0x0780",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_LARGE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet large reg0.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618624,
},
"STAT_TX_PACKET_LARGE_MSB": {"description": "STAT_TX_PACKET_LARGE_MSB",
"address_offset": "0x0784",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_LARGE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet large reg1.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618628,
},
"STAT_TX_PACKET_SMALL_LSB": {"description": "STAT_TX_PACKET_SMALL_LSB",
"address_offset": "0x0788",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_SMALL_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx packet small reg0.
  Increment for all packets that are less than 64 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618632,
},
"STAT_TX_PACKET_SMALL_MSB": {"description": "STAT_TX_PACKET_SMALL_MSB",
"address_offset": "0x078C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PACKET_SMALL_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx packet small reg1.
  Increment for all packets that are less than 64 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618636,
},
"STAT_TX_BAD_FCS_LSB": {"description": "STAT_TX_BAD_FCS_LSB",
"address_offset": "0x07B8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx bad fcs reg0.
  Increment for packets greater than 64 bytes that have FCS errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618680,
},
"STAT_TX_BAD_FCS_MSB": {"description": "STAT_TX_BAD_FCS_MSB",
"address_offset": "0x07BC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx bad fcs reg1.
  Increment for packets greater than 64 bytes that have FCS errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618684,
},
"STAT_TX_UNICAST_LSB": {"description": "STAT_TX_UNICAST_LSB",
"address_offset": "0x07D0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_UNICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx unicast reg0.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618704,
},
"STAT_TX_UNICAST_MSB": {"description": "STAT_TX_UNICAST_MSB",
"address_offset": "0x07D4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_UNICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx unicast reg1.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618708,
},
"STAT_TX_MULTICAST_LSB": {"description": "STAT_TX_MULTICAST_LSB",
"address_offset": "0x07D8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MULTICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx multicast reg0.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618712,
},
"STAT_TX_MULTICAST_MSB": {"description": "STAT_TX_MULTICAST_MSB",
"address_offset": "0x07DC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MULTICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx multicast reg1.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618716,
},
"STAT_TX_BROADCAST_LSB": {"description": "STAT_TX_BROADCAST_LSB",
"address_offset": "0x07E0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BROADCAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx broadcast reg0.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618720,
},
"STAT_TX_BROADCAST_MSB": {"description": "STAT_TX_BROADCAST_MSB",
"address_offset": "0x07E4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_BROADCAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx broadcast reg1.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618724,
},
"STAT_TX_VLAN_LSB": {"description": "STAT_TX_VLAN_LSB",
"address_offset": "0x07E8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_VLAN_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx vlan reg0.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618728,
},
"STAT_TX_VLAN_MSB": {"description": "STAT_TX_VLAN_MSB",
"address_offset": "0x07EC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_VLAN_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx vlan reg1.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618732,
},
"STAT_TX_PAUSE_LSB": {"description": "STAT_TX_PAUSE_LSB",
"address_offset": "0x07F0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx pause reg0.
  Increment for 802.3x MAC Pause Packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618736,
},
"STAT_TX_PAUSE_MSB": {"description": "STAT_TX_PAUSE_MSB",
"address_offset": "0x07F4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx pause reg1.
  Increment for 802.3x MAC Pause Packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618740,
},
"STAT_TX_USER_PAUSE_LSB": {"description": "STAT_TX_USER_PAUSE_LSB",
"address_offset": "0x07F8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_USER_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx user pause reg0.
  Increment for Priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618744,
},
"STAT_TX_USER_PAUSE_MSB": {"description": "STAT_TX_USER_PAUSE_MSB",
"address_offset": "0x07FC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_USER_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx user pause reg1.
  Increment for Priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618748,
},
"STAT_RX_TOTAL_PACKETS_LSB": {"description": "STAT_RX_TOTAL_PACKETS_LSB",
"address_offset": "0x0808",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total packets reg0.
  Increment for the total number of packets received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618760,
},
"STAT_RX_TOTAL_PACKETS_MSB": {"description": "STAT_RX_TOTAL_PACKETS_MSB",
"address_offset": "0x080C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total packets reg1.
  Increment for the total number of packets received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618764,
},
"STAT_RX_TOTAL_GOOD_PACKETS_LSB": {"description": "STAT_RX_TOTAL_GOOD_PACKETS_LSB",
"address_offset": "0x0810",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_PACKETS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total good packets reg0.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618768,
},
"STAT_RX_TOTAL_GOOD_PACKETS_MSB": {"description": "STAT_RX_TOTAL_GOOD_PACKETS_MSB",
"address_offset": "0x0814",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_PACKETS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total good packets reg1.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618772,
},
"STAT_RX_TOTAL_BYTES_LSB": {"description": "STAT_RX_TOTAL_BYTES_LSB",
"address_offset": "0x0818",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total bytes reg0.
  Increment for the total number of bytes received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618776,
},
"STAT_RX_TOTAL_BYTES_MSB": {"description": "STAT_RX_TOTAL_BYTES_MSB",
"address_offset": "0x081C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total bytes reg1.
  Increment for the total number of bytes received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618780,
},
"STAT_RX_TOTAL_GOOD_BYTES_LSB": {"description": "STAT_RX_TOTAL_GOOD_BYTES_LSB",
"address_offset": "0x0820",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx total good bytes reg0.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618784,
},
"STAT_RX_TOTAL_GOOD_BYTES_MSB": {"description": "STAT_RX_TOTAL_GOOD_BYTES_MSB",
"address_offset": "0x0824",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOTAL_GOOD_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx total good bytes reg1.
  Increment for the total number of good bytes received.
  This value is only non-zero when a packet is received completely and contains no errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618788,
},
"STAT_RX_PACKET_64_BYTES_LSB": {"description": "STAT_RX_PACKET_64_BYTES_LSB",
"address_offset": "0x0828",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_64_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 64 bytes reg0.
  Increment for good and bad packets received that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618792,
},
"STAT_RX_PACKET_64_BYTES_MSB": {"description": "STAT_RX_PACKET_64_BYTES_MSB",
"address_offset": "0x082C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_64_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 64 bytes reg1.
  Increment for good and bad packets received that contain 64 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618796,
},
"STAT_RX_PACKET_65_127_BYTES_LSB": {"description": "STAT_RX_PACKET_65_127_BYTES_LSB",
"address_offset": "0x0830",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_65_127_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 65-127 bytes reg0.
  Increment for good and bad packets received that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618800,
},
"STAT_RX_PACKET_65_127_BYTES_MSB": {"description": "STAT_RX_PACKET_65_127_BYTES_MSB",
"address_offset": "0x0834",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_65_127_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 65-127 bytes reg1.
  Increment for good and bad packets received that contain 65 to 127 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618804,
},
"STAT_RX_PACKET_128_255_BYTES_LSB": {"description": "STAT_RX_PACKET_128_255_BYTES_LSB",
"address_offset": "0x0838",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_128_255_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 128-255 bytes reg0.
  Increment for good and bad packets received that contain 128 to 255 bytes. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618808,
},
"STAT_RX_PACKET_128_255_BYTES_MSB": {"description": "STAT_RX_PACKET_128_255_BYTES_MSB",
"address_offset": "0x083C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_128_255_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 128-255 bytes reg1.
  Increment for good and bad packets received that contain 128 to 255 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618812,
},
"STAT_RX_PACKET_256_511_BYTES_LSB": {"description": "STAT_RX_PACKET_256_511_BYTES_LSB",
"address_offset": "0x0840",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_256_511_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 256-511 bytes reg0.
  Increment for good and bad packets received that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618816,
},
"STAT_RX_PACKET_256_511_BYTES_MSB": {"description": "STAT_RX_PACKET_256_511_BYTES_MSB",
"address_offset": "0x0844",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_256_511_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 256-511 bytes reg1.
  Increment for good and bad packets received that contain 256 to 511 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618820,
},
"STAT_RX_PACKET_512_1023_BYTES_LSB": {"description": "STAT_RX_PACKET_512_1023_BYTES_LSB",
"address_offset": "0x0848",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_512_1023_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 512-1023 bytes reg0.
  Increment for good and bad packets received that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618824,
},
"STAT_RX_PACKET_512_1023_BYTES_MSB": {"description": "STAT_RX_PACKET_512_1023_BYTES_MSB",
"address_offset": "0x084C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_512_1023_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 512-1023 bytes reg1.
  Increment for good and bad packets received that contain 512 to 1,023 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618828,
},
"STAT_RX_PACKET_1024_1518_BYTES_LSB": {"description": "STAT_RX_PACKET_1024_1518_BYTES_LSB",
"address_offset": "0x0850",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1024_1518_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1024-1518 bytes reg0.
  Increment for good and bad packets received that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618832,
},
"STAT_RX_PACKET_1024_1518_BYTES_MSB": {"description": "STAT_RX_PACKET_1024_1518_BYTES_MSB",
"address_offset": "0x0854",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1024_1518_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1024-1518 bytes reg1.
  Increment for good and bad packets received that contain 1,024 to 1,518 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618836,
},
"STAT_RX_PACKET_1519_1522_BYTES_LSB": {"description": "STAT_RX_PACKET_1519_1522_BYTES_LSB",
"address_offset": "0x0858",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1519_1522_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1519-1522 bytes reg0.
  Increment for good and bad packets received that contain 1519 to 1522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618840,
},
"STAT_RX_PACKET_1519_1522_BYTES_MSB": {"description": "STAT_RX_PACKET_1519_1522_BYTES_MSB",
"address_offset": "0x085C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1519_1522_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1519-1522 bytes reg1.
  Increment for good and bad packets received that contain 1519 to 1522 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618844,
},
"STAT_RX_PACKET_1523_1548_BYTES_LSB": {"description": "STAT_RX_PACKET_1523_1548_BYTES_LSB",
"address_offset": "0x0860",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1523_1548_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1523-1548 bytes reg0.
  Increment for good and bad packets received that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618848,
},
"STAT_RX_PACKET_1523_1548_BYTES_MSB": {"description": "STAT_RX_PACKET_1523_1548_BYTES_MSB",
"address_offset": "0x0864",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1523_1548_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1523-1548 bytes reg1.
  Increment for good and bad packets received that contain 1,523 to 1,548 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618852,
},
"STAT_RX_PACKET_1549_2047_BYTES_LSB": {"description": "STAT_RX_PACKET_1549_2047_BYTES_LSB",
"address_offset": "0x0868",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1549_2047_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 1549-2047 bytes reg0.
  Increment for good and bad packets received that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618856,
},
"STAT_RX_PACKET_1549_2047_BYTES_MSB": {"description": "STAT_RX_PACKET_1549_2047_BYTES_MSB",
"address_offset": "0x086C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_1549_2047_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 1549-2047 bytes reg1.
  Increment for good and bad packets received that contain 1,549 to 2,047 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618860,
},
"STAT_RX_PACKET_2048_4095_BYTES_LSB": {"description": "STAT_RX_PACKET_2048_4095_BYTES_LSB",
"address_offset": "0x0870",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_2048_4095_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 2048-4095 bytes reg0.
  Increment for good and bad packets received that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618864,
},
"STAT_RX_PACKET_2048_4095_BYTES_MSB": {"description": "STAT_RX_PACKET_2048_4095_BYTES_MSB",
"address_offset": "0x0874",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_2048_4095_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 2048-4095 bytes reg1.
  Increment for good and bad packets received that contain 2,048 to 4,095 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618868,
},
"STAT_RX_PACKET_4096_8191_BYTES_LSB": {"description": "STAT_RX_PACKET_4096_8191_BYTES_LSB",
"address_offset": "0x0878",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_4096_8191_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 4096-8191 bytes reg0.
  Increment for good and bad packets received that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618872,
},
"STAT_RX_PACKET_4096_8191_BYTES_MSB": {"description": "STAT_RX_PACKET_4096_8191_BYTES_MSB",
"address_offset": "0x087C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_4096_8191_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 4096-8191 bytes reg1.
  Increment for good and bad packets received that contain 4,096 to 8,191 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618876,
},
"STAT_RX_PACKET_8192_9215_BYTES_LSB": {"description": "STAT_RX_PACKET_8192_9215_BYTES_LSB",
"address_offset": "0x0880",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_8192_9215_BYTES_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet 8192-9215 bytes reg0.
  Increment for good and bad packets received that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618880,
},
"STAT_RX_PACKET_8192_9215_BYTES_MSB": {"description": "STAT_RX_PACKET_8192_9215_BYTES_MSB",
"address_offset": "0x0884",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_8192_9215_BYTES_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet 8192-9215 bytes reg1.
  Increment for good and bad packets received that contain 8,192 to 9,215 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618884,
},
"STAT_RX_PACKET_LARGE_LSB": {"description": "STAT_RX_PACKET_LARGE_LSB",
"address_offset": "0x0888",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_LARGE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet large reg0.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618888,
},
"STAT_RX_PACKET_LARGE_MSB": {"description": "STAT_RX_PACKET_LARGE_MSB",
"address_offset": "0x088C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_LARGE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet large reg1.
  Increment for all packets that are more than 9,215 bytes long.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618892,
},
"STAT_RX_PACKET_SMALL_LSB": {"description": "STAT_RX_PACKET_SMALL_LSB",
"address_offset": "0x0890",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_SMALL_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet small reg0.
  Increment for all packets that are less than 64 bytes long.
  Packets that are less than four bytes are dropped.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618896,
},
"STAT_RX_PACKET_SMALL_MSB": {"description": "STAT_RX_PACKET_SMALL_MSB",
"address_offset": "0x0894",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_SMALL_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet small reg1.
  Increment for all packets that are less than 64 bytes long.
  Packets that are less than four bytes are dropped.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618900,
},
"STAT_RX_UNDERSIZE_LSB": {"description": "STAT_RX_UNDERSIZE_LSB",
"address_offset": "0x0898",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNDERSIZE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx undersize reg0.
  Increment for packets shorter than ctl_rx_min_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618904,
},
"STAT_RX_UNDERSIZE_MSB": {"description": "STAT_RX_UNDERSIZE_MSB",
"address_offset": "0x089C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNDERSIZE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx undersize reg1.
  Increment for packets shorter than ctl_rx_min_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618908,
},
"STAT_RX_FRAGMENT_LSB": {"description": "STAT_RX_FRAGMENT_LSB",
"address_offset": "0x8A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx fragment reg0.
  Increment for packets shorter than ctl_rx_min_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618912,
},
"STAT_RX_FRAGMENT_MSB": {"description": "STAT_RX_FRAGMENT_MSB",
"address_offset": "0x8A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx fragment reg1.
  Increment for packets shorter than ctl_rx_min_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618916,
},
"STAT_RX_OVERSIZE_LSB": {"description": "STAT_RX_OVERSIZE_LSB",
"address_offset": "0x08A8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_OVERSIZE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx oversize reg0.
  Increment for packets longer than ctl_rx_max_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618920,
},
"STAT_RX_OVERSIZE_MSB": {"description": "STAT_RX_OVERSIZE_MSB",
"address_offset": "0x08AC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_OVERSIZE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx oversize reg1.
  Increment for packets longer than ctl_rx_max_packet_len with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618924,
},
"STAT_RX_TOOLONG_LSB": {"description": "STAT_RX_TOOLONG_LSB",
"address_offset": "0x08B0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOOLONG_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx toolong reg0.
  Increment for packets longer than ctl_rx_max_packet_len with good and bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618928,
},
"STAT_RX_TOOLONG_MSB": {"description": "STAT_RX_TOOLONG_MSB",
"address_offset": "0x08B4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TOOLONG_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx toolong reg1.
  Increment for packets longer than ctl_rx_max_packet_len with good and bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618932,
},
"STAT_RX_JABBER_LSB": {"description": "STAT_RX_JABBER_LSB",
"address_offset": "0x08B8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_JABBER_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx jabber reg0.
  Increment for packets longer than ctl_rx_max_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618936,
},
"STAT_RX_JABBER_MSB": {"description": "STAT_RX_JABBER_MSB",
"address_offset": "0x08BC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_JABBER_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx jabber reg1.
  Increment for packets longer than ctl_rx_max_packet_len with bad FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618940,
},
"STAT_RX_BAD_FCS_LSB": {"description": "STAT_RX_BAD_FCS_LSB",
"address_offset": "0x08C0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx bad fcs reg0.
  Bad FCS indicator.
  The value on this bus indicates packets received with a bad FCS, but not a stomped FCS during a cycle.
  This output is pulsed for one clock cycle to indicate an error condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618944,
},
"STAT_RX_BAD_FCS_MSB": {"description": "STAT_RX_BAD_FCS_MSB",
"address_offset": "0x08C4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx bad fcs reg1.
  Bad FCS indicator.
  The value on this bus indicates packets received with a bad FCS, but not a stomped FCS during a cycle.
  This output is pulsed for one clock cycle to indicate an error condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618948,
},
"STAT_RX_PACKET_BAD_FCS_LSB": {"description": "STAT_RX_PACKET_BAD_FCS_LSB",
"address_offset": "0x08C8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_BAD_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx packet bad fcs reg0.
  Increment for packets between 64 and ctl_rx_max_packet_len bytes that have Frame Check Sequence (FCS) errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618952,
},
"STAT_RX_PACKET_BAD_FCS_MSB": {"description": "STAT_RX_PACKET_BAD_FCS_MSB",
"address_offset": "0x08CC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PACKET_BAD_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx packet bad fcs reg1.
  Increment for packets between 64 and ctl_rx_max_packet_len bytes that have Frame Check Sequence (FCS) errors.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618956,
},
"STAT_RX_STOMPED_FCS_LSB": {"description": "STAT_RX_STOMPED_FCS_LSB",
"address_offset": "0x08D0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_STOMPED_FCS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx stomped fcs reg0.
  Stomped FCS indicator.
  The value on this bus indicates the packets were received with a stomped FCS.
  A stomped FCS is defined as the bitwise inverse of the expected good FCS.
  This output is pulsed for one clock cycle to indicate the stomped condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618960,
},
"STAT_RX_STOMPED_FCS_MSB": {"description": "STAT_RX_STOMPED_FCS_MSB",
"address_offset": "0x08D4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_STOMPED_FCS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx stomped fcs reg1.
  Stomped FCS indicator.
  The value on this bus indicates the packets were received with a stomped FCS.
  A stomped FCS is defined as the bitwise inverse of the expected good FCS.
  This output is pulsed for one clock cycle to indicate the stomped condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618964,
},
"STAT_RX_UNICAST_LSB": {"description": "STAT_RX_UNICAST_LSB",
"address_offset": "0x08D8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx unicast reg0.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618968,
},
"STAT_RX_UNICAST_MSB": {"description": "STAT_RX_UNICAST_MSB",
"address_offset": "0x08DC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_UNICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx unicast reg1.
  Increment for good unicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618972,
},
"STAT_RX_MULTICAST_LSB": {"description": "STAT_RX_MULTICAST_LSB",
"address_offset": "0x08E0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MULTICAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx multicast reg0.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618976,
},
"STAT_RX_MULTICAST_MSB": {"description": "STAT_RX_MULTICAST_MSB",
"address_offset": "0x08E4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MULTICAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx multicast reg1.
  Increment for good multicast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618980,
},
"STAT_RX_BROADCAST_LSB": {"description": "STAT_RX_BROADCAST_LSB",
"address_offset": "0x08E8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BROADCAST_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx broadcast reg0.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618984,
},
"STAT_RX_BROADCAST_MSB": {"description": "STAT_RX_BROADCAST_MSB",
"address_offset": "0x08EC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_BROADCAST_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx broadcast reg1.
  Increment for good broadcast packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618988,
},
"STAT_RX_VLAN_LSB": {"description": "STAT_RX_VLAN_LSB",
"address_offset": "0x08F0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VLAN_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx vlan reg0.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618992,
},
"STAT_RX_VLAN_MSB": {"description": "STAT_RX_VLAN_MSB",
"address_offset": "0x08F4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_VLAN_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx vlan reg1.
  Increment for good 802.1Q tagged VLAN packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684618996,
},
"STAT_RX_PAUSE_LSB": {"description": "STAT_RX_PAUSE_LSB",
"address_offset": "0x08F8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx pause reg0.
  Increment for 802.3x MAC Pause packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619000,
},
"STAT_RX_PAUSE_MSB": {"description": "STAT_RX_PAUSE_MSB",
"address_offset": "0x08FC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx pause reg1.
  Increment for 802.3x MAC Pause packet with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619004,
},
"STAT_RX_USER_PAUSE_LSB": {"description": "STAT_RX_USER_PAUSE_LSB",
"address_offset": "0x0900",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_USER_PAUSE_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx user pause reg0.
  Increment for priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619008,
},
"STAT_RX_USER_PAUSE_MSB": {"description": "STAT_RX_USER_PAUSE_MSB",
"address_offset": "0x0904",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_USER_PAUSE_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx user pause reg1.
  Increment for priority based pause packets with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619012,
},
"STAT_RX_INRANGEERR_LSB": {"description": "STAT_RX_INRANGEERR_LSB",
"address_offset": "0x0908",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_INRANGEERR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx inrangeerr reg0.
  Increment for packets with Length field error but with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619016,
},
"STAT_RX_INRANGEERR_MSB": {"description": "STAT_RX_INRANGEERR_MSB",
"address_offset": "0x090C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_INRANGEERR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx inrangeerr reg1.
  Increment for packets with Length field error but with good FCS.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619020,
},
"STAT_RX_TRUNCATED_LSB": {"description": "STAT_RX_TRUNCATED_LSB",
"address_offset": "0x0910",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TRUNCATED_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx truncated reg0.
  Packet truncation indicator.
  1 - Indicates that the current packet in flight is truncated due to its length exceeding ctl_rx_max_packet_len[14:0].
      This output is pulsed for one clock cycle to indicate the truncated condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619024,
},
"STAT_RX_TRUNCATED_MSB": {"description": "STAT_RX_TRUNCATED_MSB",
"address_offset": "0x0914",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TRUNCATED_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx truncated reg1.
  Packet truncation indicator.
  1 - Indicates that the current packet in flight is truncated due to its length exceeding ctl_rx_max_packet_len[14:0].
      This output is pulsed for one clock cycle to indicate the truncated condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619028,
},
"STAT_RX_TEST_PATTERN_MISMATCH_LSB": {"description": "STAT_RX_TEST_PATTERN_MISMATCH_LSB",
"address_offset": "0x0918",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TEST_PATTERN_MISMATCH_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx test pattern mismatch reg0.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates how many mismatches occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set to a 1.
  This output can be used to generate MDIO register as defined in Clause 45.
  This output is pulsed for one clock cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619032,
},
"STAT_RX_TEST_PATTERN_MISMATCH_MSB": {"description": "STAT_RX_TEST_PATTERN_MISMATCH_MSB",
"address_offset": "0x091C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_TEST_PATTERN_MISMATCH_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx test pattern mismatch reg1.
  Test pattern mismatch increment.
  A non-zero value in any cycle indicates how many mismatches occurred for the test pattern in the RX core.
  This output is only active when ctl_rx_test_pattern is set to a 1.
  This output can be used to generate MDIO register as defined in Clause 45.
  This output is pulsed for one clock cycle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619036,
},
"STAT_FEC_INC_CORRECT_COUNT_LSB": {"description": "STAT_FEC_INC_CORRECT_COUNT_LSB",
"address_offset": "0x0920",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CORRECT_COUNT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat fec inc correct count reg0.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected and corrected a bit errors in the corresponding frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619040,
},
"STAT_FEC_INC_CORRECT_COUNT_MSB": {"description": "STAT_FEC_INC_CORRECT_COUNT_MSB",
"address_offset": "0x0924",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CORRECT_COUNT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat fec inc correct count reg1.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected and corrected a bit errors in the corresponding frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619044,
},
"STAT_FEC_INC_CANT_CORRECT_COUNT_LSB": {"description": "STAT_FEC_INC_CANT_CORRECT_COUNT_LSB",
"address_offset": "0x0928",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CANT_CORRECT_COUNT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat fec inc cant correct count reg0.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619048,
},
"STAT_FEC_INC_CANT_CORRECT_COUNT_MSB": {"description": "STAT_FEC_INC_CANT_CORRECT_COUNT_MSB",
"address_offset": "0x092C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_FEC_INC_CANT_CORRECT_COUNT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat fec inc cant correct count reg1.
  This signal will be asserted roughly every 32 words, while the ctl_rx_fec_enable is asserted, if the FEC decoder detected bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619052,
},
"STAT_TX_MM_STATUS_LSB": {"description": "STAT_TX_MM_STATUS_LSB",
"address_offset": "0x0980",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_STATUS_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm status.
  1 - when a preemptable packet (initial fragment or complete packet) is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619136,
},
"STAT_TX_MM_STATUS_MSB": {"description": "STAT_TX_MM_STATUS_MSB",
"address_offset": "0x0984",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_STATUS_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm status.
  1 - when a preemptable packet (initial fragment or complete packet) is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619140,
},
"STAT_TX_MM_FRAGMENT_LSB": {"description": "STAT_TX_MM_FRAGMENT_LSB",
"address_offset": "0x0988",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm fragment.
  1 - when a continuation fragment of an preemptable packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619144,
},
"STAT_TX_MM_FRAGMENT_MSB": {"description": "STAT_TX_MM_FRAGMENT_MSB",
"address_offset": "0x098C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm fragment.
  1 - when a continuation fragment of an preemptable packet is transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619148,
},
"STAT_TX_MM_HOLD_LSB": {"description": "STAT_TX_MM_HOLD_LSB",
"address_offset": "0x0990",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_HOLD_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat tx mm hold.
  Asserted when ctl_hold_request transitions from 1’b0 to 1’b1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619152,
},
"STAT_TX_MM_HOLD_MSB": {"description": "STAT_TX_MM_HOLD_MSB",
"address_offset": "0x0994",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_TX_MM_HOLD_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat tx mm hold.
  Asserted when ctl_hold_request transitions from 1’b0 to 1’b1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619156,
},
"STAT_RX_MM_ASSEMBLY_ERROR_LSB": {"description": "STAT_RX_MM_ASSEMBLY_ERROR_LSB",
"address_offset": "0x0998",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_ASSEMBLY_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm assembly error.
  Asserted when errors are detected during fragment assembly.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619160,
},
"STAT_RX_MM_ASSEMBLY_ERROR_MSB": {"description": "STAT_RX_MM_ASSEMBLY_ERROR_MSB",
"address_offset": "0x099C",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_ASSEMBLY_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm assembly error.
  Asserted when errors are detected during fragment assembly.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619164,
},
"STAT_RX_MM_FRAME_SMD_ERROR_LSB": {"description": "STAT_RX_MM_FRAME_SMD_ERROR_LSB",
"address_offset": "0x09A0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_SMD_ERROR_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm frame smd error.
  Asserted when the frame fragment is rejected due to an incorrect SMD value or arriving with SMD-C when no frame is in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619168,
},
"STAT_RX_MM_FRAME_SMD_ERROR_MSB": {"description": "STAT_RX_MM_FRAME_SMD_ERROR_MSB",
"address_offset": "0x09A4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_SMD_ERROR_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm frame smd error.
  Asserted when the frame fragment is rejected due to an incorrect SMD value or arriving with SMD-C when no frame is in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619172,
},
"STAT_RX_MM_FRAME_ASSEMBLY_OK_LSB": {"description": "STAT_RX_MM_FRAME_ASSEMBLY_OK_LSB",
"address_offset": "0x09A8",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_ASSEMBLY_OK_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm frame assembly ok.
  Asserted when all the preemptable frame fragments have been assembled and presented.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619176,
},
"STAT_RX_MM_FRAME_ASSEMBLY_OK_MSB": {"description": "STAT_RX_MM_FRAME_ASSEMBLY_OK_MSB",
"address_offset": "0x09AC",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAME_ASSEMBLY_OK_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm frame assembly ok.
  Asserted when all the preemptable frame fragments have been assembled and presented.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619180,
},
"STAT_RX_MM_FRAGMENT_LSB": {"description": "STAT_RX_MM_FRAGMENT_LSB",
"address_offset": "0x09B0",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAGMENT_REG0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "stat rx mm fragment.
  Asserted when a fragment frame is received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619184,
},
"STAT_RX_MM_FRAGMENT_MSB": {"description": "STAT_RX_MM_FRAGMENT_MSB",
"address_offset": "0x09B4",
"access": "read-only",
"size": "1",
"interface": "s_axi_0",
"fields": {"STAT_RX_MM_FRAGMENT_REG1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "stat rx mm fragment.
  Asserted when a fragment frame is received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684619188,
},
},
}]. Thread: main
